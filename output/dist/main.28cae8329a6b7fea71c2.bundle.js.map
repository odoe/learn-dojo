{"version":3,"sources":["webpack://lib_learn_dojo/HashHistory.ts","webpack://lib_learn_dojo/Router.ts","webpack://lib_learn_dojo/StateHistory.ts","webpack://lib_learn_dojo/./src/site-config.ts","webpack://lib_learn_dojo/./src/routes.ts","webpack://lib_learn_dojo/Outlet.tsx","webpack://lib_learn_dojo/./src/widgets/footer/Footer.tsx","webpack://lib_learn_dojo/./src/widgets/header/Header.tsx","webpack://lib_learn_dojo/./src/widgets/hero/Hero.tsx","webpack://lib_learn_dojo/./src/widgets/signup/SignUp.tsx","webpack://lib_learn_dojo/./src/layouts/Layout.tsx","webpack://lib_learn_dojo/./src/App.tsx","webpack://lib_learn_dojo/./src/main.tsx","webpack://lib_learn_dojo/RouterInjector.ts","webpack://lib_learn_dojo/WeakMap.ts","webpack://lib_learn_dojo/Set.ts","webpack://lib_learn_dojo/util.ts","webpack://lib_learn_dojo/array.ts","webpack://lib_learn_dojo/diff.ts","webpack://lib_learn_dojo/RegistryHandler.ts","webpack://lib_learn_dojo/vdom.ts","webpack://lib_learn_dojo/object.ts","webpack://lib_learn_dojo/Map.ts","webpack://lib_learn_dojo/Registry.ts","webpack://lib_learn_dojo/Link.ts","webpack://lib_learn_dojo/Destroyable.ts","webpack://lib_learn_dojo/Evented.ts","webpack://lib_learn_dojo/injector.ts","webpack://lib_learn_dojo/icache.ts","webpack://lib_learn_dojo/block.ts","webpack://lib_learn_dojo/./src/utils/formatter.ts","webpack://lib_learn_dojo/./src/widgets/footer/Footer.m.css","webpack://lib_learn_dojo/./src/widgets/header/Header.m.css","webpack://lib_learn_dojo/./src/widgets/hero/Hero.m.css","webpack://lib_learn_dojo/./src/widgets/signup/SignUp.m.css","webpack://lib_learn_dojo/./src/layouts/Layout.m.css"],"names":["HashHistory_HashHistory","[object Object]","window","global","onChange","this","_onChange","path","normalizePath","_window","location","hash","_current","_onChangeFunction","addEventListener","replace","prefix","current","removeEventListener","PARAM","paramRegExp","RegExp","ROUTE_SEGMENT_SCORE","DYNAMIC_SEGMENT_PENALTY","matchingParams","params","previousParams","Object","keys","every","key","Router_Router","Evented","config","options","super","_routes","_routeMap","create","_matchedRoutes","_matchedOutletMap","Map","_currentParams","_currentQueryParams","requestedPath","_stripLeadingSlash","previousMatchedRoutes","clear","queryParamString","split","_getQueryParams","segments","routeConfig","routeConfigs","map","route","parent","undefined","type","matchedRoutes","pop","segmentIndex","paramIndex","routeMatch","length","segment","shift","assign","push","children","childRoute","matchedRouteId","matchedRoute","currentMatch","score","id","title","_options","setDocumentTitle","queryParams","document","matchedRouteContext","outlet","isError","isExact","previousMatchedOutlet","routeMap","get","set","emit","action","errorRoute","previousMatchedOutletKeys","i","_currentMatchedRoute","context","resetScroll","scroll","e","_register","autostart","start","_history","HistoryManager","base","_defaultRoute","link","setPath","linkPath","fullPath","fullQueryParams","reduce","param","index","defaultParams","fullParams","routeId","outletId","currentParams","slice","routes","parentRoute","defaultRoute","parsedPath","test","queryParam","queryParameters","value","trailingSlash","leadingSlash","stripBase","indexOf","sanatizePath","StateHistory_StateHistory","pathName","pathname","_base","search","has","TypeError","history","pushState","_setBasePath","meta","author","description","footerLinks","href","text","logo","ROUTER_KEY","routing_Outlet","vdom","icache","middleware_icache","injector","middleware_injector","diffProperty","invalidator","properties","factory","middleware","next","routerKey","currentRouterKey","currentHandle","handle","subscribe","matcher","outletChildren","router","currentRouteContext","getMatchedRoute","routeContextMap","getOutlet","matches","filter","renderer","dateFormatter","Intl","DateTimeFormat","createLinks","links","classes","Footer_m","rel","target","aria-label","srcset","_a","alt","loading","src","asImage","Footer","d","Date","buildTime","format","name","getFullYear","Header","Header_m","Link","to","isOutlet","Hero","Hero_m","SignUp","SignUp_m","method","novalidate","for","placeholder","Layout","Layout_m","charset","content","App","siteMeta","matchMap","list","Loadable__","__autoRegistryItem","label","registryItem","__autoRegistryItems","BlogList","blog","Blog","main_registry","Registry","main_router","registry","routerOptions","__rest","hasInjector","Error","defineInjector","on","registerRouterInjector","r","domNode","getElementById","mount","shim_WeakMap","WeakMap","shim_Set","Set","wrapNative","nativeFunction","args","apply","from","of","copyWithin","fill","find","findIndex","includes","flat","flatMap","Array","prototype","isObjectOrArray","toString","call","isArray","reference","previousProperty","newProperty","changed","auto","depth","result","_type","ignore","validOldProperty","validNewProperty","previousKeys","newKeys","some","shallow","core_RegistryHandler","_registry","_registryWidgetLabelMap","_registryInjectorLabelMap","own","destroy","baseRegistry","delete","widget","define","Boolean","globalPrecedence","_get","getFunctionName","labelMap","registries","item","registeredLabels","event","EMPTY_ARRAY","nodeOperations","NAMESPACE_SVG","NAMESPACE_W3","NAMESPACE_XLINK","WNODE","VNODE","DOMVNODE","scope","setRendering","rendering","incrementBlockCount","blocksPending","decrementBlockCount","isTextNode","nodeType","isWNodeWrapper","child","isWNode","node","isVNodeWrapper","isVNode","isVirtualWrapper","tag","isBodyWrapper","wrapper","isHeadWrapper","isSpecialWrapper","isDomVNode","w","widgetConstructorOrNode","__children__","widgetConstructor","v","propertiesOrChildren","deferredPropertiesCallback","styles","newProperties","nodeClasses","nodeStyles","nodeProperties","REGISTRY_ITEM","FromRegistry","__properties__","tsx","Infinity","buildPreviousProperties","diffType","attributes","deferredProperties","events","forEach","propName","attrName","getAttribute","props","property","same","dnode1","dnode2","widgetConstructor1","widgetConstructor2","props1","props2","instance","findIndexOfChild","sameAs","createClassPropValue","classNames","className","updateAttribute","attrValue","namespace","setAttributeNS","removeAttribute","setAttribute","arrayFrom","arr","createFactory","callback","middlewares","isWidget","middlewareName","isFactory","returns","widgetInstanceMap","widgetMetaMap","requestedDomNodes","wrapperId","metaId","addNodeToMap","widgetMeta","nodeMap","destroyHandles","destroyMap","middlewareIds","size","vdom_invalidator","widgetId","mountNode","contains","body","add","propertyName","propertiesOrDiff","diff","customDiffMap","customDiffProperties","propertyDiffMap","originalProperties","vdom_destroy","destroyFunction","getRegistry","registryHandler","defer","isDeferred","deferRefs","wrapFunctionProperties","propertyNames","unwrap","__webpack_exports__","_renderScheduled","parentInvalidate","_appWrapperId","_mountOptions","sync","merge","transition","_invalidationQueue","_processQueue","_deferredProcessQueue","_applicationQueue","_eventMap","_idToWrapperMap","_wrapperSiblingMap","_idToChildrenWrappers","_insertBeforeMap","_nodeToWrapperMap","_deferredRenderCallbacks","_allMergedNodes","_deferredProcessIds","nodeOperation","propValue","previousValue","updateEvent","eventName","currentValue","previousEvent","evt","removeOrphanedEvents","previousProperties","onlyEvents","isEvent","substr","eventCallback","resolveRegistryItem","owningNode","instanceData","registryLabel","isLazyDefine","renderedToWrapper","rendered","currentParent","requiresInsertBefore","hasPreviousSiblings","wrappedRendered","hasParentWNode","hasVirtualParentNode","hasCurrentParentChildren","insertBefore","previousItem","nodes","mapNodeToInstance","renderedItem","order","parentId","exitAnimation","hasAnimations","nextParent","owningId","runDeferredProperties","processProperties","findInsertBefore","searchNode","nextSibling","childDomWrapperId","findDomNodeOnParentWrapper","childWrapper","parentNode","setValue","domValue","onInputValue","onSelectValue","setProperties","currentProperties","nextWrapper","includesEventsAndAttributes","propNames","propCount","previousClassString","currentClassString","merged","domClasses","styleNames","styleCount","j","styleName","newStyleValue","style","tagName","lastIndexOf","_createDeferredRenderCallback","callbacks","_scheduleDeferredRenderCallbacks","run","requestAnimationFrame","previousAttributes","attrNames","attrCount","updateAttributes","_schedule","_runInvalidationQueue","getWNodeWrapper","invalidationQueue","previouslyRendered","sort","a","b","_runProcessQueue","sibling","_updateWidget","_runDomInstructionQueue","_cleanUpMergedNodes","mergedNode","removeChild","_process","reverse","parentDomNode","onAttach","parentElement","enterAnimation","enterAnimationActive","enter","owningWrapper","nodeHandler","inserted","currentDomNode","replaceChild","exitAnimationActive","exit","attached","addRoot","onDetach","createKeyMap","wrappers","mergeNodes","oldIndex","newIndex","currentLength","nextLength","instructions","currentKeys","nextKeys","currentWrapper","domElement","toUpperCase","mergeNodeIndex","splice","_processMergeNodes","_processOne","dom","currentNode","parentWrapper","findParentDomNode","isVirtual","isBody","isHead","data","createTextNode","childNodes","head","createElementNS","createElement","_createDom","invalidate","Constructor","dirty","__setProperties__","__setChildren__","__render__","widgetName","propertiesCalled","ids","resolveMiddleware","results","uniqueId","payload","createWidgetOptions","resolvedMiddleware","_createWidget","currentChildren","_updateDom","isSpecial","remove","specialIds","wrapperChildren","_removeDom","processResult","_removeWidget","didRender","customProperties","diffMap","runDiffs","ignoreProperties","propertiesDiff","values","childId","mountOptions","renderResult","wrapNodes","siblingId","unmount","cancelAnimationFrame","object_assign","getOwnPropertyDescriptor","getOwnPropertyNames","getOwnPropertySymbols","is","getOwnPropertyDescriptors","entries","__webpack_require__","WIDGET_BASE_TYPE","isWidgetBaseConstructor","isWidgetFunction","isWNodeFactory","_shim_Promise__WEBPACK_IMPORTED_MODULE_0__","_shim_Map__WEBPACK_IMPORTED_MODULE_1__","_core_Evented__WEBPACK_IMPORTED_MODULE_2__","widgetLabel","_widgetRegistry","then","widgetCtor","emitLoadedEvent","error","injectorFactory","_injectorRegistry","injectorItem","promise","hasOwnProperty","default","isWidgetConstructorDefaultExport","_core_vdom__WEBPACK_IMPORTED_MODULE_0__","_core_middleware_injector__WEBPACK_IMPORTED_MODULE_2__","onClick","linkProps","onclick","defaultPrevented","button","metaKey","ctrlKey","_core_has__WEBPACK_IMPORTED_MODULE_1__","preventDefault","noop","Promise","resolve","destroyed","Destroyable_Destroyable","handles","_handles","Evented_Evented","regexMap","listenersMap","methods","globString","targetString","regex","isGlobMatch","listener","_addListener","listeners","_vdom__WEBPACK_IMPORTED_MODULE_0__","getInjector","_shim_Map__WEBPACK_IMPORTED_MODULE_0__","_vdom__WEBPACK_IMPORTED_MODULE_1__","cacheMap","api","cachedValue","status","getOrSet","_icache__WEBPACK_IMPORTED_MODULE_1__","block","blockFactory","module","argsString","JSON","stringify","moduleId","async","pause","resume","formatter","year","month","day","date","exports"," _key","root","details","image","email","form","gridcontainer","column","gdpr","gdprcheck","checkbox","info","input","fieldset","submit","section"],"mappings":";;;;;;;;oKAGO,MAAMA,EAKZC,aAAYC,OAAEA,EAASC,EAAA,QAAOD,OAAME,SAAEA,IAgC9BC,KAAAC,UAAY,MACnB,MAAMC,EAAOF,KAAKG,cAAcH,KAAKI,QAAQC,SAASC,MAClDJ,IAASF,KAAKO,WACjBP,KAAKO,SAAWL,EAChBF,KAAKQ,kBAAkBR,KAAKO,aAnC7BP,KAAKQ,kBAAoBT,EACzBC,KAAKI,QAAUP,EACfG,KAAKI,QAAQK,iBAAiB,aAAcT,KAAKC,WAAW,GAC5DD,KAAKO,SAAWP,KAAKG,cAAcH,KAAKI,QAAQC,SAASC,MACzDN,KAAKQ,kBAAkBR,KAAKO,UAGtBX,cAAcM,GACpB,OAAOA,EAAKQ,QAAQ,IAAK,IAGnBd,OAAOM,GACb,MAAgB,MAAZA,EAAK,OACGA,IAELA,EAGDN,IAAIM,GACVF,KAAKI,QAAQC,SAASC,KAAON,KAAKW,OAAOT,GACzCF,KAAKC,YAGNW,cACC,OAAOZ,KAAKO,SAGNX,UACNI,KAAKI,QAAQS,oBAAoB,aAAcb,KAAKC,YCtBtD,MAAMa,EAAQ,YAERC,EAAc,IAAIC,OAAO,UAyBzBC,EAAsB,EACtBC,EAA0B,EAEhC,SAASC,GAAiBC,OAAQC,IAAgCD,OAAEA,IAEnE,QADiBE,OAAOC,KAAKF,GAAgBG,MAAOC,GAAQJ,EAAeI,KAASL,EAAOK,KAIpFH,OAAOC,KAAKH,GAAQI,MAAOC,GAAQJ,EAAeI,KAASL,EAAOK,IAGnE,MAAMC,UAAeC,EAAA,EAa3B/B,YAAYgC,EAAuBC,EAAyB,IAC3DC,QAZO9B,KAAA+B,QAAmB,GACnB/B,KAAAgC,UAAwCV,OAAOW,OAAO,MACtDjC,KAAAkC,eAAoDZ,OAAOW,OAAO,MAClEjC,KAAAmC,kBAAoB,IAAIC,IACxBpC,KAAAqC,eAAyB,GACzBrC,KAAAsC,oBAA8B,GAkM9BtC,KAAAC,UAAY,CAACsC,IACpBA,EAAgBvC,KAAKwC,mBAAmBD,GACxC,MAAME,EAAwBzC,KAAKkC,eACnClC,KAAKkC,eAAiBZ,OAAOW,OAAO,MACpCjC,KAAKmC,kBAAkBO,QACvB,MAAOxC,EAAMyC,GAAoBJ,EAAcK,MAAM,KACrD5C,KAAKsC,oBAAsBtC,KAAK6C,gBAAgBF,GAChD,MAAMG,EAAW5C,EAAK0C,MAAM,KAC5B,IAOIG,EAPAC,EAA+BhD,KAAK+B,QAAQkB,IAAKC,IAAU,CAC9DA,QACAJ,SAAU,IAAIA,GACdK,YAAQC,EACRhC,OAAQ,GACRiC,KAAM,WAGHC,EAAgC,GACpC,KAAQP,EAAcC,EAAaO,OAAQ,CAC1C,MAAML,MAAEA,EAAKC,OAAEA,EAAML,SAAEA,EAAQ1B,OAAEA,GAAW2B,EAC5C,IAAIS,EAAe,EACfH,EAAkB,QAClBI,EAAa,EACbC,GAAa,EACjB,GAAIZ,EAASa,OAAST,EAAMJ,SAASa,OACpCD,GAAa,OAEb,KAAOZ,EAASa,OAAS,GAAG,CAC3B,QAAqCP,IAAjCF,EAAMJ,SAASU,GAA6B,CAC/CH,EAAO,UACP,MAED,MAAMO,EAAUd,EAASe,QACzB,GAAIX,EAAMJ,SAASU,KAAkB1C,EACpCM,EAAO8B,EAAM9B,OAAOqC,MAAiBG,EACrC5D,KAAKqC,eAAcf,OAAAwC,OAAA,GAAQ9D,KAAKqC,eAAmBjB,QAC7C,GAAI8B,EAAMJ,SAASU,KAAkBI,EAAS,CACpDF,GAAa,EACb,MAEDF,IAIEE,IACHX,EAAYM,KAAOA,EACnBC,EAAcS,KAAK,CAAEb,QAAOC,SAAQE,OAAMjC,SAAQ0B,SAAU,KACxDA,EAASa,SACZX,EAAe,IACXA,KACAE,EAAMc,SAASf,IAAKgB,IAAe,CACrCf,MAAOe,EACPnB,SAAU,IAAIA,GACdK,OAAQJ,EACRM,OACAjC,OAAME,OAAAwC,OAAA,GAAO1C,SAOlB,IAAI8C,OAAqCd,EAErCe,EAAeb,EAAcO,QACjC,KAAOM,GAAgBb,EAAcK,QAAQ,CAC5C,IAAIS,EAAed,EAAcO,QAC7BO,GAAgBA,EAAalB,MAAMmB,MAAQF,EAAajB,MAAMmB,QACjEF,EAAeC,GAIjB,GAAID,EAAc,CACS,YAAtBA,EAAad,OAChBc,EAAad,KAAO,SAErBa,EAAiBC,EAAajB,MAAMoB,GACpC,MAAMC,EAAQvE,KAAKwE,SAASC,iBACzBzE,KAAKwE,SAASC,iBAAiB,CAC/BH,GAAIJ,EACJK,MAAOJ,EAAajB,MAAMqB,MAC1BnD,OAAQ+C,EAAa/C,OACrBsD,YAAa1E,KAAKsC,sBAElB6B,EAAajB,MAAMqB,MAItB,IAHIA,IACHzE,EAAA,QAAO6E,SAASJ,MAAQA,GAElBJ,GAAc,CACpB,IAAId,KAAEA,EAAIjC,OAAEA,EAAM8B,MAAEA,GAAUiB,EAC1BhB,EAAmCgB,EAAahB,OACpD,MAAMyB,EAAoC,CACzCN,GAAIpB,EAAMoB,GACVO,OAAQ3B,EAAM2B,OACdH,YAAa1E,KAAKsC,oBAClBlB,SACAiC,OACAyB,QAAS,IAAe,UAATzB,EACf0B,QAAS,IAAe,UAAT1B,GAEV2B,EAAwBvC,EAAsBS,EAAMoB,IACpDW,EAAWjF,KAAKmC,kBAAkB+C,IAAIhC,EAAM2B,SAAW,IAAIzC,IACjE6C,EAASE,IAAIjC,EAAMoB,GAAIM,GACvB5E,KAAKmC,kBAAkBgD,IAAIjC,EAAM2B,OAAQI,GACzCjF,KAAKkC,eAAegB,EAAMoB,IAAMM,EAC3BI,GAA0B7D,EAAe6D,EAAuBJ,KACpE5E,KAAKoF,KAAK,CAAE/B,KAAM,QAASH,MAAO0B,EAAqBS,OAAQ,UAC/DrF,KAAKoF,KAAK,CAAE/B,KAAM,SAAUwB,OAAQD,EAAqBS,OAAQ,WAElElB,EAAehB,QAGhBnD,KAAKkC,eAAeoD,WAAa,CAChChB,GAAI,aACJO,OAAQ,aACRH,YAAa,GACbtD,OAAQ,GACR0D,QAAS,KAAM,EACfC,QAAS,KAAM,EACf1B,KAAM,SAIR,MAAMkC,EAA4BjE,OAAOC,KAAKkB,GAC9C,IAAK,IAAI+C,EAAI,EAAGA,EAAID,EAA0B5B,OAAQ6B,IAAK,CAC1D,MAAM/D,EAAM8D,EAA0BC,GAChCrB,EAAenE,KAAKkC,eAAeT,GACpC0C,GAAiBhD,EAAesB,EAAsBhB,GAAM0C,KAChEnE,KAAKoF,KAAK,CAAE/B,KAAM,QAASH,MAAOT,EAAsBhB,GAAM4D,OAAQ,SACtErF,KAAKoF,KAAK,CAAE/B,KAAM,SAAUwB,OAAQpC,EAAsBhB,GAAM4D,OAAQ,UAS1E,GANArF,KAAKyF,qBAAuBvB,EAAiBlE,KAAKkC,eAAegC,QAAkBd,EACnFpD,KAAKoF,KAAK,CACT/B,KAAM,MACNwB,OAAQX,EACRwB,QAAS1F,KAAKyF,uBAEXzF,KAAKwE,SAASmB,YAAa,CAC9B,MAAM9F,OAAEA,EAASC,EAAA,QAAOD,QAAWG,KAAKwE,SACxC,IACC3E,EAAO+F,OAAO,EAAG,GAChB,MAAOC,QAvUV7F,KAAKwE,SAAW3C,EAChB7B,KAAK8F,UAAUlE,SACyBwB,IAAtBvB,EAAQkE,WAAiClE,EAAQkE,YAElE/F,KAAKgG,QASApG,QAAQM,GACdF,KAAKiG,SAASd,IAAIjF,GAGZN,QACN,MAAMsG,eAAEA,EAAiBvG,EAAWwG,KAAEA,EAAItG,OAAEA,GAAWG,KAAKwE,SAE5D,GADAxE,KAAKiG,SAAW,IAAIC,EAAe,CAAEnG,SAAUC,KAAKC,UAAWkG,OAAMtG,WACjEG,KAAKkC,eAAeoD,YAActF,KAAKoG,cAAe,CACzD,MAAMlG,EAAOF,KAAKqG,KAAKrG,KAAKoG,eACxBlG,GACHF,KAAKsG,QAAQpG,IAWTN,KAAKiF,EAAgBzD,EAAiB,IAC5C,IAAI8B,EAAQlD,KAAKgC,UAAU6C,GAC3B,QAAczB,IAAVF,EACH,OAGD,IAAIqD,EAA+BrD,EAAMsD,SACzC,GAAItD,EAAMuD,gBAAgB9C,OAAS,EAAG,CAOrC4C,KAAcA,IANIrD,EAAMuD,gBAAgBC,OAAO,CAAC/D,EAAkBgE,EAAOC,IACpEA,EAAQ,KACDjE,KAAoBgE,MAAUA,SAE9BA,MAAUA,KACnB,MAKJ,GAFAvF,EAAME,OAAAwC,OAAA,GAAQZ,EAAM2D,cAAkB7G,KAAKsC,oBAAwBtC,KAAKqC,eAAmBjB,GAExD,IAA/BE,OAAOC,KAAKH,GAAQuC,QAAgBT,EAAM4D,WAAWnD,OAAS,EACjE,OAGD,MAAMmD,EAAa,IAAI5D,EAAM4D,cAAe5D,EAAMuD,iBAClD,IAAK,IAAIjB,EAAI,EAAGA,EAAIsB,EAAWnD,OAAQ6B,IAAK,CAC3C,MAAMmB,EAAQG,EAAWtB,GACzB,IAAIpE,EAAOuF,GAGV,OAFAJ,EAAWA,EAAS7F,YAAYiG,KAAUvF,EAAOuF,IAKnD,OAAO3G,KAAKiG,SAAStF,OAAO4F,GAQtB3G,SAASmH,GACf,OAAO/G,KAAKkC,eAAe6E,GAGrBnH,UAAUoH,GAChB,OAAOhH,KAAKmC,kBAAkB+C,IAAI8B,GAG5BpH,kBACN,OAAOI,KAAKyF,qBAMbwB,oBACC,OAAOjH,KAAKqC,eAQLzC,mBAAmBM,GAC1B,MAAgB,MAAZA,EAAK,GACDA,EAAKgH,MAAM,GAEZhH,EAUAN,UAAUgC,EAAuBuF,EAAkBC,GAC1DD,EAASA,GAAkBnH,KAAK+B,QAChC,IAAK,IAAIyD,EAAI,EAAGA,EAAI5D,EAAO+B,OAAQ6B,IAAK,CACvC,IAAItF,KAAEA,EAAI2E,OAAEA,EAAMb,SAAEA,EAAQqD,aAAEA,GAAe,EAAKR,cAAEA,EAAgB,GAAEvC,GAAEA,EAAEC,MAAEA,GAAU3C,EAAO4D,IACxF8B,EAAY3E,GAAoBzC,EAAK0C,MAAM,KAC5C8B,EAAwB,GAG5B,MAAM5B,GAFNwE,EAAatH,KAAKwC,mBAAmB8E,IAEC1E,MAAM,KACtCM,EAAe,CACpB9B,OAAQ,GACRkD,KACAO,SACAN,QACArE,KAAMoH,EACNxE,WACA+D,cAAeO,EAAa9F,OAAAwC,OAAA,GAAMsD,EAAYP,cAAkBA,GAAkBA,EAClF7C,SAAU,GACVwC,SAAUY,KAAiBA,EAAYZ,YAAYc,IAAeA,EAClER,WAAY,GACZL,gBAAiB,GACjBpC,MAAO+C,EAAcA,EAAY/C,MAAQ,GAEtCgD,IACHrH,KAAKoG,cAAgB9B,GAEtB,IAAK,IAAIkB,EAAI,EAAGA,EAAI1C,EAASa,OAAQ6B,IAAK,CACzC,MAAM5B,EAAUd,EAAS0C,GACzBtC,EAAMmB,OAASpD,EACXF,EAAYwG,KAAK3D,KACpBV,EAAMmB,OAASnD,EACfgC,EAAM9B,OAAO2C,KAAKH,EAAQlD,QAAQ,IAAK,IAAIA,QAAQ,IAAK,KACxDoC,EAAS0C,GAAK1E,GAGZ6B,IACH+B,EAAc/B,EAAiBC,MAAM,KAAKK,IAAKuE,GACvCA,EAAW9G,QAAQ,IAAK,IAAIA,QAAQ,IAAK,MAGlDwC,EAAMuD,gBAAkBW,EAAc,IAAIA,EAAYX,mBAAoB/B,GAAeA,EAEzFxB,EAAM4D,WAAaM,EAAc,IAAIA,EAAYN,cAAe5D,EAAM9B,QAAU8B,EAAM9B,OAElF4C,GAAYA,EAASL,OAAS,GACjC3D,KAAK8F,UAAU9B,EAAUd,EAAMc,SAAUd,GAE1ClD,KAAKgC,UAAUsC,GAAMpB,EACrBiE,EAAOpD,KAAKb,IASNtD,gBAAgB+C,GACvB,MAAM+B,EAA2C,GACjD,GAAI/B,EAAkB,CACrB,MAAM8E,EAAkB9E,EAAiBC,MAAM,KAC/C,IAAK,IAAI4C,EAAI,EAAGA,EAAIiC,EAAgB9D,OAAQ6B,IAAK,CAChD,MAAO/D,EAAKiG,GAASD,EAAgBjC,GAAG5C,MAAM,KAC9C8B,EAAYjD,GAAOiG,GAGrB,OAAOhD,GA6JM,uSC9Yf,MAAMiD,EAAgB,IAAI3G,OAAO,OAC3B4G,EAAe,IAAI5G,OAAO,OAEhC,SAAS6G,EAAU1B,EAA0BjG,GAC5C,OAAKiG,GAGsB,IAAvBjG,EAAK4H,QAAQ3B,GACTjG,EAAKgH,MAAMf,EAAKxC,QAHhBzD,EAQT,SAAS6H,EAAa7H,GAOrB,MANgB,MAAZA,EAAK,KACRA,EAAOA,EAAKgH,MAAM,IAEH,MAAZhH,EAAK,KACRA,EAAOA,EAAKgH,MAAM,IAEZhH,EAGF,MAAO8H,EAMZpI,aAAYG,SAAEA,EAAQF,OAAEA,EAASC,EAAA,QAAOD,OAAMsG,KAAEA,IAK/C,GAqCOnG,KAAAC,UAAY,MACnB,MAAMgI,EAAWjI,KAAKI,QAAQC,SAAS6H,SAASxH,QAAQ,MAAO,IAC/DV,KAAKO,SAAWsH,EAAU7H,KAAKmI,MAAOF,EAAWjI,KAAKI,QAAQC,SAAS+H,QAEvEpI,KAAKQ,kBAAkBR,KAAKO,YA1C5BP,KAAKmI,MAAQ7G,OAAA+G,EAAA,QAAA/G,CAAI,eAAiBA,OAAA+G,EAAA,QAAA/G,CAAI,cAAgB,IAClD,SAASiG,KAAKvH,KAAKmI,OACtB,MAAM,IAAIG,UAAU,oCAErBtI,KAAKQ,kBAAoBT,EACzBC,KAAKI,QAAUP,EACV8H,EAAcJ,KAAKvH,KAAKmI,SAC5BnI,KAAKmI,SAAWnI,KAAKmI,UAEjBP,EAAaL,KAAKvH,KAAKmI,SAC3BnI,KAAKmI,UAAYnI,KAAKmI,SAEvBnI,KAAKI,QAAQK,iBAAiB,WAAYT,KAAKC,WAAW,GAC1DD,KAAKC,YAGCL,OAAOM,GACb,OAAO6H,EAAa7H,GAGbN,aAAaM,GACpB,SAAUF,KAAKmI,QAAQJ,EAAa7H,KAG9BN,IAAIM,GACV,MAAMwH,EAAQG,EAAU7H,KAAKmI,MAAOjI,GAChCF,KAAKO,WAAamH,IAItB1H,KAAKI,QAAQmI,QAAQC,UAAU,GAAI,GAAIxI,KAAKyI,aAAaf,IACzD1H,KAAKC,aAGNW,cACC,OAAOZ,KAAKO,UCtEP,MAAMmI,EAAiB,CAC7BnE,MAAO,aACPoE,OAAQ,UACRC,YAAa,eACbC,YAAa,CACZ,CACCC,KAAM,kCACNC,KAAM,WACNC,KAAM,0CAEP,CACCF,KAAM,qCACNC,KAAM,SACNC,KAAM,6CAEP,CACCF,KAAM,2DACNC,KAAM,UACNC,KAAM,oDAEP,CACCF,KAAM,mBACNC,KAAM,sBCxBM,oBCQf,MAAME,EAAa,SAqGJ,IAAAC,EAzEC5H,OAAA6H,EAAA,EAAA7H,CAAO,CAAE8H,OAAAC,EAAA,EAAQC,SAAAC,EAAA,EAAUC,aAAAL,EAAA,EAAcM,YAAAN,EAAA,IACvDO,aACA1F,UAEoB2F,CAAQ,UAC7BC,YAAYR,OAAEA,EAAME,SAAEA,EAAQE,aAAEA,EAAYC,YAAEA,GAAaC,WAC3DA,EAAU1F,SACVA,IAEAwF,EAAa,YAAa,CAAC5I,EAA0BiJ,KACpD,MAAQC,UAAWC,EAAmBd,GAAerI,GAC/CkJ,UAAEA,EAAYb,GAAeY,EACnC,GAAIC,IAAcC,EAAkB,CACnC,MAAMC,EAAgBZ,EAAOlE,IAAc,UACvC8E,GACHA,IAED,MAAMC,EAASX,EAASY,UAAUJ,GAC9BG,GACHb,EAAOjE,IAAI,SAAU,IAAM8E,GAG7BR,MAED,MAAMnF,GAAEA,EAAE6F,QAAEA,EAAOL,UAAEA,EAAYb,GAAeS,KACzCU,GAAkBpG,IAGzB,IADsBoF,EAAOlE,IAAc,UACvB,CACnB,MAAM+E,EAASX,EAASY,UAAUJ,GAC9BG,GACHb,EAAOjE,IAAI,SAAU,IAAM8E,GAI7B,MAAMI,EAASf,EAASpE,IAAY4E,GAEpC,GAAIO,EAAQ,CACX,MAAMC,EAAsBD,EAAOE,kBAC7BC,EAAkBH,EAAOI,UAAUnG,GACzC,GAAIkG,GAAmBF,EAAqB,CAC3C,GAA8B,mBAAnBF,EACV,OAAOA,EAAc9I,OAAAwC,OAAA,GAAMwG,EAAmB,CAAED,YAEjD,IAAIK,EAAUpJ,OAAOC,KAAK6I,GAAgB1D,OACzC,CAACgE,EAASjJ,KACTiJ,EAAQjJ,KAAS+I,EAAgBtF,IAAIzD,GAC9BiJ,GAER,IAKD,OAHIP,IACHO,EAAUP,EAAQO,EAASF,IAG3BlJ,OAAA6H,EAAA,EADM,CACN,eACE7H,OAAOC,KAAKmJ,GACXC,OAAQlJ,GAAQiJ,EAAQjJ,IACxBwB,IAAKxB,IACL,MAAMmJ,EAAWR,EAAe3I,GAChC,GAAwB,mBAAbmJ,EAAyB,CACnC,MAAMlF,EAAU8E,EAAgBtF,IAAIzD,IAAQ6I,EAC5C,OAAOM,EAAQtJ,OAAAwC,OAAA,GAAM4B,EAAO,CAAE2E,YAE/B,OAAOO,MAMb,OAAO,eC/FR,MAAMC,EAAgB,IAAIC,KAAKC,eAAe,SAY9C,SAASC,EAAYC,GACnB,OAAOA,EAAMhI,IAAI,EAAG6F,OAAMC,OAAMC,UAC9B1H,OAAA6H,EAAA,EADyC,CACzC,KAAG+B,QAAS,CAACC,EAAA,MAAW1J,IAAKqH,EAAMA,KAAMA,EAAMsC,IAAI,sBAAsBC,OAAO,SAAQC,aAAavC,GAClGC,EAbP,UAAiBA,KAACA,EAAID,KAAEA,UACtB,OACEzH,OAAA6H,EAAA,EADK,CACL,eACE7H,OAAA6H,EAAA,EAAA7H,CAAA,UAAQ+B,KAAK,aAAakI,OAAY,QAANC,EAAExC,SAAI,IAAAwC,OAAA,EAAAA,EAAE9K,QAAQ,cAAe,WAC/DY,OAAA6H,EAAA,EAAA7H,CAAA,UAAQ+B,KAAK,aAAakI,OAAQvC,IAClC1H,OAAA6H,EAAA,EAAA7H,CAAA,OAAKmK,IAAK1C,EAAM2C,QAAQ,OAAOR,QAAS,CAAEC,EAAA,MAAYQ,IAAK3C,KAQnD4C,CAAQ,CAAC5C,OAAMD,SAASzH,OAAA6H,EAAA,EAAA7H,CAAA,eAASA,OAAA6H,EAAA,EAAA7H,CAAA,WAAOyH,KAOvC,IAAA8C,EAFCvK,OAAA6H,EAAA,EAAA7H,GAASoI,YAEV,CAAQ,EAAGA,iBACxB,MAAMf,OAAEA,EAAME,YAAEA,GAAgBa,IAC1BoC,EAAI,IAAIC,KAGRC,EAAYnB,EAAcoB,OAAOH,GACjCI,EAAOvD,EACPsC,EAAQD,EAAYnC,GAC1B,OACEvH,OAAA6H,EAAA,EADK,CACL,UAAQ1H,IAAI,SAASyJ,QAAS,CAACC,EAAA,OAC7B7J,OAAA6H,EAAA,EAAA7H,CAAA,oBAAiBwK,EAAEK,kBAAkBD,KACrC5K,OAAA6H,EAAA,EAAA7H,CAAA,WACAA,OAAA6H,EAAA,EAAA7H,CAAA,WACC2J,GAED3J,OAAA6H,EAAA,EAAA7H,CAAA,WACAA,OAAA6H,EAAA,EAAA7H,CAAA,QAAM4J,QAAS,CAACC,EAAA,SAAc1J,IAAI,4BAChBuK,KAElB1K,OAAA6H,EAAA,EAAA7H,CAAA,8BC5CS,IAAA8K,EAFC9K,OAAA6H,EAAA,EAAA7H,GAASoI,YAEV,CAAQ,EAAGA,iBACxB,MAAMnF,MAAEA,GAAUmF,KAAgB,UAClC,OACEpI,OAAA6H,EAAA,EADK,CACL,UAAQ+B,QAAS,CAACmB,EAAA,OAChB/K,OAAA6H,EAAA,EAAA7H,CAAA,OAAK4J,QAAS,CAACmB,EAAA,QACb/K,OAAA6H,EAAA,EAAA7H,CAACgL,EAAA,EAAI,CAACC,GAAG,IAAIC,UAAU,EAAOtB,QAAS,CAACmB,EAAA,OACrC9H,eCRI,IAAAkI,EAFCnL,OAAA6H,EAAA,EAAA7H,GAASoI,YAEV,CAAQ,EAAGA,iBACxB,MAAMd,YAAEA,GAAgBc,IACxB,OACEpI,OAAA6H,EAAA,EADK,CACL,OAAK+B,QAAS,CAACwB,EAAA,OACfpL,OAAA6H,EAAA,EAAA7H,CAAA,eACEA,OAAA6H,EAAA,EAAA7H,CAAA,UACE+B,KAAK,aACLkI,OAAO,wbASTjK,OAAA6H,EAAA,EAAA7H,CAAA,UACE+B,KAAK,aACLkI,OAAO,ibASTjK,OAAA6H,EAAA,EAAA7H,CAAA,OAAKmK,IAAK7C,EAAa8C,QAAQ,OAAOR,QAAS,CAAEwB,EAAA,OAAaf,IAAI,iDAElErK,OAAA6H,EAAA,EAAA7H,CAAA,MAAI4J,QAAS,CAACwB,EAAA,cAAmB9D,cC7BxB,IAAA+D,EAFCrL,OAAA6H,EAAA,EAAA7H,EAED,CAAQ,IACrBA,OAAA6H,EAAA,EAD2B,CAC3B,SAAO+B,QAAS,CAAE0B,EAAA,OAChBtL,OAAA6H,EAAA,EAAA7H,CAAA,OAAK4J,QAAS,CAAE0B,EAAA,QACdtL,OAAA6H,EAAA,EAAA7H,CAAA,QACE4J,QAAS,CAAE0B,EAAA,MACXvH,OAAO,4FACPwH,OAAO,OACPvI,GAAG,6BACH4H,KAAK,6BACLb,OAAO,SACPyB,YAAU,GAEVxL,OAAA6H,EAAA,EAAA7H,CAAA,OAAK4J,QAAS,CAAE0B,EAAA,gBACdtL,OAAA6H,EAAA,EAAA7H,CAAA,OAAK4J,QAAS,CAAE0B,EAAA,SACdtL,OAAA6H,EAAA,EAAA7H,CAAA,MAAI4J,QAAS,CAAE0B,EAAA,QACbtL,OAAA6H,EAAA,EAAA7H,CAAA,0CAEFA,OAAA6H,EAAA,EAAA7H,CAAA,WACEA,OAAA6H,EAAA,EAAA7H,CAAA,SAAOyL,IAAI,aAAW,cACtBzL,OAAA6H,EAAA,EAAA7H,CAAA,SACE0L,YAAY,aACZ3J,KAAK,QACLqE,MAAM,GACNwE,KAAK,QACLhB,QAAS,CAAE0B,EAAA,OACXtI,GAAG,eAGPhD,OAAA6H,EAAA,EAAA7H,CAAA,WACEA,OAAA6H,EAAA,EAAA7H,CAAA,SAAOyL,IAAI,aAAW,mBACtBzL,OAAA6H,EAAA,EAAA7H,CAAA,SACE0L,YAAY,kBACZ3J,KAAK,OACLqE,MAAM,GACNwE,KAAK,QACLhB,QAAS,CAAE0B,EAAA,OACXtI,GAAG,eAGPhD,OAAA6H,EAAA,EAAA7H,CAAA,UAAQ4J,QAAS,CAAC0B,EAAA,QAAavJ,KAAK,UAAQ,aAC5C/B,OAAA6H,EAAA,EAAA7H,CAAA,OAAK4J,QAAS,CAAE0B,EAAA,OACdtL,OAAA6H,EAAA,EAAA7H,CAAA,8KAGc,IACZA,OAAA6H,EAAA,EAAA7H,CAAA,KAAG4J,QAAS,CAAC0B,EAAA,MAAW9D,KAAK,+BAA+BsC,IAAI,sBAAsBC,OAAO,SAAQC,aAAY,uDAAqD,wECtCvK,IAAA2B,EAFC3L,OAAA6H,EAAA,EAAA7H,GAASoI,YAEV,CAAQ,EAAG1F,WAAU0F,iBACnC,MAAMnF,MAAEA,EAAKqE,YAAEA,EAAWD,OAAEA,EAAME,YAAEA,GAAgBa,IAEpD,OACCpI,OAAA6H,EAAA,EADM,CACN,OAAK+B,QAAS,CAAEgC,EAAA,OACf5L,OAAA6H,EAAA,EAAA7H,CAAA,YACCA,OAAA6H,EAAA,EAAA7H,CAAA,QAAM6L,QAAQ,UACd7L,OAAA6H,EAAA,EAAA7H,CAAA,QAAM4K,KAAK,cAAckB,QAAQ,YACjC9L,OAAA6H,EAAA,EAAA7H,CAAA,QAAM4K,KAAK,WAAWkB,QAAQ,wCAC9B9L,OAAA6H,EAAA,EAAA7H,CAAA,QAAM8J,IAAI,OAAOtC,KAAK,wBACtBxH,OAAA6H,EAAA,EAAA7H,CAAA,QAAM8J,IAAI,aAAa/H,KAAK,WAAWyF,KAAK,uBAC5CxH,OAAA6H,EAAA,EAAA7H,CAAA,QAAM8J,IAAI,aAAatC,KAAK,sCAE7BxH,OAAA6H,EAAA,EAAA7H,CAAC8K,EAAM,CAAC7H,MAAOA,IACfjD,OAAA6H,EAAA,EAAA7H,CAACmL,EAAI,CAAC7D,YAAaA,IACnBtH,OAAA6H,EAAA,EAAA7H,CAAA,QAAM4J,QAAS,CAAEgC,EAAA,UAAgBlJ,KACjC1C,OAAA6H,EAAA,EAAA7H,CAACqL,EAAM,MACPrL,OAAA6H,EAAA,EAAA7H,CAACuK,EAAMvK,OAAAwC,OAAA,GAAK,CAAE6E,SAAQE,8MClBV,IAAAwE,EAFC/L,OAAA6H,EAAA,EAAA7H,GAASoI,YAEV,CAAQ,EAAGA,iBACzB,MAAM4D,SAAEA,GAAa5D,IACrB,OACCpI,OAAA6H,EAAA,EADM,CACL8D,EAAM3L,OAAAwC,OAAA,GAAKwJ,GACXhM,OAAA6H,EAAA,EAAA7H,CAAC4H,EAAM,CACN5E,GAAG,OACH6F,QAAS,CAACO,EAAS6C,KAClB7C,EAAQ8C,KAAOD,EAASlF,IAAI,SAAWkF,EAASrI,IAAI,QAASH,UACtD2F,IAGP,CACA8C,KAAMlM,OAAA6H,EAAA,EAAA7H,CAAAmM,EAAA,CAAAC,mBAAA,CAAAC,MAAA,8BAAAC,aAAAC,EAAAC,YACNC,KAAM,EAAG3M,QAAUlB,WAAaoB,OAAA6H,EAAA,EAAA7H,CAAAmM,EAAA,CAAMvN,KAAMA,EAAIwN,mBAAA,CAAAC,MAAA,0BAAAC,aAAAC,EAAAG,aChBrD,MAAMC,EAAW,IAAIC,EAAA,EACfC,ECYC,SACNvM,EACAwM,EACAvM,EAAiC,IAEjC,MAAMJ,IAAEA,EAAM,UAA+BI,EAArBwM,EAAAC,EAAAzM,EAAA,SAExB,GAAIuM,EAASG,YAAY9M,GACxB,MAAM,IAAI+M,MAAM,mCAEjB,MAAMnE,EAAS,IAAI3I,EAAOE,EAAQyM,GAKlC,OAJAD,EAASK,eAAehN,EAAMgI,IAC7BY,EAAOqE,GAAG,MAAO,IAAMjF,KAChB,IAAMY,IAEPA,ED3BOsE,CRVA,CACd,CACCrK,GAAI,OACJpE,KAAM,IACN2E,OAAQ,OACRwC,cAAc,GAEf,CACC/C,GAAI,OACJpE,KAAM,SACN2E,OAAQ,SQAoCoJ,EAAU,CAAE/H,eAAgB8B,IAEpE4G,EAAItN,OAAA6H,EAAA,EAAA7H,CAAS,IAAMA,OAAA6H,EAAA,EAAA7H,CAAC+L,EAAG,CAACC,SAAU5E,KAClCmG,EAAUlK,SAASmK,eAAe,QACxCF,EAAEG,MAAM,CAAEX,SAAQH,EAAEY,YAEpBV,EAAOO,GAAG,MAAO,IAAM9I,OAAO,EAAG,qDEgMlB,IAAAoJ,EAvI0BlP,EAAA,QAAOmP,QC+GjC,IAAAC,EAhFkBpP,EAAA,QAAOqP,YChEjC,SAASC,EAAWC,GAC1B,OAAO,SAAShE,KAAgBiE,GAC/B,OAAOD,EAAeE,MAAMlE,EAAQiE,IC+G/B,IAAIE,EAQAC,EAaAC,EAWAC,EAUAC,EAWAC,EAYAC,EAQAC,EAEAC,EA6NXR,EAAOS,MAAMT,KACbC,EAAKQ,MAAMR,GACXC,EAAaN,EAAWa,MAAMC,UAAUR,YACxCC,EAAOP,EAAWa,MAAMC,UAAUP,MAClCC,EAAOR,EAAWa,MAAMC,UAAUN,MAClCG,EAAOX,EAAWa,MAAMC,UAAUH,MAClCC,EAAUZ,EAAWa,MAAMC,UAAUF,SACrCH,EAAYT,EAAWa,MAAMC,UAAUL,WACvCC,EAAWV,EAAWa,MAAMC,UAAUJ,UAEvB,YCxcf,SAASK,EAAgBzI,GACxB,MAAiD,oBAA1CpG,OAAO4O,UAAUE,SAASC,KAAK3I,IAAgCuI,MAAMK,QAAQ5I,GAiB9E,SAAS6I,EAAUC,EAAuBC,GAChD,MAAO,CACNC,QAASF,IAAqBC,EAC9B/I,MAAO+I,GAoCF,SAASE,EAAKH,EAAuBC,EAAkBG,EAAQ,GACrE,IAAIC,EAYJ,OATEA,EAFyB,mBAAhBJ,EACNA,EAAYK,QAAU5C,EAAA,EAChBqC,EAAUC,EAAkBC,GAlDjC,SAAgBD,EAAuBC,GAC7C,MAAO,CACNC,SAAS,EACThJ,MAAO+I,GAiDGM,CAAOP,EAAkBC,GAEzBN,EAAgBM,GAxCrB,SAAiBD,EAAuBC,EAAkBG,EAAQ,GACxE,IAAIF,GAAU,EAEd,MAAMM,EAAmBR,GAAoBL,EAAgBK,GACvDS,EAAmBR,GAAeN,EAAgBM,GAExD,IAAKO,IAAqBC,EACzB,MAAO,CACNP,SAAS,EACThJ,MAAO+I,GAIT,MAAMS,EAAe5P,OAAOC,KAAKiP,GAC3BW,EAAU7P,OAAOC,KAAKkP,GAY5B,MAAO,CACNC,QAVAA,EADGQ,EAAavN,SAAWwN,EAAQxN,QAGzBwN,EAAQC,KAAM3P,GACnBmP,EAAQ,EACJD,EAAKF,EAAYhP,GAAM+O,EAAiB/O,GAAMmP,EAAQ,GAAGF,QAE1DD,EAAYhP,KAAS+O,EAAiB/O,IAK9CiG,MAAO+I,GAaEY,CAAQb,EAAkBC,EAAaG,GAEvCL,EAAUC,EAAkBC,eC6BxB,IAAAa,EA3FT,cAA+B3P,EAAA,EAMpC/B,cACCkC,QANO9B,KAAAuR,UAAY,IAAIrD,EAAA,EAChBlO,KAAAwR,wBAA0D,IAAIpP,EAAA,EAC9DpC,KAAAyR,0BAA4D,IAAIrP,EAAA,EAKvEpC,KAAK0R,IAAI1R,KAAKuR,WAQdvR,KAAK0R,IAAI,CAAEC,QAPK,KACX3R,KAAK4R,eACR5R,KAAKwR,wBAAwBK,OAAO7R,KAAK4R,cACzC5R,KAAKyR,0BAA0BI,OAAO7R,KAAK4R,cAC3C5R,KAAK4R,kBAAexO,MAMvB+C,SAAgByL,GACX5R,KAAK4R,eACR5R,KAAKwR,wBAAwBK,OAAO7R,KAAK4R,cACzC5R,KAAKyR,0BAA0BI,OAAO7R,KAAK4R,eAE5C5R,KAAK4R,aAAeA,EAGrBzL,WACC,OAAOnG,KAAK4R,aAGNhS,OAAO+N,EAAsBmE,GACnC9R,KAAKuR,UAAUQ,OAAOpE,EAAOmE,GAGvBlS,eAAe+N,EAAsBrE,GAC3CtJ,KAAKuR,UAAU9C,eAAed,EAAOrE,GAG/B1J,IAAI+N,GACV,OAAO3N,KAAKuR,UAAUlJ,IAAIsF,IAAUqE,QAAQhS,KAAK4R,cAAgB5R,KAAK4R,aAAavJ,IAAIsF,IAGjF/N,YAAY+N,GAClB,OAAO3N,KAAKuR,UAAUhD,YAAYZ,IAAUqE,QAAQhS,KAAK4R,cAAgB5R,KAAK4R,aAAarD,YAAYZ,IAGjG/N,IACN+N,EACAsE,GAA4B,GAE5B,OAAOjS,KAAKkS,KAAKvE,EAAOsE,EAAkB,MAAOjS,KAAKwR,yBAGhD5R,YAAe+N,EAAsBsE,GAA4B,GACvE,OAAOjS,KAAKkS,KAAKvE,EAAOsE,EAAkB,cAAejS,KAAKyR,2BAGvD7R,KACP+N,EACAsE,EACAE,EACAC,GAEA,MAAMC,EAAaJ,EAAmB,CAACjS,KAAK4R,aAAc5R,KAAKuR,WAAa,CAACvR,KAAKuR,UAAWvR,KAAK4R,cAClG,IAAK,IAAIpM,EAAI,EAAGA,EAAI6M,EAAW1O,OAAQ6B,IAAK,CAC3C,MAAM4I,EAAgBiE,EAAW7M,GACjC,IAAK4I,EACJ,SAED,MAAMkE,EAAOlE,EAAS+D,GAAiBxE,GACjC4E,EAAmBH,EAASlN,IAAIkJ,IAAa,GACnD,GAAIkE,EACH,OAAOA,EACD,IAAyC,IAArCC,EAAiBzK,QAAQ6F,GAAe,CAClD,MAAM1D,EAASmE,EAASM,GAAGf,EAAQ6E,IAEhB,WAAjBA,EAAMnN,QACLrF,KAAamS,GAAiBxE,EAAOsE,KAAsBO,EAAMF,MAElEtS,KAAKoF,KAAK,CAAE/B,KAAM,iBAGpBrD,KAAK0R,IAAIzH,GACTmI,EAASjN,IAAIiJ,EAAU,IAAImE,EAAkB5E,KAG/C,OAAO,ymBCuIT,MAAM8E,EAA8B,GAC9BC,EAAiB,CAAC,QAAS,OAAQ,iBAAkB,SAErDC,EAAgBC,6BAChBC,EAAkBD,+BAClBE,EAAQ,eACRC,EAAQ,eACRC,EAAW,kBAGXC,EAA2C,aAM3C,SAAUC,EAAaxL,GAC5B5H,EAAA,QAAOmT,GAAOE,UAAYzL,EAGrB,SAAU0L,IACf,MAAMC,EAAgBvT,EAAA,QAAOmT,GAAOI,eAAiB,EACrDvT,EAAA,QAAOmT,GAAOI,cAAgBA,EAAgB,EAGzC,SAAUC,IACf,MAAMD,EAAgBvT,EAAA,QAAOmT,GAAOI,eAAiB,EACrDvT,EAAA,QAAOmT,GAAOI,cAAgBA,EAAgB,EAGzC,SAAUE,EAAWjB,GAC1B,OAAOA,GAA0B,IAAlBA,EAAKkB,SAOrB,SAASC,EAAeC,GACvB,OAAOA,GAASC,EAAQD,EAAME,MAG/B,SAASC,EAAeH,GACvB,QAASA,GAASI,EAAQJ,EAAME,MAGjC,SAASG,EAAiBL,GACzB,OAAOG,EAAeH,IAA6B,YAAnBA,EAAME,KAAKI,IAG5C,SAASC,EAAcC,GACtB,OAAOL,EAAeK,IAAiC,SAArBA,EAAQN,KAAKI,IAGhD,SAASG,EAAcD,GACtB,OAAOL,EAAeK,IAAiC,SAArBA,EAAQN,KAAKI,IAGhD,SAASI,EAAiBF,GACzB,OAAOC,EAAcD,IAAYD,EAAcC,IAAYH,EAAiBG,GAOvE,SAAUP,EAAyCD,GACxD,OAAO1B,QAAQ0B,IAAmB,IAAVA,GAAmC,iBAAVA,GAAsBA,EAAMrQ,OAASyP,GAGjF,SAAUgB,EAAQJ,GACvB,OAAO1B,QACN0B,IAAmB,IAAVA,GAAmC,iBAAVA,IAAuBA,EAAMrQ,OAAS0P,GAASW,EAAMrQ,OAAS2P,IAI5F,SAAUqB,EAAWX,GAC1B,OAAO1B,QAAQ0B,IAAmB,IAAVA,GAAmC,iBAAVA,GAAsBA,EAAMrQ,OAAS2P,GA+DjF,SAAUsB,EACfC,EAOA7K,EACA1F,GAMA,OAJK0F,EAAmB8K,qBACf9K,EAAmB8K,aAGxBlT,OAAA4M,EAAA,EAAA5M,CAAkBiT,GACdA,EAAwB7K,EAAY1F,IAGxC2P,EAAWY,KACd7K,EAAUpI,OAAAwC,OAAA,GAASyQ,EAAwB7K,WAAwBA,GACnE1F,EAAWA,GAAsBuQ,EAAwBvQ,SACzDuQ,EAA0BA,EAAwBE,mBAG5C,CACNzQ,SAAUA,GAAY,GACtByQ,kBAAmBF,EACnB7K,aACArG,KAAMyP,IAiBF,SAAU4B,EACfV,EACAW,EAA8E,GAC9E3Q,GAEA,IACI4Q,EADAlL,EAA0DiL,EAG9D,GAAgC,mBAApBX,EAAYA,IACvB,OAAQA,EAAYA,IAAItK,EAAY1F,GAarC,GAVIiM,MAAMK,QAAQqE,KACjB3Q,EAAW2Q,EACXjL,EAAa,IAGY,mBAAfA,IACVkL,EAA6BlL,EAC7BA,EAAa,IAGVoK,EAAQE,GAAM,CACjB,IAAI9I,QAAEA,EAAU,GAAE2J,OAAEA,EAAS,IAAyBnL,EAArBoL,EAAAxG,EAAA5E,EAAA,sBAC7B8B,EAAAwI,EAAAtK,YAAEwB,QAAS6J,EAAc,GAAIF,OAAQG,EAAa,IAAExJ,EAAEyJ,EAAA3G,EAAA9C,EAAA,sBAC1DuJ,EAAc9E,MAAMK,QAAQyE,GAAeA,EAAc,CAACA,GAC1D7J,EAAU+E,MAAMK,QAAQpF,GAAWA,EAAU,CAACA,GAC9C2J,EAAMvT,OAAAwC,OAAA,GAAQkR,EAAeH,GAC7BnL,EAAUpI,OAAAwC,OAAA,GAAQmR,EAAmBH,EAAa,CAAE5J,QAAS,IAAI6J,KAAgB7J,GAAU2J,WAC3F7Q,EAAWA,GAAsBgQ,EAAIhQ,SACrCgQ,EAAMA,EAAIA,IAGX,MAAO,CACNA,MACAY,6BACA5Q,WACA0F,aACArG,KAAM0P,GApNHjT,EAAA,QAAOmT,KACXnT,EAAA,QAAOmT,GAAS,IA4OV,MAAMiC,EAAgB,kBAEvB,MAAOC,EAAbvV,cAGCI,KAAAoV,eAAoB,IAYf,SAAUC,EAAIrB,EAAUtK,EAAa,MAAO1F,GAGjD,GAFAA,EAAW+L,EAAK/L,EAAUsR,KAC1B5L,EAA4B,OAAfA,EAAsB,GAAKA,EACrB,iBAARsK,EACV,OAAOU,EAAEV,EAAKtK,EAAY1F,GACpB,GAAiB,aAAbgQ,EAAI3Q,MAAwBqG,EAAmBgE,mBAAoB,CAC7E,MAAMxB,EAAQxC,EAAmBgE,mBAEjC,cADQhE,EAAmBgE,mBACpB4G,EAAEpI,EAAMxC,EAAY1F,GACrB,GAAIgQ,EAAI3Q,OAAS6R,EAAe,CAEtC,OAAOZ,GADc,IAAIN,GACH9H,KAAMxC,EAAY1F,GAExC,OAAOsQ,EAAEN,EAAKtK,EAAY1F,GAmB5B,SAASuR,EAAwB1G,EAAcjO,GAC9C,MACCgT,MAAM4B,SAAEA,EAAQ9L,WAAEA,EAAU+L,WAAEA,IAC3B7U,EACJ,IAAK4U,GAAyB,SAAbA,EAChB,MAAO,CACN9L,WAAY9I,EAAQ8U,mBAClBpU,OAAAwC,OAAA,GAAMlD,EAAQ8U,mBAAuB9U,EAAQgT,KAAKlK,YACjD9I,EAAQgT,KAAKlK,WAChB+L,WAAY7U,EAAQgT,KAAK6B,WACzBE,OAAQ/U,EAAQgT,KAAK+B,QAEhB,GAAiB,SAAbH,EACV,MAAO,CACN9L,WAAY,GACZ+L,WAAY7U,EAAQgT,KAAK6B,WAAa,QAAKrS,EAC3CuS,OAAQ/U,EAAQgT,KAAK+B,QAGvB,IAAIb,EAAqB,CACxBpL,WAAY,IAEb,OAAI+L,GACHX,EAAcW,WAAa,GAC3BX,EAAca,OAAS/U,EAAQgT,KAAK+B,OACpCrU,OAAOC,KAAKmI,GAAYkM,QAASC,IAChCf,EAAcpL,WAAWmM,GAAYhH,EAAQgH,KAE9CvU,OAAOC,KAAKkU,GAAYG,QAASE,IAChChB,EAAcW,WAAWK,GAAYjH,EAAQkH,aAAaD,KAEpDhB,IAERA,EAAcpL,WAAapI,OAAOC,KAAKmI,GAAYhD,OAClD,CAACsP,EAAOC,KACPD,EAAMC,GAAYpH,EAAQkH,aAAaE,IAAapH,EAAQoH,GACrDD,GAER,IAEMlB,GAuCR,SAASoB,EAAKC,EAAsBC,GACnC,GAAIvC,EAAesC,IAAWtC,EAAeuC,GAC5C,QAAI/B,EAAW8B,EAAOvC,QAASS,EAAW+B,EAAOxC,OAC5CuC,EAAOvC,KAAK/E,UAAYuH,EAAOxC,KAAK/E,WAIrCsH,EAAOvC,KAAKI,MAAQoC,EAAOxC,KAAKI,KAGhCmC,EAAOvC,KAAKlK,WAAWjI,MAAQ2U,EAAOxC,KAAKlK,WAAWjI,KAIpD,GAAIgS,EAAe0C,IAAW1C,EAAe2C,GAAS,CAC5D,MAAMC,EAAqBF,EAAOvI,cAAgBuI,EAAOvC,KAAKa,kBACxD6B,EAAqBF,EAAOxI,cAAgBwI,EAAOxC,KAAKa,mBAE7Db,MAAQlK,WAAY6M,IACjBJ,GAEHvC,MAAQlK,WAAY8M,IACjBJ,EACJ,YAAwBhT,IAApB+S,EAAOM,UAAwD,iBAAvBH,KAGxCD,IAAuBC,IAGvBC,EAAO9U,MAAQ+U,EAAO/U,QAGnB4U,EAA2B9U,MAAQ,IAAIC,MAAOC,GAAgB8U,EAAO9U,KAAS+U,EAAO/U,MAK7F,OAAO,EAGR,SAASiV,EAAiB1S,EAA0B2S,EAAsB3Q,GACzE,IAAK,IAAIR,EAAIQ,EAAOR,EAAIxB,EAASL,OAAQ6B,IACxC,GAAI0Q,EAAKlS,EAASwB,GAAImR,GACrB,OAAOnR,EAGT,OAAQ,EAGT,SAASoR,EAAqB1L,EAAqD,IAClF,IAAI2L,EAAa,GACjB,GAAI5G,MAAMK,QAAQpF,GAAU,CAC3B,IAAK,IAAI1F,EAAI,EAAGA,EAAI0F,EAAQvH,OAAQ6B,IAAK,CACxC,IAAIsR,EAAY5L,EAAQ1F,GACpBsR,IAA2B,IAAdA,IAChBD,EAAaA,KAAgBA,KAAcC,IAAcA,GAG3D,OAAOD,EAKR,OAHI3L,IAAuB,IAAZA,IACd2L,EAAa3L,GAEP2L,EAGR,SAASE,GAAgBlI,EAAkBiH,EAAkBkB,EAA+BC,GACvFA,IAActE,GAA8B,SAAbmD,GAAuBkB,EACzDnI,EAAQqI,eAAerE,EAAiBiD,EAAUkB,GAC1B,SAAblB,GAAqC,KAAdkB,QAAmC5T,IAAd4T,EACvDnI,EAAQsI,gBAAgBrB,GAExBjH,EAAQuI,aAAatB,EAAUkB,GAIjC,SAASK,GAAUC,GAClB,OAAOrH,MAAMC,UAAUhJ,MAAMmJ,KAAKiH,GAGnC,SAASC,GAAcC,EAAeC,EAAkBhW,GACvD,MAAMkI,EAAU,CAACD,EAAiB1F,KACjC,GAAI0F,EAAY,CACf,MAAMmH,EAASyD,EAAEkD,EAAU9N,EAAY1F,GAGvC,OAFAwT,EAASE,UAAW,EACpBF,EAASC,YAAcA,EAChB5G,EAER,MAAO,CACN4G,cACAD,aAGIjW,EAAOD,OAAOC,KAAKkW,GAAa/Q,OAAO,CAACnF,EAAgBoW,KAC7D,MAAM/N,EAAa6N,EAAYE,GAI/B,OAHI/N,EAAWrI,OACdA,EAAO,IAAIA,KAASqI,EAAWrI,OAEzBA,GACLE,EAAM,CAACA,GAAO,IAKjB,OAHA+V,EAASjW,KAAOA,EAChBoI,EAAQpI,KAAOA,EACfoI,EAAQiO,WAAY,EACbjO,EAKF,SAAU1H,GACfwV,EAAiB,IA6LjB,SAASI,EACRL,GAOA,OAAOD,GAAcC,EAAUC,GAIhC,OAFAI,EAAQ7T,SA7FR,WA2DC,SAAS6T,EACRL,GAiBA,OAAOD,GAAcC,EAAUC,GAGhC,OADAI,EAAQnO,WA9ER,WACC,SAASmO,EACRL,GAsBA,OAAOD,GAAcC,EAAUC,GA+BhC,OADAI,EAAQpW,IA5BR,SAAaA,GA0BZ,OAzBA,SACC+V,GAsBA,OAAOD,GAAcC,EAAUC,EAAahW,KAKvCoW,GAwBDA,GAcRA,EAAQnO,WAtMR,WACC,SAASmO,EACRL,GAYA,OAAOD,GAAcC,EAAUC,GAuFhC,OAFAI,EAAQ7T,SA1DR,WACC,SAAS6T,EACRL,GAsBA,OAAOD,GAAcC,EAAUC,GAgChC,OADAI,EAAQpW,IA5BR,SAAaA,GA0BZ,OAzBA,SACC+V,GAsBA,OAAOD,GAAcC,EAAUC,EAAahW,KAKvCoW,GAGRA,EAAQpW,IAnFR,SAAaA,GAqBZ,OApBA,SACC+V,GAiBA,OAAOD,GAAcC,EAAUC,EAAahW,KAiEvCoW,GAkGDA,EApbA1C,EAAA9R,KAAO6R,EAubf,MAAMvL,GAAU1H,KAYT,MAAM6V,GAAoB,IAAI9I,EAC/B+I,GAAgB,IAAI3V,EAAA,EACpB4V,GAAoB,IAAI9I,EAC9B,IAAI+I,GAAY,EACZC,GAAS,EAEb,SAASC,GAAa7T,EAAY7C,EAAsBmS,GACvD,MAAMwE,EAAaL,GAAc7S,IAAIZ,GACjC8T,IACHA,EAAWC,QAAUD,EAAWC,SAAW,IAAIjW,EAAA,EAC/CgW,EAAWC,QAAQlT,IAAI1D,EAAKmS,GACxBoE,GAAkB3P,OAAO/D,KAAM7C,OAClC2W,EAAW3O,cACXuO,GAAkBnG,UAAUvN,KAAM7C,OAKrC,SAAS6W,GAAe5P,GACvB,MAAM6P,WAAEA,EAAUC,cAAEA,GAAkB9P,EACtC,GAAK6P,EAAL,CAGA,IAAK,IAAI/S,EAAI,EAAGA,EAAIgT,EAAc7U,OAAQ6B,IAAK,CAC9C,MAAMlB,EAAKkU,EAAchT,GACnBmM,EAAU4G,EAAWrT,IAAIZ,GAG/B,GAFAqN,GAAWA,IACX4G,EAAW1G,OAAOvN,GACM,IAApBiU,EAAWE,KACd,MAGFF,EAAW7V,SAmBL,MAAMgW,GAAc/O,GAAQ,EAAGrF,SACrC,MAAOqU,GAAYrU,EAAG1B,MAAM,KAC5B,MAAO,KACN,MAAMwV,EAAaL,GAAc7S,IAAIyT,GACrC,GAAIP,EACH,OAAOA,EAAW3O,iBA4BRD,IAvBOG,GAAQ,EAAGrF,SACvB,CACN1E,IAAI6B,GACH,MAAOkX,GAAYrU,EAAG1B,MAAM,KACtBwV,EAAaL,GAAc7S,IAAIyT,GACrC,GAAIP,EAAY,CACfA,EAAWC,QAAUD,EAAWC,SAAW,IAAIjW,EAAA,EAC/C,MAAMwW,EAAYR,EAAWQ,UACvBhF,EAAOwE,EAAWC,QAAQnT,IAAIzD,GACpC,GACCmS,IACCgF,EAAUC,SAASjF,IAClB9T,EAAA,QAAO6E,SAASmU,OAASF,GAAa9Y,EAAA,QAAO6E,SAASmU,KAAKD,SAASjF,IAEtE,OAAOA,EAERoE,GAAkBe,OAAOJ,KAAYlX,KAEtC,OAAO,SAKkBkI,GAAQ,EAAGrF,SAsCtC,OA/BA,SAAkB0U,EAAsBC,EAAuBC,GAC9D,MAAOP,GAAYrU,EAAG1B,MAAM,KACtBwV,EAAaL,GAAc7S,IAAIyT,GAIrC,GAHKO,IACJA,EAAOD,GAEJb,EAAY,CACfA,EAAWe,cAAgBf,EAAWe,eAAiB,IAAI/W,EAAA,EAC3DgW,EAAWgB,qBAAuBhB,EAAWgB,sBAAwB,IAAIlK,EACzE,MAAMmK,EAAkBjB,EAAWe,cAAcjU,IAAIZ,IAAO,IAAIlC,EAAA,EAChE,IAAKiX,EAAgBhR,IAAI2Q,GAAe,CACvC,MAAMnI,EAASqI,EAAK,GAAId,EAAWkB,yBACpBlW,IAAXyN,IAUHuH,EAAW1O,WAAUpI,OAAAwC,OAAA,GAAQsU,EAAW1O,WAAU,CAAE9J,CAACoZ,GAAenI,KAErEwI,EAAgBlU,IAAI6T,EAAcE,GAClCd,EAAWgB,qBAAqBL,IAAIC,GAErCZ,EAAWe,cAAchU,IAAIb,EAAI+U,QAOvBE,GAAU5P,GAAQ,EAAGrF,QACzBkV,IACP,MAAOb,GAAYrU,EAAG1B,MAAM,KACtBwV,EAAaL,GAAc7S,IAAIyT,GACjCP,IACHA,EAAWG,WAAaH,EAAWG,YAAc,IAAInW,EAAA,EAChDgW,EAAWG,WAAWlQ,IAAI/D,IAC9B8T,EAAWG,WAAWpT,IAAIb,EAAIkV,MAMrBC,GAAc9P,GAAQ,EAAGrF,SACrC,MAAOqU,GAAYrU,EAAG1B,MAAM,KAC5B,MAAO,KACN,MAAMwV,EAAaL,GAAc7S,IAAIyT,GACrC,OAAIP,GACEA,EAAWsB,kBACftB,EAAWsB,gBAAkB,IAAIpI,EACjC8G,EAAWsB,gBAAgBvT,KAAOiS,EAAWhK,SAC7CgK,EAAWsB,gBAAgBhL,GAAG,aAAc0J,EAAW3O,cAExD2O,EAAWsB,gBAAkBtB,EAAWsB,iBAAmB,IAAIpI,EACxD8G,EAAWsB,iBAEZ,QAIIC,GAAQhQ,GAAQ,EAAGrF,SAC/B,MAAOqU,GAAYrU,EAAG1B,MAAM,KAC5B,IAAIgX,GAAa,EACjB,MAAO,CACNha,QACC,MAAMwY,EAAaL,GAAc7S,IAAIyT,IAChCiB,GAAcxB,IAClBA,EAAWyB,UAAYzB,EAAWyB,UAAY,EAC9CD,GAAa,IAGfha,SACC,MAAMwY,EAAaL,GAAc7S,IAAIyT,GACjCiB,GAAcxB,IACjBA,EAAWyB,UAAYzB,EAAWyB,UAAY,EAC9CD,GAAa,OAMjB,SAASE,GAAuBxV,EAAYoF,GAC3C,MAAMsM,EAAa,GACb+D,EAAgBzY,OAAOC,KAAKmI,GAClC,IAAK,IAAIlE,EAAI,EAAGA,EAAIuU,EAAcpW,OAAQ6B,IAAK,CAC9C,MAAMwT,EAAee,EAAcvU,GACK,mBAA7BkE,EAAWsP,IACrBhD,EAAMgD,GAAgB,YAA4B1J,GACjD,MAAM8I,EAAaL,GAAc7S,IAAIZ,GACrC,OAAI8T,EACIA,EAAWkB,mBAAmBN,MAAiB1J,GAEhD5F,EAAWsP,MAAiB1J,IAEpC0G,EAAMgD,GAAcgB,OAAS,MAC5B,MAAM5B,EAAaL,GAAc7S,IAAIZ,GACrC,OAAI8T,EACIA,EAAWkB,mBAAmBN,GAE/BtP,EAAWsP,MAGnBhD,EAAMgD,GAAgBtP,EAAWsP,GAGnC,OAAOhD,EAozCOiE,EAAA,EAjzCT,SAAmBrP,GACxB,IAiBIsP,EAEAC,EAEAC,EArBAC,EAAyD,CAC5DC,MAAM,EACNC,OAAO,EACPC,gBAAYpX,EACZyL,QAAS/O,EAAA,QAAO6E,SAASmU,KACzB1K,SAAU,IAAIF,EAAA,GAEXuM,EAA8C,GAC9CC,EAAyE,GACzEC,EAAiF,GACjFC,EAA8C,GAC9CC,EAAY,IAAI7L,EAChB8L,EAAkB,IAAI1Y,EAAA,EACtB2Y,EAAqB,IAAI/L,EACzBgM,EAAwB,IAAI5Y,EAAA,EAC5B6Y,EAA4D,IAAIjM,EAChEkM,EAAoB,IAAIlM,EAExBmM,EAAuC,GAEvCC,EAA0B,GAE1BC,EAAsB,IAAIjZ,EAAA,EAE9B,SAASkZ,EACRzF,EACA0F,EACAC,EACA3M,GAEA,IAAIgC,EAAS0K,IAAcC,EACF,mBAAdD,IACV1K,EAAS0K,MAEK,IAAX1K,GACHsK,EAAyBpX,KAAK,KAC7B8K,EAAQgH,OAKX,SAAS4F,EACR5M,EACA6M,EACAC,EACAH,GAEA,GAAIA,EAAe,CAClB,MAAMI,EAAgBf,EAAU3V,IAAIsW,GACpCI,GAAiB/M,EAAQhO,oBAAoB6a,EAAWE,GAGzD,IAAIpE,EAAWmE,EAEG,UAAdD,IACHlE,EAAW,SAAoBqE,GAC9BF,EAAatL,KAAKrQ,KAAM6b,GACvBA,EAAIxQ,OAAe,iBAAoBwQ,EAAIxQ,OAA4B3D,QAI1EmH,EAAQpO,iBAAiBib,EAAWlE,GACpCqD,EAAU1V,IAAIwW,EAAcnE,GAG7B,SAASsE,EACRjN,EACAkN,EACArS,EACAsS,GAAsB,GAEtB1a,OAAOC,KAAKwa,GAAoBnG,QAASC,IACxC,MAAMoG,EAAoC,OAA1BpG,EAASqG,OAAO,EAAG,IAAeF,EAC5CN,EAAYM,EAAanG,EAAWA,EAASqG,OAAO,GAC1D,GAAID,IAAYvS,EAAWmM,GAAW,CACrC,MAAMsG,EAAgBtB,EAAU3V,IAAI6W,EAAmBlG,IACnDsG,GACHtN,EAAQhO,oBAAoB6a,EAAWS,MAM3C,SAASC,EAAoBlI,EAAuBuC,EAAgBnS,GACnE,IAAKhD,OAAA4M,EAAA,EAAA5M,CAAS4S,EAAQN,KAAKa,mBAAoB,CAC9C,MAAM4H,EAAanB,EAAkBhW,IAAIgP,EAAQN,MAQjD,IAAIxF,EACJ,GARIiO,IACCA,EAAW5F,SACdA,EAAW4F,EAAW5F,SAEtBnS,EAAK+X,EAAW/X,IAIdmS,EAAU,CACb,MAAM6F,EAAexE,GAAkB5S,IAAIuR,GACvC6F,IACHlO,EAAWkO,EAAalO,eAEnB,QAAWhL,IAAPkB,EAAkB,CAC5B,MAAM8T,EAAaL,GAAc7S,IAAIZ,GACjC8T,IACEA,EAAWsB,kBACftB,EAAWsB,gBAAkB,IAAIpI,EACjC8G,EAAWsB,gBAAgBvT,KAAOiS,EAAWhK,SAC7CgK,EAAWsB,gBAAgBhL,GAAG,aAAc0J,EAAW3O,cAExD2E,EAAWgK,EAAWsB,iBAIxB,GAAItL,EAAU,CACb,IAAImO,EACJ,GA19BJ,SAAsBjK,GACrB,OAAON,QAAQM,GAAQA,EAAK3E,OAy9BrB6O,CAAatI,EAAQN,KAAKa,mBAAoB,CACjD,MAAM9G,MAAEA,EAAKC,aAAEA,GAAiBsG,EAAQN,KAAKa,kBACxCrG,EAAS/F,IAAIsF,IACjBS,EAAS2D,OAAOpE,EAAOC,GAExB2O,EAAgB5O,OAEhB4O,EAAgBrI,EAAQN,KAAKa,kBAE9B,IAAInC,EAAOlE,EAASlJ,IAAIqX,GACxB,GAAIjb,OAAA4M,EAAA,EAAA5M,CAAegR,GAAO,CACzB,MAAMsB,EAAOtB,EAAK4B,EAAQN,KAAKlK,WAAYwK,EAAQN,KAAK5P,UACpD1C,OAAA4M,EAAA,EAAA5M,CAAiBsS,EAAKa,qBACzBP,EAAQtG,aAAegG,EAAKa,wBAG7BP,EAAQtG,aAAe0E,IAoB3B,SAASmK,EACRC,EACAvZ,EACAwZ,GAEA,MAAMC,qBAAEA,EAAoBC,oBAAEA,EAAmB5F,UAAEA,EAASrG,MAAEA,GAAUzN,EAClE2Z,EAAkC,GAClCC,EAAiBtJ,EAAetQ,GAChC6Z,EAAuBjJ,EAAiB5Q,GAGxC8Z,GADJpJ,EAAe8I,IAAkB3B,EAAsB9V,IAAIyX,EAAcrY,KAAQ,IAC5BX,OAAS,EAC1DuZ,GACHN,IAAgD,IAAxBC,KAAmCE,GAAkBC,IAC9EC,GAA4BP,EAAS/Y,OAAS,EAChD,IAAIwZ,EACA1J,EAAetQ,IAAWuZ,EAAS/Y,QA9BxC,SAA2ByZ,EAAgBlJ,GAC1C,KAAOkJ,EAAMzZ,QAAQ,CACpB,IAAIiQ,EAAOwJ,EAAM7Z,OACboQ,EAAQC,IAASE,EAAQF,MACvBsH,EAAkB7S,IAAIuL,KAC1BsH,EAAkB/V,IAAIyO,EAAMM,GACxBN,EAAK5P,UAAY4P,EAAK5P,SAASL,SAClCyZ,EAAQ,IAAIA,KAAUxJ,EAAK5P,cAwB9BqZ,CAAkB,IAAIX,GAAWvZ,GAElC,IAAK,IAAIqC,EAAI,EAAGA,EAAIkX,EAAS/Y,OAAQ6B,IAAK,CACzC,IAAI8X,EAAeZ,EAASlX,GAC5B,IAAK8X,IAAiC,IAAjBA,EACpB,SAE2B,iBAAjBA,IACVA,EAp+BI,CACNtJ,IAAK,GACLtK,WAAY,GACZ1F,cAAUZ,EACV2F,QAg+B6BuU,IA/9B7Bja,KAAM0P,IAi+BL,MAAMsJ,EAAanB,EAAkBhW,IAAIoY,GACnCpJ,EAAwB,CAC7BN,KAAM0J,EACN1M,MAAOA,EAAQ,EACf2M,MAAO/X,EACPgY,SAAUra,EAAOmB,GACjBsY,qBAAsBM,EACtBH,iBACA9F,UAAWA,GAEZ,GAAInD,EAAQwJ,KACPA,EAAa1I,6BACfV,EAAyBwB,mBAAqB4H,EAAa1I,4BAA2B,IAEpF0I,EAAa5T,WAAW+T,eAAe,CAC1Cta,EAAOua,eAAgB,EACvB,IAAIC,EAAa7C,EAAgB5V,IAAI/B,EAAOqa,UAC5C,KAAOG,IACFA,EAAWD,eAGfC,EAAWD,eAAgB,EAC3BC,EAAa7C,EAAgB5V,IAAIyY,EAAWH,UAI3CnB,IACHnI,EAAQ0J,SAAWvB,EAAW/X,IAE3BqP,EAAQ2J,IACXlB,EAAoBlI,EAA0B/Q,EAAesT,SAAWtT,EAAemB,IAEpF6Y,GACHpC,EAAmB5V,IAAIgY,EAAcjJ,GAEtC4I,EAAgB/Y,KAAKmQ,GACrBiJ,EAAejJ,EAEhB,OAAO4I,EAqBR,SAASe,EAAsBhU,GAC9B,MAAM+K,2BAAEA,GAA+B/K,EAAK+J,KAC5C,GAAIgB,EAA4B,CAC/B,MAAMlL,EAAaG,EAAK+J,KAAKlK,WAC7ByR,EAAyBpX,KAAK,KAC7B,GAAI+W,EAAgBzS,IAAIwB,EAAK+T,UAAW,CACvC,MAAMlI,EAAqB7L,EAAK6L,mBAChC7L,EAAK6L,mBAAqBd,GAA2B,GACrDkJ,GAAkBjU,EAAM,CACvBH,WAAUpI,OAAAwC,OAAA,GAAO4R,EAAuBhM,SAO7C,SAASqU,EAAiBlU,GACzB,IAAIqT,EAA4B,KAC5Bc,EAAuCnU,EAC3C,MAAQqT,GAAc,CACrB,MAAMe,EAAclD,EAAmB7V,IAAI8Y,GAC3C,GAAIC,EAAJ,CACC,IAAIpP,EAAUoP,EAAYpP,QAC1B,IAAI4E,EAAewK,IAAgBlK,EAAiBkK,MAC9CA,EAAYC,oBAChBD,EAAYC,kBAAoBC,GAA2BF,EAAY3Z,KAEpE2Z,EAAYC,mBAAmB,CAClC,MAAME,EAAetD,EAAgB5V,IAAI+Y,EAAYC,oBACjDE,GAAiBnK,EAAcmK,IAAkBjK,EAAciK,KAClEvP,EAAUuP,EAAavP,SAI1B,GAAIA,GAAWA,EAAQwP,WAAY,CAClCnB,EAAerO,EACf,MAEDmP,EAAaC,OAId,KADAD,EAAaA,GAAclD,EAAgB5V,IAAI8Y,EAAWR,YACtC3J,EAAemK,KAAgBjK,EAAiBiK,GACnE,MAGF,OAAOd,EAGR,SAASoB,EAASzP,EAAc0M,EAAiBC,GAChD,MAAM+C,EAAW1P,EAAQnH,MACnB8W,EAAe3P,EAAQ,iBACvB4P,EAAgB5P,EAAQ,gBAE1B4P,GAAiBF,IAAaE,GACjC5P,EAAQnH,MAAQ+W,EACZ5P,EAAQnH,QAAU+W,IACrB5P,EAAQ,qBAAkBzL,KAEhBob,GAAgBD,IAAaC,GAAiBjD,IAAcC,KACvE3M,EAAQnH,MAAQ6T,EAChB1M,EAAQ,sBAAmBzL,GAI7B,SAASsb,EACR7P,EACA8P,EAAqC,GACrCC,EACAC,GAA8B,GAE9B,MAAMnV,EAAakV,EAAYlJ,mBAC7BpU,OAAAwC,OAAA,GAAM8a,EAAYlJ,mBAAuBkJ,EAAYhL,KAAKlK,YACzDkV,EAAYhL,KAAKlK,WACdoV,EAAYxd,OAAOC,KAAKmI,GACxBqV,EAAYD,EAAUnb,QACU,IAAlCmb,EAAUhX,QAAQ,YAAqB6W,EAAkBzT,SAC5D2D,EAAQsI,gBAAgB,SAGzB0H,GAA+B/C,EAAqBjN,EAAS8P,EAAmBjV,GAEhF,IAAK,IAAIlE,EAAI,EAAGA,EAAIuZ,EAAWvZ,IAAK,CACnC,MAAMqQ,EAAWiJ,EAAUtZ,GAC3B,IAAI+V,EAAY7R,EAAWmM,GAC3B,MAAM2F,EAAgBmD,EAAkB9I,GACxC,GAAiB,YAAbA,EAAwB,CAC3B,MAAMmJ,EAAsBpI,EAAqB4E,GACjD,IAAIyD,EAAqBrI,EAAqB2E,GAC9C,GAAIyD,IAAwBC,EAC3B,GAAIA,EAAoB,CACvB,GAAIL,EAAYM,OAAQ,CACvB,MAAMC,GAActQ,EAAQkH,aAAa,UAAY,IAAInT,MAAM,KAC/D,IAAK,IAAI4C,EAAI,EAAGA,EAAI2Z,EAAWxb,OAAQ6B,KACa,IAA/CyZ,EAAmBnX,QAAQqX,EAAW3Z,MACzCyZ,KAAwBE,EAAW3Z,MAAMyZ,KAI5CpQ,EAAQuI,aAAa,QAAS6H,QAE9BpQ,EAAQsI,gBAAgB,cAGpB,IAA0C,IAAtCzE,EAAe5K,QAAQ+N,GACjCyF,EAAczF,EAAU0F,EAAWC,EAAe3M,QAC5C,GAAiB,WAAbgH,EAAuB,CACjC,MAAMuJ,EAAa9d,OAAOC,KAAKga,GACzB8D,EAAaD,EAAWzb,OAC9B,IAAK,IAAI2b,EAAI,EAAGA,EAAID,EAAYC,IAAK,CACpC,MAAMC,EAAYH,EAAWE,GACvBE,EAAgBjE,EAAUgE,GAE5BC,KADkBhE,GAAiBA,EAAc+D,MAIpD1Q,EAAQ4Q,MAAcF,GAAaC,GAAiB,UAMtD,GAHKjE,GAAsC,iBAAlBC,IACxBD,EAAY,IAEI,UAAb1F,EACsC,WAApChH,EAAwB6Q,UAC3B7Q,EAAgB,gBAAkB0M,GAEpC+C,EAASzP,EAAS0M,EAAWC,QACvB,GAAiB,QAAb3F,GAAsB0F,IAAcC,EAAe,CAC7D,MAAMnY,SAAckY,EACP,aAATlY,GAAyD,IAAlCwS,EAAS8J,YAAY,KAAM,IAAYd,EACjEpD,EAAY5M,EAASgH,EAASqG,OAAO,GAAIX,EAAWC,GACjC,WAATnY,GAAkC,cAAbwS,GAA4BgJ,EAC3D9H,GAAgBlI,EAASgH,EAAU0F,EAAWqD,EAAY3H,WACnC,eAAbpB,GAA0C,cAAbA,EAClChH,EAAgBgH,KAAc0F,IACjC1M,EAAgBgH,GAAY0F,GAG7B1M,EAAgBgH,GAAY0F,IAOlC,SAASqE,KACR,MAAMC,EAAY1E,EAElB,GADAA,EAA2B,GACvB0E,EAAUlc,OACb,MAAO,KACN,IAAI6T,EACJ,KAAQA,EAAWqI,EAAUhc,SAC5B2T,KAMJ,SAASsI,KACR,MAAMxF,KAAEA,GAASD,EACX0F,EAAMH,KACZ,GAAIG,EACH,GAAIzF,EACHyF,QACM,CACN,IAAIzb,EACJA,EAAKxE,EAAA,QAAOkgB,sBAAsB,KACjC3E,EAAoBxJ,OAAOvN,GAC3Byb,MAED1E,EAAoBlW,IAAIb,EAAIyb,IAK/B,SAASjC,GAAkBjU,EAAoBkS,GAC9C,GAAIlS,EAAK+J,KAAK6B,YAAc5L,EAAK+J,KAAK+B,OAAQ,EAxsChD,SACC9G,EACAoR,EACAxK,EACAwB,GAEA,MAAMiJ,EAAY5e,OAAOC,KAAKkU,GACxB0K,EAAYD,EAAUvc,OAC5B,IAAK,IAAI6B,EAAI,EAAGA,EAAI2a,EAAW3a,IAAK,CACnC,MAAMsQ,EAAWoK,EAAU1a,GACrBwR,EAAYvB,EAAWK,GAEzBkB,IADsBiJ,EAAmBnK,IAE5CiB,GAAgBlI,EAASiH,EAAUkB,EAAWC,IA4rC9CmJ,CACCvW,EAAKgF,QACLkN,EAAmBtG,YAAc,GACjC5L,EAAK+J,KAAK6B,WACV5L,EAAKoN,WAENyH,EAAc7U,EAAKgF,QAAwBkN,EAAmBrS,WAAYG,GAAM,GAChF,MAAM8L,EAAS9L,EAAK+J,KAAK+B,QAAU,GAC/BoG,EAAmBpG,QACtBmG,EACCjS,EAAKgF,QACLkN,EAAmBpG,QAAU,GAC7B9L,EAAK+J,KAAK+B,QACV,GAGFoG,EAAmBpG,OAASoG,EAAmBpG,QAAU,GACzDrU,OAAOC,KAAKoU,GAAQC,QAASpD,IAC5BiJ,EAAY5R,EAAKgF,QAAwB2D,EAAOmD,EAAOnD,GAAQuJ,EAAmBpG,OAAOnD,WAG1FkM,EAAc7U,EAAKgF,QAAwBkN,EAAmBrS,WAAYG,GAoF5E,SAASwW,KACR,MAAM/F,KAAEA,GAASD,EACbC,EACHgG,KACWpG,IACXhH,GAAa,GACbgH,EAAmBpa,EAAA,QAAOkgB,sBAAsB,KAC/CM,QAKH,SAASC,GAAgBjc,GACxB,MAAM4P,EAAU4G,EAAgB5V,IAAIZ,GACpC,GAAI4P,GAAWT,EAAeS,GAC7B,OAAOA,EAIT,SAASoM,KACRpG,OAAmB9W,EACnB,IAAIod,EAAoB,IAAI/F,GAC5B,MAAMgG,EAAqB,GAkB3B,IAAInO,EACJ,IAlBAmI,EAAqB,GACrB+F,EAAkBE,KAAK,CAACC,EAAGC,KAC1B,IAAI/P,EAAS+P,EAAEhQ,MAAQ+P,EAAE/P,MAIzB,OAHe,IAAXC,IACHA,EAAS+P,EAAErD,MAAQoD,EAAEpD,OAEf1M,IAEJ8J,EAAsBhX,SACzB+W,EAAgB,IAAIC,GACpBA,EAAwB,GACxBkG,KACIlG,EAAsBhX,SACzB8W,EAAqB,IAAI+F,GACzBA,EAAoB,KAIdlO,EAAOkO,EAAkBjd,OAAQ,CACxC,IAAIe,GAAEA,GAAOgO,EACb,MAAM1R,EAAU2f,GAAgBjc,GAChC,IAAK1D,IAA+C,IAApC6f,EAAmB3Y,QAAQxD,KAAewW,EAAgBzS,IAAIzH,EAAQ4c,UACrF,SAEDiD,EAAmB1c,KAAKO,GACxB,MAAMwc,EAAU/F,EAAmB7V,IAAItE,GACjCiJ,EAAO,CACZ+J,KAAM,CACLvQ,KAAMyP,EACN2B,kBAAmB7T,EAAQgT,KAAKa,kBAChC/K,WAAY9I,EAAQ8I,YAAc,GAClC1F,SAAUpD,EAAQgT,KAAK5P,UAAY,IAEpCyS,SAAU7V,EAAQ6V,SAClBnS,GAAI1D,EAAQ0D,GACZoF,WAAY9I,EAAQ8I,WACpBkH,MAAOhQ,EAAQgQ,MACf2M,MAAO3c,EAAQ2c,MACfK,SAAUhd,EAAQgd,SAClBJ,SAAU5c,EAAQ4c,SAClB5P,aAAchN,EAAQgN,cAGvBkT,GAAW/F,EAAmB5V,IAAI0E,EAAMiX,GACxC,MAAMjQ,EAASkQ,GAAc,CAAEngB,UAASiJ,SACpCgH,GAAUA,EAAOyB,OACpBoI,EAAc3W,KAAK8M,EAAOyB,MAC1BwI,EAAgB3V,IAAIb,EAAIuF,GACxBgX,MAGFG,KACAC,KACAnB,KACK5F,GACJhH,GAAa,GAIf,SAAS+N,KACR,GAAqC,IAAjCtG,EAAsBhX,OAAc,CACvC,IAAIud,EACJ,KAAQA,EAAa9F,EAAgB7X,OACpC2d,EAAW7C,YAAc6C,EAAW7C,WAAW8C,YAAYD,GAE5D7G,EAAcE,OAAQ,GAIxB,SAASsG,KACR,IAAIvO,EACJ,KAAQA,EAAOoI,EAAcnX,OAC5B,GAAwB+O,EAh7CXjP,KAi7CZiP,EAAKmE,UAAYmE,EAAkB7W,KAAKuO,OAClC,CACN,MAAM1R,QAAEA,EAAOiJ,KAAEA,EAAInB,KAAEA,GAAS4J,EAChC8O,GAASxgB,GAAW6R,EAAa5I,GAAQ4I,EAAa/J,IAKzD,SAASsY,KAER,IAAI1O,EACJ,IAFAsI,EAAkByG,UAEV/O,EAAOsI,EAAkBrX,OAChC,GAAkB,WAAd+O,EAAKjP,KAAmB,CAC3B,MAAMie,cACLA,EAAazX,KACbA,EACAA,MAAMgF,QAAEA,EAAOqQ,OAAEA,EAAMtC,qBAAEA,EAAoBhJ,KAAEA,IAC5CtB,EAIJ,GAFAwL,GAAkBjU,EAAM,CAAEH,WAAY,KACtCmU,EAAsBhU,IACjBqV,EAAQ,CACZ,IAAIhC,EACAN,EACHM,EAAea,EAAiBlU,GACtBoR,IACViC,EAAejC,EAAiB/V,IAAI2E,IAErCyX,EAAcpE,aAAarO,EAAUqO,GACjC7I,EAAWxK,EAAK+J,OAAS/J,EAAK+J,KAAK2N,UACtC1X,EAAK+J,KAAK2N,WAG6B,WAApC1S,EAAwB6Q,SAAwB7Q,EAAS2S,eAC7DlD,EAASzP,EAAS2S,eAEnB,MAAMC,eAAEA,EAAcC,qBAAEA,GAAyB9N,EAAKlK,WAClD2Q,EAAcG,YAAciH,IAAqC,IAAnBA,GACjDpH,EAAcG,WAAWmH,MAAM9S,EAAwB4S,EAAgBC,GAExE,MAAME,EAAgB1G,EAAkBhW,IAAI2E,EAAK+J,MACjD,GAAIgO,GAAwC,MAAvBhO,EAAKlK,WAAWjI,IACpC,GAAImgB,EAAcnL,SAAU,CAC3B,MAAM6F,EAAexE,GAAkB5S,IAAI0c,EAAcnL,UACzD6F,GAAgBA,EAAauF,YAAY9I,IAAIlK,KAA2B+E,EAAKlK,WAAWjI,YAExF0W,GAAayJ,EAActd,GAAIsP,EAAKlK,WAAWjI,IAAKoN,GAGtDyD,EAAKzI,KAAKiY,UAAW,OACf,GAAkB,WAAdxP,EAAKjP,KAAmB,CAClC,MAAMwG,KACLA,EACAA,MAAMgF,QAAEA,GAASjO,QACjBA,EACAA,SAAWiO,QAASkT,IACjBzP,EACAiB,EAAW1E,IAAY0E,EAAWwO,IAAmBlT,IAAYkT,EACpEA,EAAe1D,YAAc0D,EAAe1D,WAAW2D,aAAanT,EAASkT,IAG7EjE,GAAkBjU,EADS0L,EAAwB1G,EAASjO,IAE5Did,EAAsBhU,SAEjB,GAAkB,WAAdyI,EAAKjP,KAAmB,CAClC,MAAMzC,QAAEA,GAAY0R,GACdmL,cAAEA,EAAawE,oBAAEA,GAAwBrhB,EAAQgT,KAAKlK,WACxD2Q,EAAcG,YAAciD,IAAmC,IAAlBA,EAChDpD,EAAcG,WAAW0H,KAAKthB,EAAQiO,QAAwB4O,EAAewE,GAE7ErhB,EAAQiO,QAASwP,WAAY8C,YAAYvgB,EAAQiO,cAE5C,GAAkB,WAAdyD,EAAKjP,KAAmB,CAClC,MAAMoT,SAAEA,EAAQ0L,SAAEA,GAAa7P,EACzBgK,EAAexE,GAAkB5S,IAAIuR,GACvC6F,IACHA,EAAauF,YAAYO,UACzBD,GAAY7F,EAAaiF,iBAEpB,GAAkB,WAAdjP,EAAKjP,KAAmB,CAClC,GAAIiP,EAAK1R,QAAQ6V,SAAU,CAC1B,MAAM6F,EAAexE,GAAkB5S,IAAIoN,EAAK1R,QAAQ6V,UACxD6F,GAAgBA,EAAa+F,WAE9B/P,EAAK1R,QAAQ6V,cAAWrT,EAGW,IAAjCuX,EAAsBhX,SACzBuX,EAAoB,IAAIlM,GAmC1B,SAASsT,GAAaC,GACrB,MAAMhhB,EAA4B,GAClC,IAAK,IAAIiE,EAAI,EAAGA,EAAI+c,EAAS5e,OAAQ6B,IAAK,CACzC,MAAM0O,EAAUqO,EAAS/c,GACzB,GAAmC,MAA/B0O,EAAQN,KAAKlK,WAAWjI,IAG3B,OAAO,EAFPF,EAAKwC,KAAKmQ,EAAQN,KAAKlK,WAAWjI,KAKpC,OAAOF,EAGR,SAAS6f,GAASxgB,EAAyBiJ,EAAsBnB,EAAoB,IACpF,IAAI8Z,WAAEA,EAAa,GAAEC,SAAEA,EAAW,EAACC,SAAEA,EAAW,GAAMha,EACtD,MAAMia,EAAgB/hB,EAAQ+C,OACxBif,EAAa/Y,EAAKlG,OAClBkZ,EAAsB8F,EAAgB,GAAMA,EAAgB,GAAKA,EAAgBC,EACvF,IAAIC,EAA8B,GAC9BniB,GAAU,EACd,GAAiB,IAAb+hB,GAA+B,IAAbC,GAAkBC,EAAe,CACtD,MAAMG,EAAcR,GAAa1hB,GACjC,GAAIkiB,EAAa,CAChB,MAAMC,EAAWT,GAAazY,GAC9B,GAAIkZ,EACH,IAAK,IAAIvd,EAAI,EAAGA,EAAIsd,EAAYnf,OAAQ6B,IAAK,CAC5C,IAA0C,IAAtCud,EAASjb,QAAQgb,EAAYtd,IAAY,CAC5Cqd,EAAe,GACfniB,GAAU,EACV,MAEDA,GAAU,EACVmiB,EAAa9e,KAAK,CAAEnD,QAASA,EAAQ4E,GAAIqE,UAAMzG,MAMnD,GAAI1C,GAA8B,IAAlBiiB,IAAwBtI,EAAcE,MACrD,IAAK,IAAI/U,EAAI,EAAGA,EAAIqE,EAAKlG,OAAQ6B,IAChCqd,EAAa9e,KAAK,CAAEnD,aAASwC,EAAWyG,KAAMA,EAAKrE,SAE9C,CACN,GAAIkd,EAAWE,EAAY,CAC1B,IAAII,EAAiBP,EAAWE,EAAgB/hB,EAAQ6hB,QAAYrf,EACpE,MAAMwb,EAAc/U,EAAK6Y,GACzB9D,EAAY/B,oBAAsBA,EA7ErC,SAA4BhT,EAAoB2Y,GAC/C,MAAMjI,MAAEA,GAAUF,EAClB,GAAIE,GAASiI,EAAW7e,OACvB,GAAIkQ,EAAehK,GAAO,CACzB,IACC+J,MAAMI,IAAEA,IACLnK,EACJ,IAAK,IAAIrE,EAAI,EAAGA,EAAIgd,EAAW7e,OAAQ6B,IAAK,CAC3C,MAAMyd,EAAaT,EAAWhd,GACxBka,EAAUuD,EAAWvD,SAAW,GACtC,GAAI1L,EAAIkP,gBAAkBxD,EAAQwD,cAAe,CAChD,MAAMC,EAAiB/H,EAAgBtT,QAAQmb,IACvB,IAApBE,GACH/H,EAAgBgI,OAAOD,EAAgB,GAExCX,EAAWY,OAAO5d,EAAG,GACrBqE,EAAKgF,QAAUoU,EACf,aAIFpZ,EAAK2Y,WAAaA,EA0DlBa,CAAmBzE,EAAa4D,GAE5BQ,GAAkB9M,EAAK8M,EAAgBpE,IAC1C6D,IACAC,IACI7O,EAAemP,IAAmBnP,EAAe+K,KACpDA,EAAYkD,SAAWkB,EAAelB,UAEvCe,EAAa9e,KAAK,CAAEnD,QAASoiB,EAAgBnZ,KAAM+U,KACxCoE,IAA4E,IAA1DtM,EAAiB9V,EAASge,EAAa6D,EAAW,IAIX,IAA1D/L,EAAiB7M,EAAMmZ,EAAgBN,EAAW,IAE5DG,EAAa9e,KAAK,CAAEnD,QAASoiB,EAAgBnZ,UAAMzG,IACnDqf,MAIAI,EAAa9e,KAAK,CAAEnD,QAASoiB,EAAgBnZ,UAAMzG,IACnDyf,EAAa9e,KAAK,CAAEnD,aAASwC,EAAWyG,KAAM+U,IAC9C6D,IACAC,MAZAG,EAAa9e,KAAK,CAAEnD,aAASwC,EAAWyG,KAAM+U,IAC9C8D,KAiBF,GAHIA,EAAWE,GACdlI,EAAc3W,KAAK,CAAEnD,UAASiJ,OAAMnB,KAAM,CAAE8Z,aAAYC,WAAUC,cAE/DC,EAAgBF,GAAYC,GAAYE,EAC3C,IAAK,IAAIpd,EAAIid,EAAUjd,EAAImd,EAAend,IAEzCqd,EAAa9e,KAAK,CAAEnD,QAASA,EAAQ4E,GAAIqE,UAAMzG,IAKlD,IAAK,IAAIoC,EAAI,EAAGA,EAAIqd,EAAalf,OAAQ6B,IAAK,CAC7C,MAAMqL,EAASyS,GAAYT,EAAard,IACxC,IAAe,IAAXqL,EAAkB,CACrB,GAAIwJ,EAAcE,OAASiI,EAAW7e,OAAQ,CACzC+e,EAAWE,GACdlI,EAAcnX,MAEfmX,EAAc3W,KAAK,CAAE8F,OAAMjJ,UAAS8H,SACpCiS,EAAwBD,EACxBA,EAAgB,GAChB,MAED,SAED,MAAM5I,OAAEA,EAAMQ,KAAEA,EAAIiR,IAAEA,GAAQ1S,EAC9BiB,GAAU4I,EAAc3W,KAAK+N,GAC7BQ,GAAQoI,EAAc3W,KAAKuO,GAC3BiR,GAAO3I,EAAkB7W,KAAKwf,IAIhC,SAASD,IAAY1iB,QAAEA,EAAOiJ,KAAEA,IAC/B,GAAIjJ,IAAYiJ,EAAM,CACrB,IAAKjJ,GAAWiJ,EACf,OAAIgK,EAAehK,GAoTtB,UAAoBA,KAAEA,IACrB,MAAMyX,EAz6BP,SAA2BkC,GAC1B,IAAIlC,EACAmC,EAAgB3I,EAAgB5V,IAAIse,EAAYhG,UAEpD,MAAQ8D,GAAiBmC,IAEtBnC,GACDzN,EAAe4P,KACd1P,EAAiB0P,IAClBA,EAAc5U,UAEdyS,EAAgBmC,EAAc5U,SAE/B4U,EAAgB3I,EAAgB5V,IAAIue,EAAcjG,UAEnD,OAAO8D,EA05BeoC,CAAkB7Z,GAClC8Z,EAAY5P,EAAiBlK,GAC7B+Z,EAAS3P,EAAcpK,GACvBga,EAAS1P,EAActK,GAC7B,IA0CI7F,EA1CAwe,EAAqB,GACzB3Y,EAAKvF,MAAQ2T,OACb6C,EAAgB3V,IAAI0E,EAAKvF,GAAIuF,GACxBA,EAAKgF,QA0BCwL,EAAcE,QACxB1Q,EAAKqV,QAAS,EACV3L,EAAW1J,EAAKgF,SACfhF,EAAKgF,QAAQiV,OAASja,EAAK+J,KAAK7K,OACnCqS,EAAkB,CAACvR,EAAKgF,WAAYuM,GACpCvR,EAAKgF,QAAU/O,EAAA,QAAO6E,SAASof,eAAela,EAAK+J,KAAK7K,MACxDc,EAAKqV,QAAS,IAGfsD,EAAanL,GAAUxN,EAAKgF,QAAQmV,YACpC5I,EAAkB,IAAIA,KAAoBoH,MAnCtC3Y,EAAK+J,KAAa/E,QACtBhF,EAAKgF,QAAWhF,EAAK+J,KAAa/E,SAEZ,QAAlBhF,EAAK+J,KAAKI,MACbnK,EAAKoN,UAAYtE,GAEdiR,EACH/Z,EAAKgF,QAAU/O,EAAA,QAAO6E,SAASmU,KACrB+K,EACVha,EAAKgF,QAAU/O,EAAA,QAAO6E,SAASsf,KACrBpa,EAAK+J,KAAKI,MAAQ2P,EACxB9Z,EAAKoN,UACRpN,EAAKgF,QAAU/O,EAAA,QAAO6E,SAASuf,gBAAgBra,EAAKoN,UAAWpN,EAAK+J,KAAKI,KAEzEnK,EAAKgF,QAAU/O,EAAA,QAAO6E,SAASwf,cAActa,EAAK+J,KAAKI,KAE5B,MAAlBnK,EAAK+J,KAAK7K,OACpBc,EAAKgF,QAAU/O,EAAA,QAAO6E,SAASof,eAAela,EAAK+J,KAAK7K,QAGtDkS,GAAoBG,EAAgBzX,QACnC2d,IAAkBlG,EAAgB,GAAGiD,YACxCpD,EAAiB9V,IAAI0E,EAAMuR,EAAgB,MAiB1CvR,EAAKgF,SAAW8U,IACf9Z,EAAK+J,KAAK5P,UAAY6F,EAAK+J,KAAK5P,SAASL,SAC5CK,EAAWyY,EAAkB5S,EAAK+J,KAAK5P,SAAU6F,EAAM,MACvDmR,EAAsB7V,IAAI0E,EAAKvF,GAAIN,IAGrC,MAAMuf,EAA0CnP,EAAiBvK,QAC9DzG,EACA,CACAyG,KAAMA,EACNyX,cAAeA,EACfje,KAAM,UAET,OAAIW,EACI,CACNsO,KAAM,CACL1R,QAAS,GACTiJ,KAAM7F,EACN0E,KAAM,CAAE8Z,eAETe,MACAzR,OAAQ6R,EAAY,CAAEtgB,KAAM,SAAUiB,GAAKuF,EAAavF,GAAI6d,UAAU,QAAU/e,GAG3E,CAAEmgB,OA3XCa,CAAW,CAAEva,SAsExB,UAAuBA,KAAEA,IACxB,IAaI6S,EACA2H,GAbHzQ,MAAMa,kBAAEA,IACL5K,GACAuE,SAAEA,GAAaiM,EACfiK,EAAcza,EAAK+D,cAAgB6G,EACvC,IAAKnT,OAAA4M,EAAA,EAAA5M,CAASgjB,GAAc,CAE3B,GADAlI,EAAoBvS,IACfA,EAAK+D,aACT,OAAO,EAER0W,EAAcza,EAAK+D,aAKpB/D,EAAKH,WAAUpI,OAAAwC,OAAA,GAAQ+F,EAAK+J,KAAKlK,YACjCG,EAAKvF,GAAKuF,EAAKvF,OAAS2T,OACxB6C,EAAgB3V,IAAI0E,EAAKvF,GAAIuF,GAC7B,MAAMvF,GAAEA,EAAEsM,MAAEA,EAAK2M,MAAEA,GAAU1T,EAC7B,GAAKvI,OAAA4M,EAAA,EAAA5M,CAAwBgjB,GA8CtB,CACN,IAAI7N,EAAW,IAAI6N,EAInB7N,EAASrI,SAASjI,KAAOiI,EACzB,MAAMkO,EAAexE,GAAkB5S,IAAIuR,GAC3C4N,EAAa,MACZ/H,EAAaiI,OAAQ,GAChBjI,EAAanJ,WAAa2H,EAAgBzS,IAAI/D,KAClDmW,EAAmB1W,KAAK,CAAEO,KAAIsM,QAAO2M,UACrC8C,QAGF/D,EAAa+H,WAAaA,EAC1B/H,EAAanJ,WAAY,EACzBsD,EAAS+N,kBAAkB3a,EAAK+J,KAAKlK,YACrC+M,EAASgO,gBAAgB5a,EAAK+J,KAAK5P,UACnC6F,EAAK4M,SAAWA,EAChBiG,EAAWjG,EAASiO,aACpBpI,EAAanJ,WAAY,MAlEiB,CAC1C,IAAIiF,EAAaL,GAAc7S,IAAIZ,GACnC,GAAK8T,EAmCJiM,EAAajM,EAAW3O,iBANxB,GA5BA4a,EAAa,MACZ,MAAMjM,EAAaL,GAAc7S,IAAIZ,GACjC8T,IACHA,EAAWmM,OAAQ,GACdnM,EAAWjF,WAAa2H,EAAgBzS,IAAI/D,KAChDmW,EAAmB1W,KAAK,CAAEO,KAAIsM,QAAO2M,UACrC8C,SAKHjI,EAAa,CACZuM,WAAYL,EAAYpY,MAAQ,UAChC0M,UAAWyB,EAAcxL,QACzB0V,OAAO,EACP9a,YAAa4a,EACb3a,WAAYoQ,GAAuBxV,EAAIuF,EAAK+J,KAAKlK,YACjD4P,mBAAkBhY,OAAAwC,OAAA,GAAO+F,EAAK+J,KAAKlK,YACnC1F,SAAU6F,EAAK+J,KAAK5P,SACpB6V,UAAW,EACX1G,WAAW,EACXvJ,WAAY,GACZ4O,cAAe,GACfpK,SAAUiM,EAAcjM,SACxBwW,kBAAkB,GAGnB7M,GAAc5S,IAAI0E,EAAKvF,GAAI8T,GACtBkM,EAAoB7M,aAAenW,OAAOC,KAAM+iB,EAAoB7M,aAAa9T,OAAQ,CAC7F,MAAM8T,YAAEA,EAAWoN,IAAEA,GA/EzB,SAASC,EACRrN,EACAnT,EACAkU,EAA0B,IAE1B,MAAMjX,EAAOD,OAAOC,KAAKkW,GACnBsN,EAAe,GACfC,KAAc1gB,KAAM4T,OAC1B,IAAK,IAAI1S,EAAI,EAAGA,EAAIjE,EAAKoC,OAAQ6B,IAAK,CACrC,MAAMoE,EAAa6N,EAAYlW,EAAKiE,MAC9Byf,EAAUC,GAAoBF,EAAU1gB,GAC9C,GAAIsF,EAAW6N,YAAa,CAC3B,MAAQA,YAAa0N,GAAuBL,EAC3Clb,EAAW6N,YACXnT,EACAkU,GAEDyM,EAAQrb,WAAaub,EACrBJ,EAAQxjB,EAAKiE,IAAMoE,EAAW4N,SAASyN,QAEvCF,EAAQxjB,EAAKiE,IAAMoE,EAAW4N,SAASyN,GAIzC,OADAzM,EAAczU,KAAKihB,GACZ,CAAEvN,YAAasN,EAASF,IAAKrM,GAuDJsM,CAAmBR,EAAoB7M,YAAanT,GACjF8T,EAAWxO,WAAa6N,EACxBW,EAAWI,cAAgBqM,EAS7B,GAHAnI,EAAW4H,EAAYY,GAAoB5gB,EAAIA,EAAI8T,EAAWxO,aAC9DwO,EAAWjF,WAAY,EACvBiF,EAAWwM,kBAAmB,EAC1BxM,EAAWyB,UAAY,EAC1B,OAAO,EAyBT,IAAI7V,EAWJ,OAVI0Y,IACHA,EAAWzM,MAAMK,QAAQoM,GAAYA,EAAW,CAACA,GACjD1Y,EAAWyY,EAAkBC,EAAU7S,EAAM,MAC7CmR,EAAsB7V,IAAIb,EAAIN,IAG1BmW,GAAsBmK,EAAoB7Q,iBAC9C0G,EAAmBkK,GAGb,CACN/R,KAAM,CACLzI,KAAM7F,EACN0E,KAAM,CAAE8Z,WAAY3Y,EAAK2Y,aAE1B1Q,OAAQ,CAAEzO,KAAM,SAAUoT,SAAU5M,EAAK4M,SAAUnS,KAAI6d,UAAU,IA7KxDiD,CAAc,CAAEvb,SAElB,GAAIjJ,GAAWiJ,EAAM,CAC3B,GAAIgK,EAAejT,IAAYiT,EAAehK,GAC7C,OAwXJ,UAAoBjJ,QAAEA,EAAOiJ,KAAEA,IAK9B,IAAI7F,EAJJ6F,EAAKgF,QAAUjO,EAAQiO,QACvBhF,EAAKoN,UAAYrW,EAAQqW,UACzBpN,EAAKvF,GAAK1D,EAAQ0D,GAClBuF,EAAKqU,kBAAoBtd,EAAQsd,kBAEjC,IAAImH,EAAkBrK,EAAsB9V,IAAI2E,EAAKvF,IASrD,OARsB,MAAlBuF,EAAK+J,KAAK7K,MAAgBc,EAAK+J,KAAK7K,OAASnI,EAAQgT,KAAK7K,KAC7Dc,EAAKgF,QAAU/O,EAAA,QAAO6E,SAASof,eAAela,EAAK+J,KAAK7K,MAC9Cc,EAAK+J,KAAK5P,WACpBA,EAAWyY,EAAkB5S,EAAK+J,KAAK5P,SAAU6F,EAAMjJ,GACvDoa,EAAsB7V,IAAI0E,EAAKvF,GAAIN,IAEpC+W,EAAmBlJ,OAAOjR,GAC1Bka,EAAgB3V,IAAI0E,EAAKvF,GAAIuF,GACtB,CACNyI,KAAM,CACL1R,QAASykB,EACTxb,KAAM7F,EACN0E,KAAM,IAEP6a,IAAK,CAAElgB,KAAM,SAAUwG,OAAMjJ,YA7YpB0kB,CAAW,CAAE1kB,UAASiJ,SACvB,GAAI4J,EAAe7S,IAAY6S,EAAe5J,GACpD,OAAOkX,GAAc,CAAEngB,UAASiJ,cAE3B,GAAIjJ,IAAYiJ,EAAM,CAC5B,GAAIgK,EAAejT,GAClB,OA2YJ,UAAoBA,QAAEA,IACrB,MAAM2kB,EAAYnR,EAAiBxT,GAC7BoD,EAAWgX,EAAsB9V,IAAItE,EAAQ0D,IAInD,GAHA0W,EAAsBnJ,OAAOjR,EAAQ0D,IACrCwW,EAAgBjJ,OAAOjR,EAAQ0D,IAC/ByW,EAAmBlJ,OAAOjR,GACtBA,EAAQgT,KAAKlK,WAAWjI,IAAK,CAChC,MAAM2W,EAAaL,GAAc7S,IAAItE,EAAQgd,UACvC6F,EAAgBlD,GAAgB3f,EAAQgd,UAC9C,GAAIxF,EACHA,EAAWC,SAAWD,EAAWC,QAAQxG,OAAOjR,EAAQgT,KAAKlK,WAAWjI,UAClE,GAAIgiB,GAAiBA,EAAchN,SAAU,CACnD,MAAM6F,EAAexE,GAAkB5S,IAAIue,EAAchN,UACzD6F,GAAgBA,EAAauF,YAAY2D,OAAO5kB,EAAQgT,KAAKlK,WAAWjI,MAG1E,OAAIb,EAAQ8c,eAAiB6H,EACrB,CACNjT,KAAM,CAAE1R,QAASoD,EAAU0E,KAAM,IACjC6a,IAAKgC,OAAYniB,EAAY,CAAEC,KAAM,SAAUzC,aAI7CoD,GACHmX,EAAyBpX,KAAK,KAC7B,IACImQ,EADAqO,EAAWve,GAAY,GAEvByhB,EAAa,GACjB,KAAQvR,EAAUqO,EAAShf,OAAQ,CAClC,GAAIkQ,EAAeS,GAElB,IADAA,EAAUqM,GAAgBrM,EAAQ5P,KAAO4P,GAC7BuC,SAAU,CACrB,MAAM6F,EAAexE,GAAkB5S,IAAIgP,EAAQuC,UACnD6F,GAAgBA,EAAa+F,WAC7BnO,EAAQuC,cAAWrT,MACb,CACN,MAAMsF,EAAOqP,GAAc7S,IAAIgP,EAAQ5P,IACnCoE,IACHA,EAAKgR,iBAAmBhR,EAAKgR,gBAAgB/H,UAC7C2G,GAAe5P,GACfqP,GAAclG,OAAOqC,EAAQ5P,KAIhC,IAAIohB,EAAkB1K,EAAsB9V,IAAIgP,EAAQ5P,IACpDohB,GACHnD,EAASxe,QAAQ2hB,GAEdzR,EAAcC,IAAYC,EAAcD,GAC3CuR,EAAW1hB,KAAKmQ,EAAQ5P,KAC4B,IAA1CmhB,EAAW3d,QAAQoM,EAAQsJ,YACjC/J,EAAeS,IAAYH,EAAiBG,GAC/CuR,EAAW1hB,KAAKmQ,EAAQ5P,IACd4P,EAAQrF,SAAWqF,EAAQrF,QAAQwP,YAC7CnK,EAAQrF,QAAQwP,WAAW8C,YAAYjN,EAAQrF,UAGjDmM,EAAsBnJ,OAAOqC,EAAQ5P,IACrCwW,EAAgBjJ,OAAOqC,EAAQ5P,OAK3B,CACNif,IAAK,CAAElgB,KAAM,SAAUzC,aA3cd+kB,CAAW,CAAE/kB,YACd,GAAI6S,EAAe7S,GACzB,OA+PJ,UAAuBA,QAAEA,IACxBA,EAAU2f,GAAgB3f,EAAQ0D,KAAO1D,EACzCka,EAAgBjJ,OAAOjR,EAAQ0D,IAC/B,MAAMoE,EAAOqP,GAAc7S,IAAItE,EAAQ0D,IACvC,IAAI+gB,EAAkBrK,EAAsB9V,IAAItE,EAAQ0D,IACxD0W,EAAsBnJ,OAAOjR,EAAQ0D,IACrCyW,EAAmBlJ,OAAOjR,GAC1B,IAAIglB,EAA+B,CAClCtT,KAAM,CACL1R,QAASykB,EACT3c,KAAM,KAWR,OARIA,GACHA,EAAKgR,iBAAmBhR,EAAKgR,gBAAgB/H,UAC7C2G,GAAe5P,GACfqP,GAAclG,OAAOjR,EAAQ0D,KAE7BshB,EAAc9T,OAAS,CAAEzO,KAAM,SAAUzC,UAAS6V,SAAU7V,EAAQ6V,UAG9DmP,EApRGC,CAAc,CAAEjlB,aAI1B,MAAO,GAGR,SAASskB,GAAoB5gB,EAAYqU,EAAkB/O,GAC1D,MAAO,CACNtF,KACAoF,WAAY,KACX,MAAM0O,EAAaL,GAAc7S,IAAIyT,GACrC,OAAIP,GACHA,EAAWwM,kBAAmB,EAC9BtjB,OAAAwC,OAAA,GAAYsU,EAAW1O,aAEjB,IAER1F,SAAU,KACT,MAAMoU,EAAaL,GAAc7S,IAAIyT,GACrC,OAAIP,EACIA,EAAWpU,SAEZ,IAER4F,cA4IF,SAASmX,IAAcngB,QAAEA,EAAOiJ,KAAEA,IACjCjJ,EAAU2f,GAAgB3f,EAAQ0D,KAAO1D,EACzC,MAAM6V,SAAEA,EAAQ5H,QAAEA,EAAO6O,cAAEA,EAAapZ,GAAEA,GAAO1D,EACjD,IACCgT,MAAMa,kBAAEA,IACL5K,EACJ,MAAMya,EAAcza,EAAK+D,cAAgB6G,EAEzC,IAAKnT,OAAA4M,EAAA,EAAA5M,CAASgjB,GACb,MAAO,GAER,IAAI5H,EA8DA1Y,EA7DA4hB,EAA+B,GAC/BE,GAAY,EACZT,EAAkBrK,EAAsB9V,IAAItE,EAAQ0D,IASxD,GARAuF,EAAK6T,cAAgBA,EACrB7T,EAAKvF,GAAKA,EACVuF,EAAKH,WAAUpI,OAAAwC,OAAA,GAAQ+F,EAAK+J,KAAKlK,YACjCqR,EAAmBlJ,OAAOjR,GACtBiO,GAAWA,EAAQwP,aACtBxU,EAAKgF,QAAUA,GAGXvN,OAAA4M,EAAA,EAAA5M,CAAwBgjB,GAkCtB,CACN,MAAMhI,EAAexE,GAAkB5S,IAAIuR,GAC3C5M,EAAK4M,SAAWA,EAChB6F,EAAanJ,WAAY,EACzBsD,EAAU+N,kBAAkB3a,EAAK+J,KAAKlK,YACtC+M,EAAUgO,gBAAgB5a,EAAK+J,KAAK5P,UAChCsY,EAAaiI,QAChBuB,GAAY,EACZ9K,EAAsBnJ,OAAOvN,GAC7BoY,EAAWjG,EAAUiO,cAEtBpI,EAAanJ,WAAY,MA7CiB,CAC1C,MAAMiF,EAAaL,GAAc7S,IAAIZ,GACrC,GAAI8T,EAAY,CACfA,EAAWkB,mBAAkBhY,OAAAwC,OAAA,GAAQ+F,EAAKH,YAC1C0O,EAAW1O,WAAaoQ,GAAuBxV,EAAI8T,EAAWkB,oBAC9DlB,EAAWpU,SAAW6F,EAAK+J,KAAK5P,SAChCoU,EAAWjF,WAAY,EACvB,MAAM4S,EAxsCV,SAAkBrd,EAAkB9H,EAAciJ,GACjD,IAAIkc,EAAwB,GAY5B,OAXArd,EAAKyQ,cAAgBzQ,EAAKyQ,eAAiB,IAAI/W,EAAA,EAC3CsG,EAAKyQ,cAAcV,MACtB/P,EAAKyQ,cAAcvD,QAASoQ,IAC3BA,EAAQpQ,QAAQ,CAACsD,EAAMF,KACtB,MAAMnI,EAASqI,EAAI5X,OAAAwC,OAAA,GAAMlD,GAAOU,OAAAwC,OAAA,GAAS+F,IACrCgH,IACHkV,EAAiB/M,GAAgBnI,OAK9BkV,EA2rCqBE,CAAS7N,EAAYxX,EAAQ8I,WAAY0O,EAAWkB,oBAC7ElB,EAAW1O,WAAUpI,OAAAwC,OAAA,GAAQsU,EAAW1O,WAAeqc,IACnDnlB,EAAQgT,KAAK5P,SAASL,OAAS,GAAKkG,EAAK+J,KAAK5P,SAASL,OAAS,KACnEyU,EAAWmM,OAAQ,GAEfnM,EAAWmM,OAppDd,SAAyB3jB,EAAciJ,EAAWJ,EAAyByc,GAChF,MAAMnM,EAAgB,IAAIzY,OAAOC,KAAKX,MAAaU,OAAOC,KAAKsI,IAC/D,IAAK,IAAIrE,EAAI,EAAGA,EAAIuU,EAAcpW,OAAQ6B,IACzC,KAAI0gB,EAAiBpe,QAAQiS,EAAcvU,KAAO,GAAlD,CAIA,GADemL,EAAK/P,EAAQmZ,EAAcvU,IAAKqE,EAAKkQ,EAAcvU,KACvDkL,QAAS,CACnBjH,IACA,MAEDyc,EAAiBniB,KAAKgW,EAAcvU,KA0oDjC2gB,CACCvlB,EAAQ8I,WACRG,EAAKH,WACL,KACC0O,EAAWmM,OAAQ,GAEpBnM,EAAWgB,qBAAuB,IAAIhB,EAAWgB,qBAAqBgN,UAAY,IAGhFhO,EAAWmM,QACdvJ,EAAsBnJ,OAAOvN,GAC7BwhB,GAAY,EACZpJ,EAAW4H,EAAYY,GAAoB5gB,EAAIA,EAAI8T,EAAWxO,aAC9DwO,EAAWmM,OAAQ,EACfnM,EAAWyB,UAAY,IAC1B6C,EAAW,OAGbtE,EAAWjF,WAAY,EACvBiF,EAAWwM,kBAAmB,GAgChC,OAjBA9J,EAAgB3V,IAAI0E,EAAKvF,GAAIuF,GAC7B+b,EAAc9T,OAAS,CAAEzO,KAAM,SAAUoT,WAAUnS,KAAI6d,UAAU,GAG7DzF,IAEH1Y,EAAWyY,EADXC,EAAWzM,MAAMK,QAAQoM,GAAYA,EAAW,CAACA,GACV7S,EAAMjJ,GAC7Coa,EAAsB7V,IAAIb,EAAIN,IAG3B8hB,IACHF,EAActT,KAAO,CACpB1R,QAASykB,EACTxb,KAAM7F,EACN0E,KAAM,KAGDkd,EA2BR,SAASzH,GAA2B7Z,GACnC,MAAMN,EAAWgX,EAAsB9V,IAAIZ,IAAO,GAClD,IAAK,IAAIkB,EAAI,EAAGA,EAAIxB,EAASL,OAAQ6B,IAAK,CACzC,MAAMkO,EAAQ1P,EAASwB,GACvB,GAAIkO,EAAM7E,QACT,OAAO6E,EAAMpP,GAEd,MAAM+hB,EAAUlI,GAA2BzK,EAAMpP,IACjD,GAAI+hB,EACH,OAAOA,GA6KV,MAAO,CACNtX,MAt1BD,SAAeuX,EAAsC,IACpD,IAAIzX,EAAUyX,EAAazX,QACtBA,IAIJA,EAAU/O,EAAA,QAAO6E,SAASmU,MAE3BuB,EAAa/Y,OAAAwC,OAAA,GAAQuW,EAAkBiM,EAAY,CAAEzX,YACrD,MAAM0X,EAnrBR,SAAmB3b,GAClB,MAAMiG,EAASjG,IACT6I,EAAiBE,EAAQ9C,GACzB2G,EAAW,IACT3G,EAGR,OADA2G,EAAS/D,eAAiBA,EACnB9J,GAAQ6N,GA4qBOgP,CAAU5b,EAAV4b,CAAoB,GAAI,IAEvC5H,EAAc,CACnBta,GAFD8V,KAAmBnC,OAGlBrE,KAAM2S,EACNhJ,MAAO,EACP3M,MAAO,EACPgN,SAAU,KACVJ,SAAU,KACViJ,UAAW,KACX/c,WAAY,IAEboR,EAAgB3V,IAAI,KAAM,CACzBb,GAAI,KACJsM,MAAO,EACP2M,MAAO,EACPK,SAAU,GACV/O,UACA+E,KAAMc,EAAE,QACR8I,SAAU,OAEX9C,EAAc3W,KAAK,CAClBnD,QAAS,GACTiJ,KAAM,CAAC+U,GACPlW,KAAM,CAAE8Z,WAAYnL,GAAUxI,EAAQmV,eAEvCnD,KACAG,KACAC,KACAhG,OAAmB7X,EACnB0c,KACK5F,GACJhH,GAAa,IA8yBdwT,QAt3BD,WACChM,EAAc3W,KAAK,CAClBnD,QAAS,CAACka,EAAgB5V,IAAIkV,IAC9BvQ,KAAM,GACNnB,KAAM,KAEHwR,GACHpa,EAAA,QAAO6mB,qBAAqBzM,GAE7B2G,KACAG,KACA3F,EAAoBzF,QAAQ,CAAC4B,EAAUlT,KACtCxE,EAAA,QAAO6mB,qBAAqBriB,GAC5BkT,MAED,MAAMuI,EAAMH,KACZG,GAAOA,IACPtF,EAAqB,GACrBC,EAAgB,GAChBC,EAAwB,GACxBC,EAAoB,GACpBO,EAA2B,GAC3BC,EAAkB,GAClBP,EAAY,IAAI7L,EAChB8L,EAAgBpY,QAChBsY,EAAsBtY,QACtBqY,EAAqB,IAAI/L,EACzBkM,EAAoB,IAAIlM,EACxBiM,OAAmB7X,GA21BnBihB,WA3yBD,WACClK,GAAoBA,wDC5iDf,IAAIyM,EASAC,EAOAC,EAMAC,EAOAC,EAMAzlB,EAIA0lB,EAEAC,EAEAd,EAoEXQ,EAAStlB,OAAOwC,OAChB+iB,EAA2BvlB,OAAOulB,yBAClCC,EAAsBxlB,OAAOwlB,oBAC7BC,EAAwBzlB,OAAOylB,sBAC/BC,EAAK1lB,OAAO0lB,GACZzlB,EAAOD,OAAOC,KACd0lB,EAA4B3lB,OAAO2lB,0BACnCC,EAAU5lB,OAAO4lB,QACjBd,EAAS9kB,OAAO8kB,2CCjELhkB,EAAsBtC,EAAA,QAAOsC,IA0GzB6X,EAAA,qCCxOfkN,EAAArb,EAAAmO,EAAA,sBAAAmN,IAAAD,EAAArb,EAAAmO,EAAA,sBAAAoN,IAAAF,EAAArb,EAAAmO,EAAA,sBAAAqN,IAAAH,EAAArb,EAAAmO,EAAA,sBAAAsN,IAAAJ,EAAArb,EAAAmO,EAAA,sBAAAvC,IAAAyP,EAAArb,EAAAmO,EAAA,sBAAA/L,IAAA,IAAAsZ,EAAAL,EAAA,GAAAM,EAAAN,EAAA,IAAAO,EAAAP,EAAA,IAiCO,MAAMC,EAAmB,qBAyE1B,SAAUC,EAA6D/U,GAC5E,OAAON,QAAQM,GAAQA,EAAKxB,QAAUsW,GAGjC,SAAUE,EAAiBhV,GAChC,OAAON,QAAQM,GAAQA,EAAKoF,UAGvB,SAAU6P,EAA0C3T,GACzD,QAAoB,mBAATA,IAAuBA,EAAKgE,WAMlC,SAAUF,EACfpF,GAEA,OAAO+U,EAAwB/U,IAASgV,EAAiBhV,GAiBpD,MAAOpE,UAAiBwZ,EAAA,EAWrB9nB,gBACP+nB,EACArV,GAOAtS,KAAKoF,KAAK,CACT/B,KAAMskB,EACNtiB,OAAQ,SACRiN,SAIK1S,OAAO+N,EAAsB2E,GAKnC,QAJ6BlP,IAAzBpD,KAAK4nB,kBACR5nB,KAAK4nB,gBAAkB,IAAIH,EAAA,GAGxBznB,KAAK4nB,gBAAgBvf,IAAIsF,GAC5B,MAAM,IAAIa,iDAAiDb,EAAMyC,eAGlEpQ,KAAK4nB,gBAAgBziB,IAAIwI,EAAO2E,GAE5BA,aAAgBkV,EAAA,QACnBlV,EAAKuV,KACHC,IACA9nB,KAAK4nB,gBAAiBziB,IAAIwI,EAAOma,GACjC9nB,KAAK+nB,gBAAgBpa,EAAOma,GACrBA,GAEPE,IACA,MAAMA,IAGEX,EAAwB/U,IAClCtS,KAAK+nB,gBAAgBpa,EAAO2E,GAIvB1S,eAAe+N,EAAsBsa,GAK3C,QAJ+B7kB,IAA3BpD,KAAKkoB,oBACRloB,KAAKkoB,kBAAoB,IAAIT,EAAA,GAG1BznB,KAAKkoB,kBAAkB7f,IAAIsF,GAC9B,MAAM,IAAIa,mDAAmDb,EAAMyC,eAGpE,MAAM3G,EAAc,IAAIie,EAAA,EAElBS,EAA6B,CAClC7e,SAAU2e,EAAgB,IAAMxe,EAAYrE,KAAK,CAAE/B,KAAM,gBACzDoG,eAGDzJ,KAAKkoB,kBAAkB/iB,IAAIwI,EAAOwa,GAClCnoB,KAAK+nB,gBAAgBpa,EAAOwa,GAStBvoB,IACN+N,GAEA,IAAK3N,KAAK4nB,kBAAoB5nB,KAAKqI,IAAIsF,GACtC,OAAO,KAGR,MAAM2E,EAAOtS,KAAK4nB,gBAAgB1iB,IAAIyI,GAEtC,GAAI+J,EAAYpF,IAASiV,EAAejV,GACvC,OAAOA,EAGR,GAAIA,aAAgBkV,EAAA,QACnB,OAAO,KAGR,MAAMY,EAA0C9V,IAkBhD,OAjBAtS,KAAK4nB,gBAAgBziB,IAAIwI,EAAOya,GAEhCA,EAAQP,KACNC,IAnHE,SACLxV,GAEA,OAAON,QACNM,GACCA,EAAK+V,eAAe,eACpB/V,EAAK+V,eAAe,aACnB3Q,EAASpF,EAAKgW,UAAYf,EAAejV,EAAKgW,WA6G1CC,CAAoCT,KACvCA,EAAaA,EAAWQ,SAGzBtoB,KAAK4nB,gBAAiBziB,IAAIwI,EAAOma,GACjC9nB,KAAK+nB,gBAAgBpa,EAAOma,GACrBA,GAEPE,IACA,MAAMA,IAID,KAGDpoB,YAAe+N,GACrB,OAAK3N,KAAKkoB,mBAAsBloB,KAAKuO,YAAYZ,GAI1C3N,KAAKkoB,kBAAkBhjB,IAAIyI,GAH1B,KAMF/N,IAAI+N,GACV,OAAOqE,QAAQhS,KAAK4nB,iBAAmB5nB,KAAK4nB,gBAAgBvf,IAAIsF,IAG1D/N,YAAY+N,GAClB,OAAOqE,QAAQhS,KAAKkoB,mBAAqBloB,KAAKkoB,kBAAkB7f,IAAIsF,KAIvDsM,EAAA,wVCpQf,MAEa3N,EAFGhL,OAAAknB,EAAA,EAAAlnB,CAAO,CAAEgI,SAAAmf,EAAA,IAAY/e,YAEjBC,CAAQ,UAAgBC,YAAYN,SAAEA,GAAUI,WAAEA,EAAU1F,SAAEA,IACjF,IAAIwH,EAAA9B,KAAAI,UAAEA,EAAY,SAAQyC,GAAEA,EAAEC,SAAEA,GAAW,EAAInB,OAAEA,EAAMjK,OAAEA,EAAS,GAAEsnB,QAAEA,GAAOld,EAAEwK,EAAA1H,EAAA9C,EAAA,2DAC/E,MAAMnB,EAASf,EAASpE,IAAY4E,GACpC,IAEI6e,EAFA7f,EAA2ByD,EAG/B,GAAIlC,EAAQ,CACPmC,IACH1D,EAAOuB,EAAOhE,KAAKyC,EAAM1H,IAE1B,MAAMwnB,EAAWpW,IAChBkW,GAAWA,EAAQlW,GAEdA,EAAMqW,kBAAqC,IAAjBrW,EAAMsW,QAAiBtW,EAAMuW,SAAYvW,EAAMwW,SAAY3d,GACpF/J,OAAA2nB,EAAA,QAAA3nB,CAAI,iBACRkR,EAAM0W,sBACG9lB,IAAT0F,GAAsBuB,EAAO/D,QAAQwC,KAIxC6f,EAASrnB,OAAAwC,OAAA,GAAQkS,EAAK,CAAE4S,UAAS9f,cAEjC6f,EAASrnB,OAAAwC,OAAA,GAAQkS,EAAK,CAAElN,SAEzB,OAAOxH,OAAAknB,EAAA,EAAAlnB,CAAE,IAAKqnB,EAAW3kB,OAGXiW,EAAA,wDC7Bf,SAASkP,IACR,OAAOC,EAAA,QAAQC,SAAQ,GAMxB,SAASC,IACR,MAAM,IAAI9a,MAAM,iCAGV,MAAM+a,EASZ3pB,cACCI,KAAKwpB,QAAU,GAUhB5pB,IAAIqK,GACH,MAAQuf,QAASC,GAAazpB,KAE9B,OADAypB,EAAS1lB,KAAKkG,GACP,CACNrK,UACC6pB,EAASrG,OAAOqG,EAAS3hB,QAAQmC,IACjCA,EAAO0H,YAUV/R,UACC,OAAO,IAAIwpB,EAAA,QAASC,IACnBrpB,KAAKwpB,QAAQ5T,QAAS3L,IACrBA,GAAUA,EAAO0H,SAAW1H,EAAO0H,YAEpC3R,KAAK2R,QAAUwX,EACfnpB,KAAK0R,IAAM4X,EACXD,GAAQ,MCtEXlC,EAAArb,EAAAmO,EAAA,sBAAAyP,IAMA,MAAMC,EAAW,IAAIvnB,EAAA,EA4Df,MAAOsnB,UAIHH,EAJV3pB,kCAYWI,KAAA4pB,aAA0D,IAAIxnB,EAAA,EASxExC,KAAK4S,GACJxS,KAAK4pB,aAAahU,QAAQ,CAACiU,EAASxmB,MA/DhC,SAAsBymB,EAA6BC,GACxD,GAA4B,iBAAjBA,GAAmD,iBAAfD,IAAwD,IAA7BA,EAAWhiB,QAAQ,KAAa,CACzG,IAAIkiB,EAOJ,OANIL,EAASthB,IAAIyhB,GAChBE,EAAQL,EAASzkB,IAAI4kB,IAErBE,EAAQ,IAAIhpB,WAAW8oB,EAAWppB,QAAQ,MAAO,UACjDipB,EAASxkB,IAAI2kB,EAAYE,IAEnBA,EAAMziB,KAAKwiB,GAElB,OAAOD,IAAeC,GAqDjBE,CAAY5mB,EAAamP,EAAMnP,OAClC,IAAIwmB,GAASjU,QAAS/I,IACrBA,EAAOwD,KAAKrQ,KAAMwS,OA0BtB5S,GAAGyD,EAAW6mB,GACb,GAAIja,MAAMK,QAAQ4Z,GAAW,CAC5B,MAAMV,EAAUU,EAASjnB,IAAKinB,GAAalqB,KAAKmqB,aAAa9mB,EAAM6mB,IACnE,MAAO,CACNtqB,UACC4pB,EAAQ5T,QAAS3L,GAAWA,EAAO0H,aAItC,OAAO3R,KAAKmqB,aAAa9mB,EAAM6mB,GAGxBtqB,aAAayD,EAAmB6mB,GACvC,MAAME,EAAYpqB,KAAK4pB,aAAa1kB,IAAI7B,IAAS,GAGjD,OAFA+mB,EAAUrmB,KAAKmmB,GACflqB,KAAK4pB,aAAazkB,IAAI9B,EAAM+mB,GACrB,CACNzY,QAAS,KACR,MAAMyY,EAAYpqB,KAAK4pB,aAAa1kB,IAAI7B,IAAS,GACjD+mB,EAAUhH,OAAOgH,EAAUtiB,QAAQoiB,GAAW,MAMnCjQ,EAAA,qCC9If,IAAAoQ,EAAAlD,EAAA,IAIA,MAEa7d,EAFWhI,OAAA+oB,EAAA,EAAA/oB,CAAO,CAAEmY,YAAA4Q,EAAA,EAAa5gB,YAAA4gB,EAAA,EAAa1Y,QAAA0Y,EAAA,GAEnCpC,CAAgB,EAAGre,YAAc6P,cAAahQ,cAAakI,eAClF,MAAM6X,EAAoB,GAC1B7X,EAAQ,KACP,IAAI1H,EACJ,KAAQA,EAASuf,EAAQjmB,OACxB0G,EAAO0H,YAGT,MAAMvD,EAAWqL,IACjB,MAAO,CACN7Z,UAAU+N,EAAsB6J,EAAqB/N,GACpD,GAAI2E,EAAU,CACb,MAAMkE,EAAOlE,EAASkc,YAAY3c,GAClC,GAAI2E,EAAM,CACT,MAAMrI,EAASqI,EAAK7I,YAAYiF,GAAG,aAAc,KAChD8I,MAGD,OADAgS,EAAQzlB,KAAKkG,GACN,KACN,MAAMrD,EAAQ4iB,EAAQ1hB,QAAQmC,IACf,IAAXrD,IACH4iB,EAAQpG,OAAOxc,EAAO,GACtBqD,EAAO0H,eAMZ/R,IAAO+N,GACN,GAAIS,EAAU,CACb,MAAMkE,EAAOlE,EAASkc,YAAe3c,GACrC,GAAI2E,EACH,OAAOA,EAAKhJ,WAGd,OAAO,SAKK2Q,EAAA,qCC9Cf,IAAAsQ,EAAApD,EAAA,IAAAqD,EAAArD,EAAA,IAiIO,MAAM/d,EA7HG9H,OAAAkpB,EAAA,EAAAlpB,CAAO,CAAEmI,YAAA+gB,EAAA,EAAa7Y,QAAA6Y,EAAA,GAmDtB7gB,CACd,EAAGC,YAAcH,cAAakI,eAC7B,MAAM8Y,EAAW,IAAIF,EAAA,EACrB5Y,EAAQ,KACP8Y,EAAS/nB,UAGV,MAAMgoB,EAAW,CAChBxlB,IAAMzD,IACL,MAAMkpB,EAAcF,EAASvlB,IAAIzD,GACjC,GAAKkpB,GAAsC,YAAvBA,EAAYC,OAGhC,OAAOD,EAAYjjB,OAIrBvC,IAAU,CAAC1D,EAAUiG,EAAY2c,GAAsB,KACtD,MAAMzjB,EAAU8pB,EAAIxlB,IAAIzD,GACxB,MAAqB,mBAAViG,IACVA,EAAQA,EAAM9G,KACqB,mBAAf8G,EAAMmgB,MACzB4C,EAAStlB,IAAI1D,EAAK,CACjBmpB,OAAQ,UACRljB,eAEDA,EAAMmgB,KAAMhX,IACX,MAAM8Z,EAAcF,EAASvlB,IAAIzD,GAC7BkpB,GAAeA,EAAYjjB,QAAUA,IACxC+iB,EAAStlB,IAAI1D,EAAK,CACjBmpB,OAAQ,WACRljB,MAAOmJ,IAERwT,GAAc5a,SAMlBghB,EAAStlB,IAAI1D,EAAK,CACjBmpB,OAAQ,WACRljB,UAED2c,GAAc5a,IACP/B,IAERW,IAAW5G,GACHgpB,EAASpiB,IAAI5G,GAErBoQ,OAAa,CAACpQ,EAAU4iB,GAAsB,KAC7CoG,EAAS5Y,OAAOpQ,GAChB4iB,GAAc5a,KAEf/G,MAAY,CAAC2hB,GAAsB,KAClCoG,EAAS/nB,QACT2hB,GAAc5a,KAEfohB,SAAe,CAACppB,EAAUiG,EAAY2c,GAAsB,KAC3D,IAAIsG,EAAcF,EAASvlB,IAAIzD,GAK/B,GAJKkpB,GACJD,EAAIvlB,IAAI1D,EAAKiG,EAAO2c,IAErBsG,EAAcF,EAASvlB,IAAIzD,KACgB,YAAvBkpB,EAAYC,OAGhC,OAAOD,EAAYjjB,QAEpB,OAAOgjB,IAQKzQ,EAAA,qCCnIf,IAAAoQ,EAAAlD,EAAA,IAAA2D,EAAA3D,EAAA,IAGA,MAEa4D,EAFQzpB,OAAA+oB,EAAA,EAAA/oB,CAAO,CAAEqY,MAAA0Q,EAAA,EAAOjhB,OAAA0hB,EAAA,GAEhBE,CAAa,EAAGphB,YAAcR,SAAQuQ,aAC1D,IAAIrV,EAAK,EACT,OAA2C2mB,GACnC,IAAI3b,KACV,MAAM4b,EAAaC,KAAKC,UAAU9b,GAC5B+b,EAAWjiB,EAAOlE,IAAI+lB,IAAW3mB,IAWvC,OAVA8E,EAAOjE,IAAI8lB,EAAQI,GAAU,GACTjiB,EAAOyhB,YAAYQ,KAAYH,IAAcI,UAChEhqB,OAAA+oB,EAAA,EAAA/oB,GACA,MAAMye,EAAMkL,KAAU3b,GACtBqK,EAAM4R,QACN,MAAM1a,QAAekP,EAGrB,OAFAze,OAAA+oB,EAAA,EAAA/oB,GACAqY,EAAM6R,SACC3a,KAEc,QAKVoJ,EAAA,qCC1BfkN,EAAArb,EAAAmO,EAAA,sBAAApP,IAAA,MACM4gB,EAAY,IAAI3gB,KAAKC,eAAe,QAD1B,CAAE2gB,KAAM,UAAWC,MAAO,OAAQC,IAAK,YAGhD,SAAS/gB,EAAcghB,GAC7B,OAAOJ,EAAUxf,OAAO4f,wBCHzBZ,EAAAa,QAAA,CAAkBC,QAAA,oBAAAC,KAAA,8BAAAC,QAAA,iCAAAjjB,KAAA,8BAAA3C,KAAA,mDCAlB4kB,EAAAa,QAAA,CAAkBC,QAAA,oBAAAC,KAAA,8BAAAznB,MAAA,+BAAA8B,KAAA,mDCAlB4kB,EAAAa,QAAA,CAAkBC,QAAA,kBAAAC,KAAA,4BAAAE,MAAA,6BAAAtjB,YAAA,wDCAlBqiB,EAAAa,QAAA,CAAkBC,QAAA,oBAAAC,KAAA,8BAAAznB,MAAA,+BAAA4nB,MAAA,+BAAAC,KAAA,8BAAAC,cAAA,uCAAAC,OAAA,gCAAAC,KAAA,8BAAAC,UAAA,mCAAAC,SAAA,kCAAAC,KAAA,8BAAAC,MAAA,+BAAAC,SAAA,kCAAAvmB,KAAA,8BAAAwmB,OAAA,qDCAlB5B,EAAAa,QAAA,CAAkBC,QAAA,oBAAAC,KAAA,8BAAAc,QAAA","file":"main.28cae8329a6b7fea71c2.bundle.js","sourcesContent":["import global from '../../shim/global';\nimport { History, HistoryOptions, OnChangeFunction } from './../interfaces';\n\nexport class HashHistory implements History {\n\tprivate _onChangeFunction: OnChangeFunction;\n\tprivate _current: string;\n\tprivate _window: Window;\n\n\tconstructor({ window = global.window, onChange }: HistoryOptions) {\n\t\tthis._onChangeFunction = onChange;\n\t\tthis._window = window;\n\t\tthis._window.addEventListener('hashchange', this._onChange, false);\n\t\tthis._current = this.normalizePath(this._window.location.hash);\n\t\tthis._onChangeFunction(this._current);\n\t}\n\n\tpublic normalizePath(path: string): string {\n\t\treturn path.replace('#', '');\n\t}\n\n\tpublic prefix(path: string) {\n\t\tif (path[0] !== '#') {\n\t\t\treturn `#${path}`;\n\t\t}\n\t\treturn path;\n\t}\n\n\tpublic set(path: string) {\n\t\tthis._window.location.hash = this.prefix(path);\n\t\tthis._onChange();\n\t}\n\n\tpublic get current(): string {\n\t\treturn this._current;\n\t}\n\n\tpublic destroy() {\n\t\tthis._window.removeEventListener('hashchange', this._onChange);\n\t}\n\n\tprivate _onChange = () => {\n\t\tconst path = this.normalizePath(this._window.location.hash);\n\t\tif (path !== this._current) {\n\t\t\tthis._current = path;\n\t\t\tthis._onChangeFunction(this._current);\n\t\t}\n\t};\n}\n\nexport default HashHistory;\n","import global from '../shim/global';\nimport Evented from '../core/Evented';\nimport {\n\tRouteConfig,\n\tHistory,\n\tRouteContext,\n\tParams,\n\tRouterInterface,\n\tRoute,\n\tRouterOptions,\n\tMatchType\n} from './interfaces';\nimport { HashHistory } from './history/HashHistory';\nimport { EventObject } from '../core/Evented';\n\nconst PARAM = '__PARAM__';\n\nconst paramRegExp = new RegExp(/^{.+}$/);\n\ninterface RouteWrapper {\n\troute: Route;\n\tsegments: string[];\n\tparent: RouteWrapper | undefined;\n\ttype: MatchType;\n\tparams: Params;\n}\n\nexport interface NavEvent extends EventObject<string> {\n\toutlet?: string;\n\tcontext?: RouteContext;\n}\n\nexport interface RouteEvent extends EventObject<string> {\n\troute: RouteContext;\n\taction: 'enter' | 'exit';\n}\n\nexport interface OutletEvent extends EventObject<string> {\n\toutlet: RouteContext;\n\taction: 'enter' | 'exit';\n}\n\nconst ROUTE_SEGMENT_SCORE = 7;\nconst DYNAMIC_SEGMENT_PENALTY = 2;\n\nfunction matchingParams({ params: previousParams }: RouteContext, { params }: RouteContext) {\n\tconst matching = Object.keys(previousParams).every((key) => previousParams[key] === params[key]);\n\tif (!matching) {\n\t\treturn false;\n\t}\n\treturn Object.keys(params).every((key) => previousParams[key] === params[key]);\n}\n\nexport class Router extends Evented<{ nav: NavEvent; route: RouteEvent; outlet: OutletEvent }>\n\timplements RouterInterface {\n\tprivate _routes: Route[] = [];\n\tprivate _routeMap: { [index: string]: Route } = Object.create(null);\n\tprivate _matchedRoutes: { [index: string]: RouteContext } = Object.create(null);\n\tprivate _matchedOutletMap = new Map<string, Map<string, RouteContext>>();\n\tprivate _currentParams: Params = {};\n\tprivate _currentQueryParams: Params = {};\n\tprivate _defaultRoute: string | undefined;\n\tprivate _history!: History;\n\tprivate _options: RouterOptions;\n\tprivate _currentMatchedRoute: RouteContext | undefined;\n\n\tconstructor(config: RouteConfig[], options: RouterOptions = {}) {\n\t\tsuper();\n\t\tthis._options = options;\n\t\tthis._register(config);\n\t\tconst autostart = options.autostart === undefined ? true : options.autostart;\n\t\tif (autostart) {\n\t\t\tthis.start();\n\t\t}\n\t}\n\n\t/**\n\t * Sets the path against the registered history manager\n\t *\n\t * @param path The path to set on the history manager\n\t */\n\tpublic setPath(path: string): void {\n\t\tthis._history.set(path);\n\t}\n\n\tpublic start() {\n\t\tconst { HistoryManager = HashHistory, base, window } = this._options;\n\t\tthis._history = new HistoryManager({ onChange: this._onChange, base, window });\n\t\tif (this._matchedRoutes.errorRoute && this._defaultRoute) {\n\t\t\tconst path = this.link(this._defaultRoute);\n\t\t\tif (path) {\n\t\t\t\tthis.setPath(path);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Generate a link for a given outlet identifier and optional params.\n\t *\n\t * @param outlet The outlet to generate a link for\n\t * @param params Optional Params for the generated link\n\t */\n\tpublic link(outlet: string, params: Params = {}): string | undefined {\n\t\tlet route = this._routeMap[outlet];\n\t\tif (route === undefined) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet linkPath: string | undefined = route.fullPath;\n\t\tif (route.fullQueryParams.length > 0) {\n\t\t\tlet queryString = route.fullQueryParams.reduce((queryParamString, param, index) => {\n\t\t\t\tif (index > 0) {\n\t\t\t\t\treturn `${queryParamString}&${param}={${param}}`;\n\t\t\t\t}\n\t\t\t\treturn `?${param}={${param}}`;\n\t\t\t}, '');\n\t\t\tlinkPath = `${linkPath}${queryString}`;\n\t\t}\n\t\tparams = { ...route.defaultParams, ...this._currentQueryParams, ...this._currentParams, ...params };\n\n\t\tif (Object.keys(params).length === 0 && route.fullParams.length > 0) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst fullParams = [...route.fullParams, ...route.fullQueryParams];\n\t\tfor (let i = 0; i < fullParams.length; i++) {\n\t\t\tconst param = fullParams[i];\n\t\t\tif (params[param]) {\n\t\t\t\tlinkPath = linkPath.replace(`{${param}}`, params[param]);\n\t\t\t} else {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t}\n\t\treturn this._history.prefix(linkPath);\n\t}\n\n\t/**\n\t * Returns the route context for the route identifier if one has been matched\n\t *\n\t * @param routeId The route identifer\n\t */\n\tpublic getRoute(routeId: string): RouteContext | undefined {\n\t\treturn this._matchedRoutes[routeId];\n\t}\n\n\tpublic getOutlet(outletId: string): undefined | Map<string, RouteContext> {\n\t\treturn this._matchedOutletMap.get(outletId);\n\t}\n\n\tpublic getMatchedRoute(): RouteContext | undefined {\n\t\treturn this._currentMatchedRoute;\n\t}\n\n\t/**\n\t * Returns all the params for the current matched outlets\n\t */\n\tpublic get currentParams() {\n\t\treturn this._currentParams;\n\t}\n\n\t/**\n\t * Strips the leading slash on a path if one exists\n\t *\n\t * @param path The path to strip a leading slash\n\t */\n\tprivate _stripLeadingSlash(path: string): string {\n\t\tif (path[0] === '/') {\n\t\t\treturn path.slice(1);\n\t\t}\n\t\treturn path;\n\t}\n\n\t/**\n\t * Registers the routing configuration\n\t *\n\t * @param config The configuration\n\t * @param routes The routes\n\t * @param parentRoute The parent route\n\t */\n\tprivate _register(config: RouteConfig[], routes?: Route[], parentRoute?: Route): void {\n\t\troutes = routes ? routes : this._routes;\n\t\tfor (let i = 0; i < config.length; i++) {\n\t\t\tlet { path, outlet, children, defaultRoute = false, defaultParams = {}, id, title } = config[i];\n\t\t\tlet [parsedPath, queryParamString] = path.split('?');\n\t\t\tlet queryParams: string[] = [];\n\t\t\tparsedPath = this._stripLeadingSlash(parsedPath);\n\n\t\t\tconst segments: string[] = parsedPath.split('/');\n\t\t\tconst route: Route = {\n\t\t\t\tparams: [],\n\t\t\t\tid,\n\t\t\t\toutlet,\n\t\t\t\ttitle,\n\t\t\t\tpath: parsedPath,\n\t\t\t\tsegments,\n\t\t\t\tdefaultParams: parentRoute ? { ...parentRoute.defaultParams, ...defaultParams } : defaultParams,\n\t\t\t\tchildren: [],\n\t\t\t\tfullPath: parentRoute ? `${parentRoute.fullPath}/${parsedPath}` : parsedPath,\n\t\t\t\tfullParams: [],\n\t\t\t\tfullQueryParams: [],\n\t\t\t\tscore: parentRoute ? parentRoute.score : 0\n\t\t\t};\n\t\t\tif (defaultRoute) {\n\t\t\t\tthis._defaultRoute = id;\n\t\t\t}\n\t\t\tfor (let i = 0; i < segments.length; i++) {\n\t\t\t\tconst segment = segments[i];\n\t\t\t\troute.score += ROUTE_SEGMENT_SCORE;\n\t\t\t\tif (paramRegExp.test(segment)) {\n\t\t\t\t\troute.score -= DYNAMIC_SEGMENT_PENALTY;\n\t\t\t\t\troute.params.push(segment.replace('{', '').replace('}', ''));\n\t\t\t\t\tsegments[i] = PARAM;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (queryParamString) {\n\t\t\t\tqueryParams = queryParamString.split('&').map((queryParam) => {\n\t\t\t\t\treturn queryParam.replace('{', '').replace('}', '');\n\t\t\t\t});\n\t\t\t}\n\t\t\troute.fullQueryParams = parentRoute ? [...parentRoute.fullQueryParams, ...queryParams] : queryParams;\n\n\t\t\troute.fullParams = parentRoute ? [...parentRoute.fullParams, ...route.params] : route.params;\n\n\t\t\tif (children && children.length > 0) {\n\t\t\t\tthis._register(children, route.children, route);\n\t\t\t}\n\t\t\tthis._routeMap[id] = route;\n\t\t\troutes.push(route);\n\t\t}\n\t}\n\n\t/**\n\t * Returns an object of query params\n\t *\n\t * @param queryParamString The string of query params, e.g `paramOne=one&paramTwo=two`\n\t */\n\tprivate _getQueryParams(queryParamString?: string): { [index: string]: string } {\n\t\tconst queryParams: { [index: string]: string } = {};\n\t\tif (queryParamString) {\n\t\t\tconst queryParameters = queryParamString.split('&');\n\t\t\tfor (let i = 0; i < queryParameters.length; i++) {\n\t\t\t\tconst [key, value] = queryParameters[i].split('=');\n\t\t\t\tqueryParams[key] = value;\n\t\t\t}\n\t\t}\n\t\treturn queryParams;\n\t}\n\n\t/**\n\t * Called on change of the route by the the registered history manager. Matches the path against\n\t * the registered outlets.\n\t *\n\t * @param requestedPath The path of the requested route\n\t */\n\tprivate _onChange = (requestedPath: string): void => {\n\t\trequestedPath = this._stripLeadingSlash(requestedPath);\n\t\tconst previousMatchedRoutes = this._matchedRoutes;\n\t\tthis._matchedRoutes = Object.create(null);\n\t\tthis._matchedOutletMap.clear();\n\t\tconst [path, queryParamString] = requestedPath.split('?');\n\t\tthis._currentQueryParams = this._getQueryParams(queryParamString);\n\t\tconst segments = path.split('/');\n\t\tlet routeConfigs: RouteWrapper[] = this._routes.map((route) => ({\n\t\t\troute,\n\t\t\tsegments: [...segments],\n\t\t\tparent: undefined,\n\t\t\tparams: {},\n\t\t\ttype: 'index'\n\t\t}));\n\t\tlet routeConfig: RouteWrapper | undefined;\n\t\tlet matchedRoutes: RouteWrapper[] = [];\n\t\twhile ((routeConfig = routeConfigs.pop())) {\n\t\t\tconst { route, parent, segments, params } = routeConfig;\n\t\t\tlet segmentIndex = 0;\n\t\t\tlet type: MatchType = 'index';\n\t\t\tlet paramIndex = 0;\n\t\t\tlet routeMatch = true;\n\t\t\tif (segments.length < route.segments.length) {\n\t\t\t\trouteMatch = false;\n\t\t\t} else {\n\t\t\t\twhile (segments.length > 0) {\n\t\t\t\t\tif (route.segments[segmentIndex] === undefined) {\n\t\t\t\t\t\ttype = 'partial';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tconst segment = segments.shift()!;\n\t\t\t\t\tif (route.segments[segmentIndex] === PARAM) {\n\t\t\t\t\t\tparams[route.params[paramIndex++]] = segment;\n\t\t\t\t\t\tthis._currentParams = { ...this._currentParams, ...params };\n\t\t\t\t\t} else if (route.segments[segmentIndex] !== segment) {\n\t\t\t\t\t\trouteMatch = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tsegmentIndex++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (routeMatch) {\n\t\t\t\trouteConfig.type = type;\n\t\t\t\tmatchedRoutes.push({ route, parent, type, params, segments: [] });\n\t\t\t\tif (segments.length) {\n\t\t\t\t\trouteConfigs = [\n\t\t\t\t\t\t...routeConfigs,\n\t\t\t\t\t\t...route.children.map((childRoute) => ({\n\t\t\t\t\t\t\troute: childRoute,\n\t\t\t\t\t\t\tsegments: [...segments],\n\t\t\t\t\t\t\tparent: routeConfig,\n\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\tparams: { ...params }\n\t\t\t\t\t\t}))\n\t\t\t\t\t];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet matchedRouteId: string | undefined = undefined;\n\n\t\tlet matchedRoute = matchedRoutes.shift();\n\t\twhile (matchedRoute && matchedRoutes.length) {\n\t\t\tlet currentMatch = matchedRoutes.shift();\n\t\t\tif (currentMatch && currentMatch.route.score > matchedRoute.route.score) {\n\t\t\t\tmatchedRoute = currentMatch;\n\t\t\t}\n\t\t}\n\n\t\tif (matchedRoute) {\n\t\t\tif (matchedRoute.type === 'partial') {\n\t\t\t\tmatchedRoute.type = 'error';\n\t\t\t}\n\t\t\tmatchedRouteId = matchedRoute.route.id;\n\t\t\tconst title = this._options.setDocumentTitle\n\t\t\t\t? this._options.setDocumentTitle({\n\t\t\t\t\t\tid: matchedRouteId,\n\t\t\t\t\t\ttitle: matchedRoute.route.title,\n\t\t\t\t\t\tparams: matchedRoute.params,\n\t\t\t\t\t\tqueryParams: this._currentQueryParams\n\t\t\t\t  })\n\t\t\t\t: matchedRoute.route.title;\n\t\t\tif (title) {\n\t\t\t\tglobal.document.title = title;\n\t\t\t}\n\t\t\twhile (matchedRoute) {\n\t\t\t\tlet { type, params, route } = matchedRoute;\n\t\t\t\tlet parent: RouteWrapper | undefined = matchedRoute.parent;\n\t\t\t\tconst matchedRouteContext: RouteContext = {\n\t\t\t\t\tid: route.id,\n\t\t\t\t\toutlet: route.outlet,\n\t\t\t\t\tqueryParams: this._currentQueryParams,\n\t\t\t\t\tparams,\n\t\t\t\t\ttype,\n\t\t\t\t\tisError: () => type === 'error',\n\t\t\t\t\tisExact: () => type === 'index'\n\t\t\t\t};\n\t\t\t\tconst previousMatchedOutlet = previousMatchedRoutes[route.id];\n\t\t\t\tconst routeMap = this._matchedOutletMap.get(route.outlet) || new Map();\n\t\t\t\trouteMap.set(route.id, matchedRouteContext);\n\t\t\t\tthis._matchedOutletMap.set(route.outlet, routeMap);\n\t\t\t\tthis._matchedRoutes[route.id] = matchedRouteContext;\n\t\t\t\tif (!previousMatchedOutlet || !matchingParams(previousMatchedOutlet, matchedRouteContext)) {\n\t\t\t\t\tthis.emit({ type: 'route', route: matchedRouteContext, action: 'enter' });\n\t\t\t\t\tthis.emit({ type: 'outlet', outlet: matchedRouteContext, action: 'enter' });\n\t\t\t\t}\n\t\t\t\tmatchedRoute = parent;\n\t\t\t}\n\t\t} else {\n\t\t\tthis._matchedRoutes.errorRoute = {\n\t\t\t\tid: 'errorRoute',\n\t\t\t\toutlet: 'errorRoute',\n\t\t\t\tqueryParams: {},\n\t\t\t\tparams: {},\n\t\t\t\tisError: () => true,\n\t\t\t\tisExact: () => false,\n\t\t\t\ttype: 'error'\n\t\t\t};\n\t\t}\n\n\t\tconst previousMatchedOutletKeys = Object.keys(previousMatchedRoutes);\n\t\tfor (let i = 0; i < previousMatchedOutletKeys.length; i++) {\n\t\t\tconst key = previousMatchedOutletKeys[i];\n\t\t\tconst matchedRoute = this._matchedRoutes[key];\n\t\t\tif (!matchedRoute || !matchingParams(previousMatchedRoutes[key], matchedRoute)) {\n\t\t\t\tthis.emit({ type: 'route', route: previousMatchedRoutes[key], action: 'exit' });\n\t\t\t\tthis.emit({ type: 'outlet', outlet: previousMatchedRoutes[key], action: 'exit' });\n\t\t\t}\n\t\t}\n\t\tthis._currentMatchedRoute = matchedRouteId ? this._matchedRoutes[matchedRouteId] : undefined;\n\t\tthis.emit({\n\t\t\ttype: 'nav',\n\t\t\toutlet: matchedRouteId,\n\t\t\tcontext: this._currentMatchedRoute\n\t\t});\n\t\tif (this._options.resetScroll) {\n\t\t\tconst { window = global.window } = this._options;\n\t\t\ttry {\n\t\t\t\twindow.scroll(0, 0);\n\t\t\t} catch (e) {\n\t\t\t\t// Catch errors if we're in an environment without window.scroll\n\t\t\t}\n\t\t}\n\t};\n}\n\nexport default Router;\n","import global from '../../shim/global';\nimport { History as HistoryInterface, HistoryOptions, OnChangeFunction } from './../interfaces';\nimport has from '../../core/has';\n\nconst trailingSlash = new RegExp(/\\/$/);\nconst leadingSlash = new RegExp(/^\\//);\n\nfunction stripBase(base: string | undefined, path: string): string {\n\tif (!base) {\n\t\treturn path;\n\t}\n\tif (path.indexOf(base) === 0) {\n\t\treturn path.slice(base.length);\n\t}\n\treturn path;\n}\n\nfunction sanatizePath(path: string) {\n\tif (path[0] === '#') {\n\t\tpath = path.slice(1);\n\t}\n\tif (path[0] === '/') {\n\t\tpath = path.slice(1);\n\t}\n\treturn path;\n}\n\nexport class StateHistory implements HistoryInterface {\n\tprivate _current!: string;\n\tprivate _onChangeFunction: OnChangeFunction;\n\tprivate _window: Window;\n\tprivate _base: string | undefined;\n\n\tconstructor({ onChange, window = global.window, base }: HistoryOptions) {\n\t\tif (has('dojo-debug') && base) {\n\t\t\tconsole.warn(`Base is no longer supported via history options, please set 'base' in the '.dojorc'`);\n\t\t}\n\t\tthis._base = has('app-base') ? `${has('app-base')}` : '/';\n\t\tif (/(#|\\?)/.test(this._base)) {\n\t\t\tthrow new TypeError(\"base must not contain '#' or '?'\");\n\t\t}\n\t\tthis._onChangeFunction = onChange;\n\t\tthis._window = window;\n\t\tif (!trailingSlash.test(this._base)) {\n\t\t\tthis._base = `${this._base}/`;\n\t\t}\n\t\tif (!leadingSlash.test(this._base)) {\n\t\t\tthis._base = `/${this._base}`;\n\t\t}\n\t\tthis._window.addEventListener('popstate', this._onChange, false);\n\t\tthis._onChange();\n\t}\n\n\tpublic prefix(path: string) {\n\t\treturn sanatizePath(path);\n\t}\n\n\tprivate _setBasePath(path: string) {\n\t\treturn `${this._base}${sanatizePath(path)}`;\n\t}\n\n\tpublic set(path: string) {\n\t\tconst value = stripBase(this._base, path);\n\t\tif (this._current === value) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._window.history.pushState({}, '', this._setBasePath(value));\n\t\tthis._onChange();\n\t}\n\n\tpublic get current(): string {\n\t\treturn this._current;\n\t}\n\n\tprivate _onChange = () => {\n\t\tconst pathName = this._window.location.pathname.replace(/\\/$/, '');\n\t\tthis._current = stripBase(this._base, pathName + this._window.location.search);\n\n\t\tthis._onChangeFunction(this._current);\n\t};\n}\n\nexport default StateHistory;\n","import { SiteMeta } from './interfaces';\n\nexport const meta: SiteMeta = {\n\ttitle: 'learn dojo',\n\tauthor: 'odoenet',\n\tdescription: 'byte by byte',\n\tfooterLinks: [\n\t\t{\n\t\t\thref: 'https://learn-dojo.com/atom.xml',\n\t\t\ttext: 'rss feed',\n\t\t\tlogo: '/assets/images/logos/rss-logo-32px.png'\n\t\t},\n\t\t{\n\t\t\thref: 'https://github.com/odoe/learn-dojo',\n\t\t\ttext: 'github',\n\t\t\tlogo: '/assets/images/logos/GitHub-Mark-32px.png'\n\t\t},\n\t\t{\n\t\t\thref: 'https://www.youtube.com/channel/UCTMyJW_31j2hyZGKJpddgaQ',\n\t\t\ttext: 'youtube',\n\t\t\tlogo: '/assets/images/logos/yt_logo_mono_light_32px.png'\n\t\t},\n\t\t{\n\t\t\thref: 'https://dojo.io/',\n\t\t\ttext: 'powered by @dojo'\n\t\t}\n\t]\n};\n\n// -------------------------------------\n// Plugins for static site generation\n// -------------------------------------\n\n// remark plugins with options\nexport const remarkPlugins = [\n\t{\n\t\tresolve: 'remark-external-links',\n\t\toptions: { target: '_blank', rel: ['nofollow'] }\n\t}\n];\n\n// rehype plugins with options\nexport const rehypePlugins = [\n\t{\n\t\tresolve: 'rehype-picture',\n\t\toptions: {\n\t\t\tjpg: {\n\t\t\t\twebp: 'image/webp'\n\t\t\t},\n\t\t\tpng: {\n\t\t\t\twebp: 'image/webp'\n\t\t\t}\n\t\t},\n\t},\n\t'@mapbox/rehype-prism',\n\t'rehype-slug',\n];\n","export default [\n\t{\n\t\tid: 'list',\n\t\tpath: '/',\n\t\toutlet: 'main',\n\t\tdefaultRoute: true\n\t},\n\t{\n\t\tid: 'blog',\n\t\tpath: '{path}',\n\t\toutlet: 'main'\n\t}\n];","import { create, tsx, diffProperty, invalidator } from '../core/vdom';\nimport injector from '../core/middleware/injector';\nimport icache from '../core/middleware/icache';\nimport { RenderResult } from '../core/interfaces';\nimport { MatchDetails, RouteContext } from './interfaces';\nimport Router from './Router';\nimport { RouteProperties } from './Route';\n\nconst ROUTER_KEY = 'router';\n\nexport interface RouteMatch {\n\t[index: string]: boolean;\n}\n\nexport interface Matches {\n\t[index: string]: boolean;\n}\n\nexport interface Matcher {\n\t(defaultMatches: Matches, matchDetails: Map<string, RouteContext>): Matches;\n}\n\nexport interface OutletProperties {\n\tid: string;\n\tmatcher?: Matcher;\n\trouterKey?: string;\n}\n\nexport interface OutletChildren {\n\t[index: string]: RenderResult | ((matchDetails: MatchDetails) => RenderResult);\n}\n\nexport interface OutletFunctionChild {\n\t(matchDetails: MatchDetails): RenderResult;\n}\n\nconst factory = create({ icache, injector, diffProperty, invalidator })\n\t.properties<OutletProperties>()\n\t.children<OutletChildren | OutletFunctionChild>();\n\nexport const Outlet = factory(function Outlet({\n\tmiddleware: { icache, injector, diffProperty, invalidator },\n\tproperties,\n\tchildren\n}) {\n\tdiffProperty('routerKey', (current: RouteProperties, next: RouteProperties) => {\n\t\tconst { routerKey: currentRouterKey = ROUTER_KEY } = current;\n\t\tconst { routerKey = ROUTER_KEY } = next;\n\t\tif (routerKey !== currentRouterKey) {\n\t\t\tconst currentHandle = icache.get<Function>('handle');\n\t\t\tif (currentHandle) {\n\t\t\t\tcurrentHandle();\n\t\t\t}\n\t\t\tconst handle = injector.subscribe(routerKey);\n\t\t\tif (handle) {\n\t\t\t\ticache.set('handle', () => handle);\n\t\t\t}\n\t\t}\n\t\tinvalidator();\n\t});\n\tconst { id, matcher, routerKey = ROUTER_KEY } = properties();\n\tconst [outletChildren] = children();\n\n\tconst currentHandle = icache.get<Function>('handle');\n\tif (!currentHandle) {\n\t\tconst handle = injector.subscribe(routerKey);\n\t\tif (handle) {\n\t\t\ticache.set('handle', () => handle);\n\t\t}\n\t}\n\n\tconst router = injector.get<Router>(routerKey);\n\n\tif (router) {\n\t\tconst currentRouteContext = router.getMatchedRoute();\n\t\tconst routeContextMap = router.getOutlet(id);\n\t\tif (routeContextMap && currentRouteContext) {\n\t\t\tif (typeof outletChildren === 'function') {\n\t\t\t\treturn outletChildren({ ...currentRouteContext, router });\n\t\t\t}\n\t\t\tlet matches = Object.keys(outletChildren).reduce(\n\t\t\t\t(matches, key) => {\n\t\t\t\t\tmatches[key] = !!routeContextMap.get(key);\n\t\t\t\t\treturn matches;\n\t\t\t\t},\n\t\t\t\t{} as Matches\n\t\t\t);\n\t\t\tif (matcher) {\n\t\t\t\tmatches = matcher(matches, routeContextMap);\n\t\t\t}\n\t\t\treturn (\n\t\t\t\t<virtual>\n\t\t\t\t\t{Object.keys(matches)\n\t\t\t\t\t\t.filter((key) => matches[key])\n\t\t\t\t\t\t.map((key) => {\n\t\t\t\t\t\t\tconst renderer = outletChildren[key];\n\t\t\t\t\t\t\tif (typeof renderer === 'function') {\n\t\t\t\t\t\t\t\tconst context = routeContextMap.get(key) || currentRouteContext;\n\t\t\t\t\t\t\t\treturn renderer({ ...context, router });\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn renderer;\n\t\t\t\t\t\t})}\n\t\t\t\t</virtual>\n\t\t\t);\n\t\t}\n\t}\n\treturn null;\n});\n\nexport default Outlet;\n","import { tsx, create } from '@dojo/framework/core/vdom';\n\nimport * as css from './Footer.m.css';\n\nimport { FooterLink } from '../../interfaces';\n\ninterface FooterProperties {\n  footerLinks: FooterLink[];\n  author: string;\n}\n\nconst dateFormatter = new Intl.DateTimeFormat('en-US');\n\nfunction asImage({logo, text}: Pick<FooterLink, 'logo' | 'text'>) {\n  return (\n    <picture>\n      <source type=\"image/webp\" srcset={logo?.replace(/\\.(jpg|png)/, '.webp')}/>\n      <source type=\"image/jpeg\" srcset={logo}/>\n      <img alt={text} loading=\"lazy\" classes={[ css.logo ]} src={logo} />\n    </picture>\n  );\n}\n\nfunction createLinks(links: FooterLink[]) {\n  return links.map(({ href, text, logo }) => (\n    <a classes={[css.link]} key={href} href={href} rel=\"noopener noreferrer\" target=\"_blank\" aria-label={text}>\n      {logo ? asImage({logo, text}) : <virtual><br />{text}</virtual>}\n    </a>\n  ));\n}\n\nconst factory = create().properties<FooterProperties>();\n\nexport default factory(({ properties }) => {\n  const { author, footerLinks } = properties();\n  const d = new Date();\n  // const buildTime = has('build-time-render') ? dateFormatter.format(d) : null;\n  // const name = has('build-time-render') ? author : null;\n  const buildTime = dateFormatter.format(d);\n  const name = author;\n  const links = createLinks(footerLinks);\n  return (\n    <footer key=\"footer\" classes={[css.root]}>\n      <span>&copy; {`${d.getFullYear()}, ${name}`}</span>\n      <br />\n      <div>\n      {links}\n      </div>\n      <br />\n      <span classes={[css.details]} key=\"footer\">\n        Last build: {`${buildTime}`}\n      </span>\n      <br />\n    </footer>\n  );\n});\n","import { tsx, create } from '@dojo/framework/core/vdom';\n\nimport Link from '@dojo/framework/routing/Link';\n\nimport * as css from './Header.m.css';\n\nconst factory = create().properties<{ title: string }>();\n\nexport default factory(({ properties }) => {\n  const { title } = properties() || 'My Site';\n  return (\n    <header classes={[css.root]}>\n      <div classes={[css.title]}>\n        <Link to=\"/\" isOutlet={false} classes={[css.link]}>\n          {title}\n        </Link>\n      </div>\n    </header>\n  );\n});\n","import { tsx, create } from '@dojo/framework/core/vdom';\n\nimport * as css from './Hero.m.css';\n\nconst factory = create().properties<{ description: string }>();\n\nexport default factory(({ properties }) => {\n  const { description } = properties();\n  return (\n    <div classes={[css.root]}>\n    <picture>\n      <source\n        type=\"image/webp\"\n        srcset=\"\n        /assets/images/learn-dojo-jumbotron-320.webp 320w,\n        /assets/images/learn-dojo-jumbotron-640.webp 640w,\n        /assets/images/learn-dojo-jumbotron-768.webp 768w,\n        /assets/images/learn-dojo-jumbotron-1024.webp 1024w,\n        /assets/images/learn-dojo-jumbotron-1366.webp 1366w,\n        /assets/images/learn-dojo-jumbotron-1600.webp 1600w,\n        /assets/images/learn-dojo-jumbotron-1920.webp 1920w\n      \"/>\n      <source\n        type=\"image/jpeg\"\n        srcset=\"\n        /assets/images/learn-dojo-jumbotron-320.jpg 320w,\n        /assets/images/learn-dojo-jumbotron-640.jpg 640w,\n        /assets/images/learn-dojo-jumbotron-768.jpg 768w,\n        /assets/images/learn-dojo-jumbotron-1024.jpg 1024w,\n        /assets/images/learn-dojo-jumbotron-1366.jpg 1366w,\n        /assets/images/learn-dojo-jumbotron-1600.jpg 1600w,\n        /assets/images/learn-dojo-jumbotron-1920.jpg 1920w\n      \"/>\n      <img alt={description} loading=\"lazy\" classes={[ css.image ]} src=\"/assets/images/learn-dojo-jumbotron-768.jpg\" />\n    </picture>\n      <h3 classes={[css.description]}>{description}</h3>\n    </div>\n  );\n});\n","import { tsx, create } from '@dojo/framework/core/vdom';\n\nimport * as css from './SignUp.m.css';\n\nconst factory = create();\n\nexport default factory(() => (\n  <aside classes={[ css.root ]}>\n    <div classes={[ css.email ]}>\n      <form\n        classes={[ css.form ]}\n        action=\"https://odoe.us9.list-manage.com/subscribe/post?u=711bff655927baa32886103d5&amp;id=6d978f8bcf\"\n        method=\"post\"\n        id=\"mc-embedded-subscribe-form\"\n        name=\"mc-embedded-subscribe-form\"\n        target=\"_blank\"\n        novalidate\n      >\n        <div classes={[ css.gridcontainer ]}>\n          <div classes={[ css.column ]}>\n            <h3 classes={[ css.title ]}>\n              <strong>Subscribe to newsletter</strong>\n            </h3>\n            <div>\n              <label for=\"mce-EMAIL\">Your email</label>\n              <input\n                placeholder=\"Your email\"\n                type=\"email\"\n                value=\"\"\n                name=\"EMAIL\"\n                classes={[ css.input ]}\n                id=\"mce-EMAIL\"\n              />\n            </div>\n            <div>\n              <label for=\"mce-FNAME\">Your first name</label>\n              <input\n                placeholder=\"Your first name\"\n                type=\"text\"\n                value=\"\"\n                name=\"FNAME\"\n                classes={[ css.input ]}\n                id=\"mce-FNAME\"\n              />\n            </div>\n            <button classes={[css.submit]} type=\"submit\">Subscribe</button>\n            <div classes={[ css.info ]}>\n              <p>\n                We use Mailchimp as our marketing platform. By clicking below to subscribe, you\n                acknowledge that your information will be transferred to Mailchimp for\n                processing.{' '}\n                <a classes={[css.link]} href=\"https://mailchimp.com/legal/\" rel=\"noopener noreferrer\" target=\"_blank\" aria-label=\"Learn more about Mailchimp's privacy practices here\">\n                  Learn more about Mailchimp's privacy practices here.\n                </a>\n              </p>\n            </div>\n          </div>\n        </div>\n      </form>\n    </div>\n  </aside>\n));\n","import { tsx, create } from '@dojo/framework/core/vdom';\n\nimport Footer from '../widgets/footer/Footer';\nimport Header from '../widgets/header/Header';\nimport Hero from '../widgets/hero/Hero';\nimport SignUp from '../widgets/signup/SignUp';\n\nimport * as css from './Layout.m.css';\n\nimport { SiteMeta } from '../interfaces';\n\nconst factory = create().properties<SiteMeta>();\n\nexport default factory(({ children, properties }) => {\n\tconst { title, description, author, footerLinks } = properties();\n\n\treturn (\n\t\t<div classes={[ css.root ]}>\n\t\t\t<head>\n\t\t\t\t<meta charset=\"utf-8\" />\n\t\t\t\t<meta name=\"theme-color\" content=\"#009dff\" />\n\t\t\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n\t\t\t\t<link rel=\"icon\" href=\"/assets/favicon.ico\" />\n\t\t\t\t<link rel=\"stylesheet\" type=\"text/css\" href=\"./assets/prism.css\" />\n\t\t\t\t<link rel=\"preconnect\" href=\"https://www.google-analytics.com\" />\n\t\t\t</head>\n\t\t\t<Header title={title} />\n\t\t\t<Hero description={description} />\n\t\t\t<main classes={[ css.section ]}>{children()}</main>\n\t\t\t<SignUp />\n\t\t\t<Footer {...{ author, footerLinks }} />\n\t\t</div>\n\t);\n});\n\n","import { tsx, create } from '@dojo/framework/core/vdom';\nimport Outlet from '@dojo/framework/routing/Outlet';\n\nimport Blog from './pages/Blog';\nimport BlogList from './blog-list/BlogList';\n\nimport Layout from './layouts/Layout';\n\nimport { AppProperties } from './interfaces';\n\nconst factory = create().properties<AppProperties>();\n\nexport default factory(({ properties }) => {\n\tconst { siteMeta } = properties();\n\treturn (\n\t\t<Layout {...siteMeta}>\n\t\t\t<Outlet\n\t\t\t\tid=\"main\"\n\t\t\t\tmatcher={(matches, matchMap) => {\n\t\t\t\t\tmatches.list = matchMap.has('list') && matchMap.get('list')!.isExact();\n\t\t\t\t\treturn matches;\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{{\n\t\t\t\t\tlist: <BlogList />,\n\t\t\t\t\tblog: ({ params: { path } }) => <Blog path={path} />,\n\t\t\t\t}}\n\t\t\t</Outlet>\n\t\t</Layout>\n\t);\n});\n","import renderer, { tsx } from '@dojo/framework/core/vdom';\nimport Registry from '@dojo/framework/core/Registry';\nimport { registerRouterInjector } from '@dojo/framework/routing/RouterInjector';\nimport { StateHistory } from '@dojo/framework/routing/history/StateHistory';\n\nimport { meta } from './site-config';\nimport routes from './routes';\nimport App from './App';\n\nconst registry = new Registry();\nconst router = registerRouterInjector(routes, registry, { HistoryManager: StateHistory });\n\nconst r = renderer(() => <App siteMeta={meta} />);\nconst domNode = document.getElementById('root') as HTMLElement;\nr.mount({ registry, domNode });\n\nrouter.on('nav', () => scroll(0, 0));\n","import { Registry } from '../core/Registry';\nimport { RegistryLabel } from '../core/interfaces';\n\nimport { Router } from './Router';\nimport { RouteConfig, RouterOptions } from './interfaces';\n\n/**\n * Router Injector Options\n *\n */\nexport interface RouterInjectorOptions extends RouterOptions {\n\tkey?: RegistryLabel;\n}\n\n/**\n * Creates a router instance for a specific History manager (default is `HashHistory`) and registers\n * the route configuration.\n *\n * @param config The route config to register for the router\n * @param registry An optional registry that defaults to the global registry\n * @param options The router injector options\n */\nexport function registerRouterInjector(\n\tconfig: RouteConfig[],\n\tregistry: Registry,\n\toptions: RouterInjectorOptions = {}\n): Router {\n\tconst { key = 'router', ...routerOptions } = options;\n\n\tif (registry.hasInjector(key)) {\n\t\tthrow new Error('Router has already been defined');\n\t}\n\tconst router = new Router(config, routerOptions);\n\tregistry.defineInjector(key, (invalidator: () => void) => {\n\t\trouter.on('nav', () => invalidator());\n\t\treturn () => router;\n\t});\n\treturn router;\n}\n","import global from './global';\n`!has('es6-iterator')`;\nimport { isArrayLike, Iterable } from './iterator';\nimport has from '../core/has';\n`!has('es6-symbol')`;\nimport './Symbol';\n\nexport interface WeakMap<K extends object, V> {\n\t/**\n\t * Remove a `key` from the map\n\t *\n\t * @param key The key to remove\n\t * @return `true` if the value was removed, otherwise `false`\n\t */\n\tdelete(key: K): boolean;\n\n\t/**\n\t * Retrieve the value, based on the supplied `key`\n\t *\n\t * @param key The key to retrieve the `value` for\n\t * @return the `value` based on the `key` if found, otherwise `false`\n\t */\n\tget(key: K): V | undefined;\n\n\t/**\n\t * Determines if a `key` is present in the map\n\t *\n\t * @param key The `key` to check\n\t * @return `true` if the key is part of the map, otherwise `false`.\n\t */\n\thas(key: K): boolean;\n\n\t/**\n\t * Set a `value` for a particular `key`.\n\t *\n\t * @param key The `key` to set the `value` for\n\t * @param value The `value` to set\n\t * @return the instances\n\t */\n\tset(key: K, value: V): this;\n\n\treadonly [Symbol.toStringTag]: 'WeakMap';\n}\n\nexport interface WeakMapConstructor {\n\t/**\n\t * Create a new instance of a `WeakMap`\n\t *\n\t * @constructor\n\t */\n\tnew (): WeakMap<object, any>;\n\n\t/**\n\t * Create a new instance of a `WeakMap`\n\t *\n\t * @constructor\n\t *\n\t * @param iterable An iterable that contains yields up key/value pair entries\n\t */\n\tnew <K extends object, V>(iterable?: [K, V][]): WeakMap<K, V>;\n\n\t/**\n\t * Create a new instance of a `WeakMap`\n\t *\n\t * @constructor\n\t *\n\t * @param iterable An iterable that contains yields up key/value pair entries\n\t */\n\tnew <K extends object, V>(iterable: Iterable<[K, V]>): WeakMap<K, V>;\n\n\treadonly prototype: WeakMap<object, any>;\n}\n\nexport let WeakMap: WeakMapConstructor = global.WeakMap;\n\ninterface Entry<K, V> {\n\tkey: K;\n\tvalue: V;\n}\n\nif (!has('es6-weakmap')) {\n\tconst DELETED: any = {};\n\n\tconst getUID = function getUID(): number {\n\t\treturn Math.floor(Math.random() * 100000000);\n\t};\n\n\tconst generateName = (function() {\n\t\tlet startId = Math.floor(Date.now() % 100000000);\n\n\t\treturn function generateName(): string {\n\t\t\treturn '__wm' + getUID() + (startId++ + '__');\n\t\t};\n\t})();\n\n\tWeakMap = global.WeakMap = class WeakMap<K, V> {\n\t\tprivate readonly _name: string;\n\t\tprivate readonly _frozenEntries: Entry<K, V>[];\n\n\t\tconstructor(iterable?: ArrayLike<[K, V]> | Iterable<[K, V]>) {\n\t\t\tthis._name = generateName();\n\n\t\t\tthis._frozenEntries = [];\n\n\t\t\tif (iterable) {\n\t\t\t\tif (isArrayLike(iterable)) {\n\t\t\t\t\tfor (let i = 0; i < iterable.length; i++) {\n\t\t\t\t\t\tconst item = iterable[i];\n\t\t\t\t\t\tthis.set(item[0], item[1]);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tfor (const [key, value] of iterable) {\n\t\t\t\t\t\tthis.set(key, value);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tprivate _getFrozenEntryIndex(key: any): number {\n\t\t\tfor (let i = 0; i < this._frozenEntries.length; i++) {\n\t\t\t\tif (this._frozenEntries[i].key === key) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn -1;\n\t\t}\n\n\t\tdelete(key: any): boolean {\n\t\t\tif (key === undefined || key === null) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tconst entry: Entry<K, V> = key[this._name];\n\t\t\tif (entry && entry.key === key && entry.value !== DELETED) {\n\t\t\t\tentry.value = DELETED;\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tconst frozenIndex = this._getFrozenEntryIndex(key);\n\t\t\tif (frozenIndex >= 0) {\n\t\t\t\tthis._frozenEntries.splice(frozenIndex, 1);\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\n\t\tget(key: any): V | undefined {\n\t\t\tif (key === undefined || key === null) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\tconst entry: Entry<K, V> = key[this._name];\n\t\t\tif (entry && entry.key === key && entry.value !== DELETED) {\n\t\t\t\treturn entry.value;\n\t\t\t}\n\n\t\t\tconst frozenIndex = this._getFrozenEntryIndex(key);\n\t\t\tif (frozenIndex >= 0) {\n\t\t\t\treturn this._frozenEntries[frozenIndex].value;\n\t\t\t}\n\t\t}\n\n\t\thas(key: any): boolean {\n\t\t\tif (key === undefined || key === null) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tconst entry: Entry<K, V> = key[this._name];\n\t\t\tif (Boolean(entry && entry.key === key && entry.value !== DELETED)) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tconst frozenIndex = this._getFrozenEntryIndex(key);\n\t\t\tif (frozenIndex >= 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\n\t\tset(key: any, value?: any): this {\n\t\t\tif (!key || (typeof key !== 'object' && typeof key !== 'function')) {\n\t\t\t\tthrow new TypeError('Invalid value used as weak map key');\n\t\t\t}\n\t\t\tlet entry: Entry<K, V> = key[this._name];\n\t\t\tif (!entry || entry.key !== key) {\n\t\t\t\tentry = Object.create(null, {\n\t\t\t\t\tkey: { value: key }\n\t\t\t\t});\n\n\t\t\t\tif (Object.isFrozen(key)) {\n\t\t\t\t\tthis._frozenEntries.push(entry);\n\t\t\t\t} else {\n\t\t\t\t\tObject.defineProperty(key, this._name, {\n\t\t\t\t\t\tvalue: entry\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t\tentry.value = value;\n\t\t\treturn this;\n\t\t}\n\n\t\t[Symbol.toStringTag]: 'WeakMap' = 'WeakMap';\n\t};\n}\n\nexport default WeakMap;\n","import global from './global';\n`!has('es6-iterator')`;\nimport { isArrayLike, Iterable, IterableIterator, ShimIterator } from './iterator';\nimport has from '../core/has';\n`!has('es6-symbol')`;\nimport './Symbol';\n\nexport interface Set<T> {\n\t/**\n\t * Adds a `value` to the `Set`\n\t *\n\t * @param value The value to add to the set\n\t * @returns The instance of the `Set`\n\t */\n\tadd(value: T): this;\n\n\t/**\n\t * Removes all the values from the `Set`.\n\t */\n\tclear(): void;\n\n\t/**\n\t * Removes a `value` from the set\n\t *\n\t * @param value The value to be removed\n\t * @returns `true` if the value was removed\n\t */\n\tdelete(value: T): boolean;\n\n\t/**\n\t * Returns an iterator that yields each entry.\n\t *\n\t * @return An iterator for each key/value pair in the instance.\n\t */\n\tentries(): IterableIterator<[T, T]>;\n\n\t/**\n\t * Executes a given function for each set entry. The function\n\t * is invoked with three arguments: the element value, the\n\t * element key, and the associated `Set` instance.\n\t *\n\t * @param callbackfn The function to execute for each map entry,\n\t * @param thisArg The value to use for `this` for each execution of the calback\n\t */\n\tforEach(callbackfn: (value: T, value2: T, set: Set<T>) => void, thisArg?: any): void;\n\n\t/**\n\t * Identifies if a value is part of the set.\n\t *\n\t * @param value The value to check\n\t * @returns `true` if the value is part of the set otherwise `false`\n\t */\n\thas(value: T): boolean;\n\n\t/**\n\t * Despite its name, returns an iterable of the values in the set,\n\t */\n\tkeys(): IterableIterator<T>;\n\n\t/**\n\t * Returns the number of values in the `Set`.\n\t */\n\treadonly size: number;\n\n\t/**\n\t * Returns an iterable of values in the set.\n\t */\n\tvalues(): IterableIterator<T>;\n\n\t/** Iterates over values in the set. */\n\t[Symbol.iterator](): IterableIterator<T>;\n\n\treadonly [Symbol.toStringTag]: 'Set';\n}\n\nexport interface SetConstructor {\n\t/**\n\t * Creates a new Set\n\t *\n\t * @constructor\n\t */\n\tnew (): Set<any>;\n\n\t/**\n\t * Creates a new Set\n\t *\n\t * @constructor\n\t *\n\t * @param iterator The iterable structure to initialize the set with\n\t */\n\tnew <T>(iterator?: T[]): Set<T>;\n\n\t/**\n\t * Creates a new Set\n\t *\n\t * @constructor\n\t *\n\t * @param iterator The iterable structure to initialize the set with\n\t */\n\tnew <T>(iterator: Iterable<T>): Set<T>;\n\n\treadonly prototype: Set<any>;\n}\n\nexport let Set: SetConstructor = global.Set;\n\nif (!has('es6-set')) {\n\tSet = global.Set = class Set<T> {\n\t\tprivate readonly _setData: T[] = [];\n\n\t\tstatic [Symbol.species] = Set;\n\n\t\tconstructor(iterable?: ArrayLike<T> | Iterable<T>) {\n\t\t\tif (iterable) {\n\t\t\t\tif (isArrayLike(iterable)) {\n\t\t\t\t\tfor (let i = 0; i < iterable.length; i++) {\n\t\t\t\t\t\tthis.add(iterable[i]);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tfor (const value of iterable) {\n\t\t\t\t\t\tthis.add(value);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tadd(value: T): this {\n\t\t\tif (this.has(value)) {\n\t\t\t\treturn this;\n\t\t\t}\n\t\t\tthis._setData.push(value);\n\t\t\treturn this;\n\t\t}\n\n\t\tclear(): void {\n\t\t\tthis._setData.length = 0;\n\t\t}\n\n\t\tdelete(value: T): boolean {\n\t\t\tconst idx = this._setData.indexOf(value);\n\t\t\tif (idx === -1) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tthis._setData.splice(idx, 1);\n\t\t\treturn true;\n\t\t}\n\n\t\tentries(): IterableIterator<[T, T]> {\n\t\t\treturn new ShimIterator<[any, any]>(this._setData.map<[any, any]>((value) => [value, value]));\n\t\t}\n\n\t\tforEach(callbackfn: (value: T, index: T, set: Set<T>) => void, thisArg?: any): void {\n\t\t\tconst iterator = this.values();\n\t\t\tlet result = iterator.next();\n\t\t\twhile (!result.done) {\n\t\t\t\tcallbackfn.call(thisArg, result.value, result.value, this);\n\t\t\t\tresult = iterator.next();\n\t\t\t}\n\t\t}\n\n\t\thas(value: T): boolean {\n\t\t\treturn this._setData.indexOf(value) > -1;\n\t\t}\n\n\t\tkeys(): IterableIterator<T> {\n\t\t\treturn new ShimIterator(this._setData);\n\t\t}\n\n\t\tget size(): number {\n\t\t\treturn this._setData.length;\n\t\t}\n\n\t\tvalues(): IterableIterator<T> {\n\t\t\treturn new ShimIterator(this._setData);\n\t\t}\n\n\t\t[Symbol.iterator](): IterableIterator<T> {\n\t\t\treturn new ShimIterator(this._setData);\n\t\t}\n\n\t\t[Symbol.toStringTag]: 'Set' = 'Set';\n\t};\n}\n\nexport default Set;\n","/**\n * Helper function to generate a value property descriptor\n *\n * @param value        The value the property descriptor should be set to\n * @param enumerable   If the property should be enumberable, defaults to false\n * @param writable     If the property should be writable, defaults to true\n * @param configurable If the property should be configurable, defaults to true\n * @return             The property descriptor object\n */\nexport function getValueDescriptor<T>(\n\tvalue: T,\n\tenumerable: boolean = false,\n\twritable: boolean = true,\n\tconfigurable: boolean = true\n): TypedPropertyDescriptor<T> {\n\treturn {\n\t\tvalue: value,\n\t\tenumerable: enumerable,\n\t\twritable: writable,\n\t\tconfigurable: configurable\n\t};\n}\n\n/**\n * A helper function which wraps a function where the first argument becomes the scope\n * of the call\n *\n * @param nativeFunction The source function to be wrapped\n */\nexport function wrapNative<T, U, R>(nativeFunction: (arg1: U) => R): (target: T, arg1: U) => R;\nexport function wrapNative<T, U, V, R>(nativeFunction: (arg1: U, arg2: V) => R): (target: T, arg1: U, arg2: V) => R;\nexport function wrapNative<T, U, V, W, R>(\n\tnativeFunction: (arg1: U, arg2: V, arg3: W) => R\n): (target: T, arg1: U, arg2: V, arg3: W) => R;\nexport function wrapNative<T, U, V, W, X, R>(\n\tnativeFunction: (arg1: U, arg2: V, arg3: W) => R\n): (target: T, arg1: U, arg2: V, arg3: W) => R;\nexport function wrapNative<T, U, V, W, X, Y, R>(\n\tnativeFunction: (arg1: U, arg2: V, arg3: W, arg4: Y) => R\n): (target: T, arg1: U, arg2: V, arg3: W, arg4: Y) => R;\nexport function wrapNative(nativeFunction: (...args: any[]) => any): (target: any, ...args: any[]) => any {\n\treturn function(target: any, ...args: any[]): any {\n\t\treturn nativeFunction.apply(target, args);\n\t};\n}\n","`!has('es6-iterator')`;\nimport { isArrayLike, isIterable, Iterable } from './iterator';\nimport has from '../core/has';\nimport { wrapNative } from './support/util';\n\nexport interface MapCallback<T, U> {\n\t/**\n\t * A callback function when mapping\n\t *\n\t * @param element The element that is currently being mapped\n\t * @param index The current index of the element\n\t */\n\t(element: T, index: number): U;\n}\n\nexport interface FindCallback<T> {\n\t/**\n\t * A callback function when using find\n\t *\n\t * @param element The element that is currenty being analysed\n\t * @param index The current index of the element that is being analysed\n\t * @param array The source array\n\t */\n\t(element: T, index: number, array: ArrayLike<T>): boolean;\n}\n\n/* ES6 Array static methods */\n\nexport interface From {\n\t/**\n\t * The Array.from() method creates a new Array instance from an array-like or iterable object.\n\t *\n\t * @param source An array-like or iterable object to convert to an array\n\t * @param mapFunction A map function to call on each element in the array\n\t * @param thisArg The execution context for the map function\n\t * @return The new Array\n\t */\n\t<T, U>(source: ArrayLike<T> | Iterable<T>, mapFunction: MapCallback<T, U>, thisArg?: any): Array<U>;\n\n\t/**\n\t * The Array.from() method creates a new Array instance from an array-like or iterable object.\n\t *\n\t * @param source An array-like or iterable object to convert to an array\n\t * @return The new Array\n\t */\n\t<T>(source: ArrayLike<T> | Iterable<T>): Array<T>;\n}\n\nexport interface Flat {\n\t/**\n\t * Returns a new array with all sub-array elements concatenated into it recursively up to the\n\t * specified depth.\n\t *\n\t * @param depth The maximum recursion depth\n\t */\n\t<U>(\n\t\tarr:\n\t\t\t| ReadonlyArray<U[][][][]>\n\t\t\t| ReadonlyArray<ReadonlyArray<U[][][]>>\n\t\t\t| ReadonlyArray<ReadonlyArray<U[][]>[]>\n\t\t\t| ReadonlyArray<ReadonlyArray<U[]>[][]>\n\t\t\t| ReadonlyArray<ReadonlyArray<U>[][][]>\n\t\t\t| ReadonlyArray<ReadonlyArray<ReadonlyArray<U[][]>>>\n\t\t\t| ReadonlyArray<ReadonlyArray<ReadonlyArray<U>[][]>>\n\t\t\t| ReadonlyArray<ReadonlyArray<ReadonlyArray<U>>[][]>\n\t\t\t| ReadonlyArray<ReadonlyArray<ReadonlyArray<U>[]>[]>\n\t\t\t| ReadonlyArray<ReadonlyArray<ReadonlyArray<U[]>>[]>\n\t\t\t| ReadonlyArray<ReadonlyArray<ReadonlyArray<U[]>[]>>\n\t\t\t| ReadonlyArray<ReadonlyArray<ReadonlyArray<ReadonlyArray<U[]>>>>\n\t\t\t| ReadonlyArray<ReadonlyArray<ReadonlyArray<ReadonlyArray<U>[]>>>\n\t\t\t| ReadonlyArray<ReadonlyArray<ReadonlyArray<ReadonlyArray<U>>[]>>\n\t\t\t| ReadonlyArray<ReadonlyArray<ReadonlyArray<ReadonlyArray<U>>>[]>\n\t\t\t| ReadonlyArray<ReadonlyArray<ReadonlyArray<ReadonlyArray<ReadonlyArray<U>>>>>,\n\t\tdepth: 4\n\t): U[];\n\n\t/**\n\t * Returns a new array with all sub-array elements concatenated into it recursively up to the\n\t * specified depth.\n\t *\n\t * @param depth The maximum recursion depth\n\t */\n\t<U>(\n\t\tarr:\n\t\t\t| ReadonlyArray<U[][][]>\n\t\t\t| ReadonlyArray<ReadonlyArray<U>[][]>\n\t\t\t| ReadonlyArray<ReadonlyArray<U[]>[]>\n\t\t\t| ReadonlyArray<ReadonlyArray<U[][]>>\n\t\t\t| ReadonlyArray<ReadonlyArray<ReadonlyArray<U[]>>>\n\t\t\t| ReadonlyArray<ReadonlyArray<ReadonlyArray<U>[]>>\n\t\t\t| ReadonlyArray<ReadonlyArray<ReadonlyArray<U>>[]>\n\t\t\t| ReadonlyArray<ReadonlyArray<ReadonlyArray<ReadonlyArray<U>>>>,\n\t\tdepth: 3\n\t): U[];\n\n\t/**\n\t * Returns a new array with all sub-array elements concatenated into it recursively up to the\n\t * specified depth.\n\t *\n\t * @param depth The maximum recursion depth\n\t */\n\t<U>(\n\t\tarr:\n\t\t\t| ReadonlyArray<U[][]>\n\t\t\t| ReadonlyArray<ReadonlyArray<U[]>>\n\t\t\t| ReadonlyArray<ReadonlyArray<U>[]>\n\t\t\t| ReadonlyArray<ReadonlyArray<ReadonlyArray<U>>>,\n\t\tdepth: 2\n\t): U[];\n\n\t/**\n\t * Returns a new array with all sub-array elements concatenated into it recursively up to the\n\t * specified depth.\n\t *\n\t * @param depth The maximum recursion depth\n\t */\n\t<U>(arr: ReadonlyArray<U[]> | ReadonlyArray<ReadonlyArray<U>>, depth?: 1): U[];\n\n\t/**\n\t * Returns a new array with all sub-array elements concatenated into it recursively up to the\n\t * specified depth.\n\t *\n\t * @param depth The maximum recursion depth\n\t */\n\t<U>(arr: ReadonlyArray<U>, depth: 0): U[];\n\n\t/**\n\t * Returns a new array with all sub-array elements concatenated into it recursively up to the\n\t * specified depth. If no depth is provided, flat method defaults to the depth of 1.\n\t *\n\t * @param depth The maximum recursion depth\n\t */\n\t<U>(arr: any[], depth?: number): any[];\n}\n\nexport interface FlatMap {\n\t/**\n\t * Calls a defined callback function on each element of an array. Then, flattens the result into\n\t * a new array.\n\t * This is identical to a map followed by flat with depth 1.\n\t *\n\t * @param callback A function that accepts up to three arguments. The flatMap method calls the\n\t * callback function one time for each element in the array.\n\t * @param thisArg An object to which the this keyword can refer in the callback function. If\n\t * thisArg is omitted, undefined is used as the this value.\n\t */\n\t<U, T extends any, This = undefined>(\n\t\tarr: T[],\n\t\tcallback: (this: This, value: T, index: number, array: T[]) => U | ReadonlyArray<U>,\n\t\tthisArg?: This\n\t): U[];\n}\n\nexport let from: From;\n\n/**\n * Creates a new array from the function parameters.\n *\n * @param arguments Any number of arguments for the array\n * @return An array from the given arguments\n */\nexport let of: <T>(...items: T[]) => Array<T>;\n\n/* ES6 Array instance methods */\n\n/**\n * Copies data internally within an array or array-like object.\n *\n * @param target The target array-like object\n * @param offset The index to start copying values to; if negative, it counts backwards from length\n * @param start The first (inclusive) index to copy; if negative, it counts backwards from length\n * @param end The last (exclusive) index to copy; if negative, it counts backwards from length\n * @return The target\n */\nexport let copyWithin: <T>(target: ArrayLike<T>, offset: number, start: number, end?: number) => ArrayLike<T>;\n\n/**\n * Fills elements of an array-like object with the specified value.\n *\n * @param target The target to fill\n * @param value The value to fill each element of the target with\n * @param start The first index to fill\n * @param end The (exclusive) index at which to stop filling\n * @return The filled target\n */\nexport let fill: <T>(target: ArrayLike<T>, value: T, start?: number, end?: number) => ArrayLike<T>;\n\n/**\n * Finds and returns the first instance matching the callback or undefined if one is not found.\n *\n * @param target An array-like object\n * @param callback A function returning if the current value matches a criteria\n * @param thisArg The execution context for the find function\n * @return The first element matching the callback, or undefined if one does not exist\n */\nexport let find: <T>(target: ArrayLike<T>, callback: FindCallback<T>, thisArg?: {}) => T | undefined;\n\n/**\n * Performs a linear search and returns the first index whose value satisfies the passed callback,\n * or -1 if no values satisfy it.\n *\n * @param target An array-like object\n * @param callback A function returning true if the current value satisfies its criteria\n * @param thisArg The execution context for the find function\n * @return The first index whose value satisfies the passed callback, or -1 if no values satisfy it\n */\nexport let findIndex: <T>(target: ArrayLike<T>, callback: FindCallback<T>, thisArg?: {}) => number;\n\n/* ES7 Array instance methods */\n\n/**\n * Determines whether an array includes a given value\n *\n * @param target the target array-like object\n * @param searchElement the item to search for\n * @param fromIndex the starting index to search from\n * @return `true` if the array includes the element, otherwise `false`\n */\nexport let includes: <T>(target: ArrayLike<T>, searchElement: T, fromIndex?: number) => boolean;\n\n/**\n * Flattens arrays to the depth specified\n *\n * @param target An array-like object\n * @param depth The depth to flatten too, defaults to 1.\n */\nexport let flat: Flat;\n\nexport let flatMap: FlatMap;\n\n// Util functions for filled implementations\n\nlet toLength: any;\nlet toInteger: any;\nlet normalizeOffset: any;\n\nif (!has('es6-array') || !has('es6-array-fill') || !has('es7-array')) {\n\tconst MAX_SAFE_INTEGER = Math.pow(2, 53) - 1;\n\n\t/**\n\t * Ensures a non-negative, non-infinite, safe integer.\n\t *\n\t * @param length The number to validate\n\t * @return A proper length\n\t */\n\ttoLength = function toLength(length: number): number {\n\t\tif (isNaN(length)) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tlength = Number(length);\n\t\tif (isFinite(length)) {\n\t\t\tlength = Math.floor(length);\n\t\t}\n\t\t// Ensure a non-negative, real, safe integer\n\t\treturn Math.min(Math.max(length, 0), MAX_SAFE_INTEGER);\n\t};\n\n\t/**\n\t * From ES6 7.1.4 ToInteger()\n\t *\n\t * @param value A value to convert\n\t * @return An integer\n\t */\n\ttoInteger = function toInteger(value: any): number {\n\t\tvalue = Number(value);\n\t\tif (isNaN(value)) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (value === 0 || !isFinite(value)) {\n\t\t\treturn value;\n\t\t}\n\n\t\treturn (value > 0 ? 1 : -1) * Math.floor(Math.abs(value));\n\t};\n\n\t/**\n\t * Normalizes an offset against a given length, wrapping it if negative.\n\t *\n\t * @param value The original offset\n\t * @param length The total length to normalize against\n\t * @return If negative, provide a distance from the end (length); otherwise provide a distance from 0\n\t */\n\tnormalizeOffset = function normalizeOffset(value: number, length: number): number {\n\t\treturn value < 0 ? Math.max(length + value, 0) : Math.min(value, length);\n\t};\n}\n\nif (!has('es6-array')) {\n\tArray.from = function from(\n\t\tthis: ArrayConstructor,\n\t\tarrayLike: Iterable<any> | ArrayLike<any>,\n\t\tmapFunction?: MapCallback<any, any>,\n\t\tthisArg?: any\n\t): Array<any> {\n\t\tif (arrayLike == null) {\n\t\t\tthrow new TypeError('from: requires an array-like object');\n\t\t}\n\n\t\tif (mapFunction && thisArg) {\n\t\t\tmapFunction = mapFunction.bind(thisArg);\n\t\t}\n\n\t\t/* tslint:disable-next-line:variable-name */\n\t\tconst Constructor = this;\n\t\tconst length: number = toLength((arrayLike as any).length);\n\n\t\t// Support extension\n\t\tconst array: any[] =\n\t\t\ttypeof Constructor === 'function' ? <any[]>Object(new Constructor(length)) : new Array(length);\n\n\t\tif (!isArrayLike(arrayLike) && !isIterable(arrayLike)) {\n\t\t\treturn array;\n\t\t}\n\n\t\t// if this is an array and the normalized length is 0, just return an empty array. this prevents a problem\n\t\t// with the iteration on IE when using a NaN array length.\n\t\tif (isArrayLike(arrayLike)) {\n\t\t\tif (length === 0) {\n\t\t\t\treturn [];\n\t\t\t}\n\n\t\t\tfor (let i = 0; i < arrayLike.length; i++) {\n\t\t\t\tarray[i] = mapFunction ? mapFunction(arrayLike[i], i) : arrayLike[i];\n\t\t\t}\n\t\t} else {\n\t\t\tlet i = 0;\n\t\t\tfor (const value of arrayLike) {\n\t\t\t\tarray[i] = mapFunction ? mapFunction(value, i) : value;\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\n\t\tif ((arrayLike as any).length !== undefined) {\n\t\t\tarray.length = length;\n\t\t}\n\n\t\treturn array;\n\t};\n\n\tArray.of = function of<T>(...items: T[]): Array<T> {\n\t\treturn Array.prototype.slice.call(items);\n\t};\n\n\tArray.prototype.copyWithin = function copyWithin(offset: number, start: number, end?: number) {\n\t\tif (this == null) {\n\t\t\tthrow new TypeError('copyWithin: target must be an array-like object');\n\t\t}\n\n\t\tconst length = toLength(this.length);\n\t\toffset = normalizeOffset(toInteger(offset), length);\n\t\tstart = normalizeOffset(toInteger(start), length);\n\t\tend = normalizeOffset(end === undefined ? length : toInteger(end), length);\n\t\tlet count = Math.min(end! - start, length - offset);\n\n\t\tlet direction = 1;\n\t\tif (offset > start && offset < start + count) {\n\t\t\tdirection = -1;\n\t\t\tstart += count - 1;\n\t\t\toffset += count - 1;\n\t\t}\n\n\t\twhile (count > 0) {\n\t\t\tif (start in this) {\n\t\t\t\tthis[offset] = this[start];\n\t\t\t} else {\n\t\t\t\tdelete this[offset];\n\t\t\t}\n\n\t\t\toffset += direction;\n\t\t\tstart += direction;\n\t\t\tcount--;\n\t\t}\n\n\t\treturn this;\n\t};\n\n\ttype Predicate = (this: {} | void, value: any, index: number, obj: any[]) => boolean;\n\n\tArray.prototype.find = function find(callback: Predicate, thisArg?: {}) {\n\t\tconst index = this.findIndex(callback, thisArg);\n\t\treturn index !== -1 ? this[index] : undefined;\n\t};\n\n\tArray.prototype.findIndex = function findIndex(callback: Predicate, thisArg?: {}): number {\n\t\tconst length = toLength(this.length);\n\n\t\tif (!callback) {\n\t\t\tthrow new TypeError('find: second argument must be a function');\n\t\t}\n\n\t\tif (thisArg) {\n\t\t\tcallback = callback.bind(thisArg);\n\t\t}\n\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tif (callback(this[i], i, this)) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\n\t\treturn -1;\n\t};\n}\n\nif (!has('es6-array-fill')) {\n\tArray.prototype.fill = function fill(value: any, start?: number, end?: number) {\n\t\tconst length = toLength(this.length);\n\t\tlet i = normalizeOffset(toInteger(start), length);\n\t\tend = normalizeOffset(end === undefined ? length : toInteger(end), length);\n\n\t\twhile (i < (end || 0)) {\n\t\t\tthis[i++] = value;\n\t\t}\n\n\t\treturn this;\n\t};\n}\n\nif (!has('es7-array')) {\n\tArray.prototype.includes = function includes(searchElement, fromIndex = 0) {\n\t\tlet len = toLength(this.length);\n\n\t\tfor (let i = fromIndex; i < len; ++i) {\n\t\t\tconst currentElement = this[i];\n\t\t\tif (\n\t\t\t\tsearchElement === currentElement ||\n\t\t\t\t(searchElement !== searchElement && currentElement !== currentElement)\n\t\t\t) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t};\n}\n\nif (!has('es2019-array')) {\n\tArray.prototype.flat = function flat(depth: number = 1) {\n\t\treturn depth > 0\n\t\t\t? this.reduce((acc, val) => acc.concat(Array.isArray(val) ? val.flat(depth - 1) : val), [])\n\t\t\t: this.slice();\n\t};\n\n\tArray.prototype.flatMap = function flatMap(callback: any) {\n\t\treturn this.map(callback).flat();\n\t};\n}\n\nfrom = Array.from;\nof = Array.of;\ncopyWithin = wrapNative(Array.prototype.copyWithin);\nfill = wrapNative(Array.prototype.fill);\nfind = wrapNative(Array.prototype.find);\nflat = wrapNative(Array.prototype.flat) as any;\nflatMap = wrapNative(Array.prototype.flatMap) as any;\nfindIndex = wrapNative(Array.prototype.findIndex);\nincludes = wrapNative(Array.prototype.includes);\n\nexport default Array;\n","import { PropertyChangeRecord } from './interfaces';\nimport { WIDGET_BASE_TYPE } from './Registry';\n\nfunction isObjectOrArray(value: any): boolean {\n\treturn Object.prototype.toString.call(value) === '[object Object]' || Array.isArray(value);\n}\n\nexport function always(previousProperty: any, newProperty: any): PropertyChangeRecord {\n\treturn {\n\t\tchanged: true,\n\t\tvalue: newProperty\n\t};\n}\n\nexport function ignore(previousProperty: any, newProperty: any): PropertyChangeRecord {\n\treturn {\n\t\tchanged: false,\n\t\tvalue: newProperty\n\t};\n}\n\nexport function reference(previousProperty: any, newProperty: any): PropertyChangeRecord {\n\treturn {\n\t\tchanged: previousProperty !== newProperty,\n\t\tvalue: newProperty\n\t};\n}\n\nexport function shallow(previousProperty: any, newProperty: any, depth = 0): PropertyChangeRecord {\n\tlet changed = false;\n\n\tconst validOldProperty = previousProperty && isObjectOrArray(previousProperty);\n\tconst validNewProperty = newProperty && isObjectOrArray(newProperty);\n\n\tif (!validOldProperty || !validNewProperty) {\n\t\treturn {\n\t\t\tchanged: true,\n\t\t\tvalue: newProperty\n\t\t};\n\t}\n\n\tconst previousKeys = Object.keys(previousProperty);\n\tconst newKeys = Object.keys(newProperty);\n\n\tif (previousKeys.length !== newKeys.length) {\n\t\tchanged = true;\n\t} else {\n\t\tchanged = newKeys.some((key) => {\n\t\t\tif (depth > 0) {\n\t\t\t\treturn auto(newProperty[key], previousProperty[key], depth - 1).changed;\n\t\t\t}\n\t\t\treturn newProperty[key] !== previousProperty[key];\n\t\t});\n\t}\n\treturn {\n\t\tchanged,\n\t\tvalue: newProperty\n\t};\n}\n\nexport function auto(previousProperty: any, newProperty: any, depth = 0): PropertyChangeRecord {\n\tlet result;\n\tif (typeof newProperty === 'function') {\n\t\tif (newProperty._type === WIDGET_BASE_TYPE) {\n\t\t\tresult = reference(previousProperty, newProperty);\n\t\t} else {\n\t\t\tresult = ignore(previousProperty, newProperty);\n\t\t}\n\t} else if (isObjectOrArray(newProperty)) {\n\t\tresult = shallow(previousProperty, newProperty, depth);\n\t} else {\n\t\tresult = reference(previousProperty, newProperty);\n\t}\n\treturn result;\n}\n","import { Map } from '../shim/Map';\nimport { Evented, EventObject } from '../core/Evented';\nimport { Constructor, InjectorFactory, InjectorItem, RegistryLabel, WidgetBaseInterface } from './interfaces';\nimport { Registry, RegistryEventObject, RegistryItem } from './Registry';\n\nexport type RegistryHandlerEventMap = {\n\tinvalidate: EventObject<'invalidate'>;\n};\n\nexport class RegistryHandler extends Evented<RegistryHandlerEventMap> {\n\tprivate _registry = new Registry();\n\tprivate _registryWidgetLabelMap: Map<Registry, RegistryLabel[]> = new Map();\n\tprivate _registryInjectorLabelMap: Map<Registry, RegistryLabel[]> = new Map();\n\tprotected baseRegistry!: Registry;\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.own(this._registry);\n\t\tconst destroy = () => {\n\t\t\tif (this.baseRegistry) {\n\t\t\t\tthis._registryWidgetLabelMap.delete(this.baseRegistry);\n\t\t\t\tthis._registryInjectorLabelMap.delete(this.baseRegistry);\n\t\t\t\tthis.baseRegistry = undefined as any;\n\t\t\t}\n\t\t};\n\t\tthis.own({ destroy });\n\t}\n\n\tpublic set base(baseRegistry: Registry) {\n\t\tif (this.baseRegistry) {\n\t\t\tthis._registryWidgetLabelMap.delete(this.baseRegistry);\n\t\t\tthis._registryInjectorLabelMap.delete(this.baseRegistry);\n\t\t}\n\t\tthis.baseRegistry = baseRegistry;\n\t}\n\n\tpublic get base(): Registry {\n\t\treturn this.baseRegistry;\n\t}\n\n\tpublic define(label: RegistryLabel, widget: RegistryItem): void {\n\t\tthis._registry.define(label, widget);\n\t}\n\n\tpublic defineInjector(label: RegistryLabel, injector: InjectorFactory): void {\n\t\tthis._registry.defineInjector(label, injector);\n\t}\n\n\tpublic has(label: RegistryLabel): boolean {\n\t\treturn this._registry.has(label) || Boolean(this.baseRegistry && this.baseRegistry.has(label));\n\t}\n\n\tpublic hasInjector(label: RegistryLabel): boolean {\n\t\treturn this._registry.hasInjector(label) || Boolean(this.baseRegistry && this.baseRegistry.hasInjector(label));\n\t}\n\n\tpublic get<T extends WidgetBaseInterface = WidgetBaseInterface>(\n\t\tlabel: RegistryLabel,\n\t\tglobalPrecedence: boolean = false\n\t): Constructor<T> | null {\n\t\treturn this._get(label, globalPrecedence, 'get', this._registryWidgetLabelMap);\n\t}\n\n\tpublic getInjector<T>(label: RegistryLabel, globalPrecedence: boolean = false): InjectorItem<T> | null {\n\t\treturn this._get(label, globalPrecedence, 'getInjector', this._registryInjectorLabelMap);\n\t}\n\n\tprivate _get(\n\t\tlabel: RegistryLabel,\n\t\tglobalPrecedence: boolean,\n\t\tgetFunctionName: 'getInjector' | 'get',\n\t\tlabelMap: Map<Registry, RegistryLabel[]>\n\t): any {\n\t\tconst registries = globalPrecedence ? [this.baseRegistry, this._registry] : [this._registry, this.baseRegistry];\n\t\tfor (let i = 0; i < registries.length; i++) {\n\t\t\tconst registry: any = registries[i];\n\t\t\tif (!registry) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst item = registry[getFunctionName](label);\n\t\t\tconst registeredLabels = labelMap.get(registry) || [];\n\t\t\tif (item) {\n\t\t\t\treturn item;\n\t\t\t} else if (registeredLabels.indexOf(label) === -1) {\n\t\t\t\tconst handle = registry.on(label, (event: RegistryEventObject) => {\n\t\t\t\t\tif (\n\t\t\t\t\t\tevent.action === 'loaded' &&\n\t\t\t\t\t\t(this as any)[getFunctionName](label, globalPrecedence) === event.item\n\t\t\t\t\t) {\n\t\t\t\t\t\tthis.emit({ type: 'invalidate' });\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tthis.own(handle);\n\t\t\t\tlabelMap.set(registry, [...registeredLabels, label]);\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n}\n\nexport default RegistryHandler;\n","import global from '../shim/global';\nimport has from '../core/has';\nimport WeakMap from '../shim/WeakMap';\nimport Set from '../shim/Set';\nimport Map from '../shim/Map';\nimport { flat } from '../shim/array';\nimport {\n\tWNode,\n\tVNode,\n\tDNode,\n\tVNodeProperties,\n\tTransitionStrategy,\n\tSupportedClassName,\n\tDomVNode,\n\tLazyDefine,\n\tConstructor,\n\tRenderResult,\n\tWidgetBaseInterface,\n\tCallback,\n\tMiddlewareMap,\n\tWNodeFactory,\n\tOptionalWNodeFactory,\n\tUnionToIntersection,\n\tWidgetProperties,\n\tMiddlewareResultFactory,\n\tWidgetBaseTypes,\n\tRegistryLabel,\n\tDeferredVirtualProperties,\n\tDomOptions,\n\tDefaultChildrenWNodeFactory\n} from './interfaces';\nimport { Registry, isWidget, isWidgetBaseConstructor, isWidgetFunction, isWNodeFactory } from './Registry';\nimport { auto } from './diff';\nimport RegistryHandler from './RegistryHandler';\nimport { NodeHandler } from './NodeHandler';\n\ndeclare global {\n\tnamespace JSX {\n\t\ttype Element = WNode;\n\t\tinterface ElementAttributesProperty {\n\t\t\t__properties__: {};\n\t\t}\n\t\tinterface IntrinsicElements {\n\t\t\t[key: string]: VNodeProperties;\n\t\t}\n\t\tinterface ElementChildrenAttribute {\n\t\t\t__children__: {};\n\t\t}\n\t}\n}\n\nexport interface BaseNodeWrapper {\n\tid: string;\n\towningId: string;\n\tnode: WNode<any> | VNode;\n\tdomNode?: Node;\n\tdepth: number;\n\torder: number;\n\trequiresInsertBefore?: boolean;\n\thasPreviousSiblings?: boolean;\n\thasParentWNode?: boolean;\n\tnamespace?: string;\n\thasAnimations?: boolean;\n\tparentId: string;\n\tchildDomWrapperId?: string;\n}\n\nexport interface WNodeWrapper extends BaseNodeWrapper {\n\tnode: WNode<any>;\n\tkeys?: string[];\n\tinstance?: any;\n\tmergeNodes?: Node[];\n\tnodeHandlerCalled?: boolean;\n\tregistryItem?: Callback<any, any, any, RenderResult> | Constructor<any> | null;\n\tproperties: any;\n}\n\nexport interface WidgetMeta {\n\twidgetName: string;\n\tmountNode: HTMLElement;\n\tdirty: boolean;\n\tinvalidator: () => void;\n\tmiddleware?: any;\n\tmiddlewareIds: string[];\n\tregistryHandler?: RegistryHandler;\n\tregistry: Registry;\n\tproperties: any;\n\toriginalProperties: any;\n\tchildren?: DNode[];\n\trendering: boolean;\n\tnodeMap?: Map<string | number, HTMLElement>;\n\tdestroyMap?: Map<string, () => void>;\n\tdeferRefs: number;\n\tcustomDiffProperties?: Set<string>;\n\tcustomDiffMap?: Map<string, Map<string, (current: any, next: any) => any>>;\n\tpropertiesCalled: boolean;\n}\n\nexport interface WidgetData {\n\tonDetach: () => void;\n\tonAttach: () => void;\n\tdirty: boolean;\n\tnodeHandler: NodeHandler;\n\tinvalidate?: Function;\n\trendering: boolean;\n\tinputProperties: any;\n\tregistry: RegistryHandler;\n}\n\nexport interface VNodeWrapper extends BaseNodeWrapper {\n\tnode: VNode | DomVNode;\n\tmerged?: boolean;\n\tinserted?: boolean;\n\tdeferredProperties?: VNodeProperties;\n}\n\nexport type DNodeWrapper = VNodeWrapper | WNodeWrapper;\n\nexport interface MountOptions {\n\tsync: boolean;\n\tmerge: boolean;\n\ttransition?: TransitionStrategy;\n\tdomNode: HTMLElement | null;\n\tregistry: Registry;\n}\n\nexport interface Renderer {\n\tinvalidate(): void;\n\tmount(mountOptions?: Partial<MountOptions>): void;\n\tunmount(): void;\n}\n\ninterface ProcessItem {\n\tcurrent?: (WNodeWrapper | VNodeWrapper)[];\n\tnext?: (WNodeWrapper | VNodeWrapper)[];\n\tmeta: ProcessMeta;\n}\n\ninterface ProcessResult {\n\titem?: ProcessItem;\n\twidget?: AttachApplication | DetachApplication;\n\tdom?: ApplicationInstruction;\n}\n\ninterface ProcessMeta {\n\tmergeNodes?: Node[];\n\toldIndex?: number;\n\tnewIndex?: number;\n}\n\ninterface InvalidationQueueItem {\n\tid: string;\n\tdepth: number;\n\torder: number;\n}\n\ninterface Instruction {\n\tcurrent: undefined | DNodeWrapper;\n\tnext: undefined | DNodeWrapper;\n}\n\ninterface CreateWidgetInstruction {\n\tnext: WNodeWrapper;\n}\n\ninterface UpdateWidgetInstruction {\n\tcurrent: WNodeWrapper;\n\tnext: WNodeWrapper;\n}\n\ninterface RemoveWidgetInstruction {\n\tcurrent: WNodeWrapper;\n}\n\ninterface CreateDomInstruction {\n\tnext: VNodeWrapper;\n}\n\ninterface UpdateDomInstruction {\n\tcurrent: VNodeWrapper;\n\tnext: VNodeWrapper;\n}\n\ninterface RemoveDomInstruction {\n\tcurrent: VNodeWrapper;\n}\n\ninterface AttachApplication {\n\ttype: 'attach';\n\tid: string;\n\tinstance?: WidgetBaseInterface;\n\tattached?: boolean;\n}\n\ninterface DetachApplication {\n\ttype: 'detach';\n\tcurrent: WNodeWrapper;\n\tinstance?: WidgetBaseInterface;\n}\n\ninterface CreateDomApplication {\n\ttype: 'create';\n\tcurrent?: VNodeWrapper;\n\tnext: VNodeWrapper;\n\tparentDomNode: Node;\n}\n\ninterface DeleteDomApplication {\n\ttype: 'delete';\n\tcurrent: VNodeWrapper;\n}\n\ninterface UpdateDomApplication {\n\ttype: 'update';\n\tcurrent: VNodeWrapper;\n\tnext: VNodeWrapper;\n}\n\ninterface PreviousProperties {\n\tproperties: any;\n\tattributes?: any;\n\tevents?: any;\n}\n\ntype ApplicationInstruction =\n\t| CreateDomApplication\n\t| UpdateDomApplication\n\t| DeleteDomApplication\n\t| Required<AttachApplication>\n\t| DetachApplication;\n\nconst EMPTY_ARRAY: DNodeWrapper[] = [];\nconst nodeOperations = ['focus', 'blur', 'scrollIntoView', 'click'];\nconst NAMESPACE_W3 = 'http://www.w3.org/';\nconst NAMESPACE_SVG = NAMESPACE_W3 + '2000/svg';\nconst NAMESPACE_XLINK = NAMESPACE_W3 + '1999/xlink';\nconst WNODE = '__WNODE_TYPE';\nconst VNODE = '__VNODE_TYPE';\nconst DOMVNODE = '__DOMVNODE_TYPE';\n\n// @ts-ignore\nconst scope = typeof __DOJO_SCOPE === 'string' ? __DOJO_SCOPE : 'dojo_scope';\n\nif (!global[scope]) {\n\tglobal[scope] = {};\n}\n\nexport function setRendering(value: boolean) {\n\tglobal[scope].rendering = value;\n}\n\nexport function incrementBlockCount() {\n\tconst blocksPending = global[scope].blocksPending || 0;\n\tglobal[scope].blocksPending = blocksPending + 1;\n}\n\nexport function decrementBlockCount() {\n\tconst blocksPending = global[scope].blocksPending || 0;\n\tglobal[scope].blocksPending = blocksPending - 1;\n}\n\nexport function isTextNode(item: any): item is Text {\n\treturn item && item.nodeType === 3;\n}\n\nfunction isLazyDefine(item: any): item is LazyDefine<any> {\n\treturn Boolean(item && item.label);\n}\n\nfunction isWNodeWrapper(child: DNodeWrapper): child is WNodeWrapper {\n\treturn child && isWNode(child.node);\n}\n\nfunction isVNodeWrapper(child?: DNodeWrapper | null): child is VNodeWrapper {\n\treturn !!child && isVNode(child.node);\n}\n\nfunction isVirtualWrapper(child?: DNodeWrapper | null): boolean {\n\treturn isVNodeWrapper(child) && child.node.tag === 'virtual';\n}\n\nfunction isBodyWrapper(wrapper?: DNodeWrapper): boolean {\n\treturn isVNodeWrapper(wrapper) && wrapper.node.tag === 'body';\n}\n\nfunction isHeadWrapper(wrapper?: DNodeWrapper): boolean {\n\treturn isVNodeWrapper(wrapper) && wrapper.node.tag === 'head';\n}\n\nfunction isSpecialWrapper(wrapper?: DNodeWrapper): boolean {\n\treturn isHeadWrapper(wrapper) || isBodyWrapper(wrapper) || isVirtualWrapper(wrapper);\n}\n\nfunction isAttachApplication(value: any): value is AttachApplication | DetachApplication {\n\treturn !!value.type;\n}\n\nexport function isWNode<W extends WidgetBaseTypes = any>(child: any): child is WNode<W> {\n\treturn Boolean(child && child !== true && typeof child !== 'string' && child.type === WNODE);\n}\n\nexport function isVNode(child: DNode): child is VNode {\n\treturn Boolean(\n\t\tchild && child !== true && typeof child !== 'string' && (child.type === VNODE || child.type === DOMVNODE)\n\t);\n}\n\nexport function isDomVNode(child: DNode): child is DomVNode {\n\treturn Boolean(child && child !== true && typeof child !== 'string' && child.type === DOMVNODE);\n}\n\nexport function isElementNode(value: any): value is Element {\n\treturn !!value.tagName;\n}\n\nfunction toTextVNode(data: any): VNode {\n\treturn {\n\t\ttag: '',\n\t\tproperties: {},\n\t\tchildren: undefined,\n\t\ttext: `${data}`,\n\t\ttype: VNODE\n\t};\n}\n\nfunction updateAttributes(\n\tdomNode: Element,\n\tpreviousAttributes: { [index: string]: string | undefined },\n\tattributes: { [index: string]: string | undefined },\n\tnamespace?: string\n) {\n\tconst attrNames = Object.keys(attributes);\n\tconst attrCount = attrNames.length;\n\tfor (let i = 0; i < attrCount; i++) {\n\t\tconst attrName = attrNames[i];\n\t\tconst attrValue = attributes[attrName];\n\t\tconst previousAttrValue = previousAttributes[attrName];\n\t\tif (attrValue !== previousAttrValue) {\n\t\t\tupdateAttribute(domNode, attrName, attrValue, namespace);\n\t\t}\n\t}\n}\n\n/**\n * Wrapper function for calls to create a widget.\n */\nexport function w<W extends WidgetBaseTypes>(\n\tnode: WNode<W>,\n\tproperties: Partial<W['properties']>,\n\tchildren?: W['properties'] extends { __children__: any } ? W['properties']['__children__'] : W['children']\n): WNode<W>;\nexport function w<W extends WidgetBaseTypes>(\n\twidgetConstructor: Constructor<W> | RegistryLabel | LazyDefine<W>,\n\tproperties: W['properties'],\n\tchildren?: W['children']\n): WNode<W>;\nexport function w<W extends WNodeFactory<any>>(\n\twidgetConstructor: W,\n\tproperties: W['properties'],\n\tchildren: W['children'] extends any[] ? W['children'] : [W['children']]\n): WNode<W>;\nexport function w<W extends DefaultChildrenWNodeFactory<any>>(\n\twidgetConstructor: W,\n\tproperties: W['properties'],\n\tchildren?: W['children']\n): WNode<W>;\nexport function w<W extends OptionalWNodeFactory<any>>(\n\twidgetConstructor: W,\n\tproperties: W['properties'],\n\tchildren?: W['children'] extends any[] ? W['children'] : [W['children']]\n): WNode<W>;\nexport function w<W extends WidgetBaseTypes>(\n\twidgetConstructorOrNode:\n\t\t| Constructor<W>\n\t\t| RegistryLabel\n\t\t| WNodeFactory<W>\n\t\t| WNode<W>\n\t\t| LazyDefine<W>\n\t\t| Callback<any, any, any, RenderResult>,\n\tproperties: W['properties'],\n\tchildren?: any\n): WNode<W> {\n\tif ((properties as any).__children__) {\n\t\tdelete (properties as any).__children__;\n\t}\n\n\tif (isWNodeFactory<W>(widgetConstructorOrNode)) {\n\t\treturn widgetConstructorOrNode(properties, children);\n\t}\n\n\tif (isWNode<W>(widgetConstructorOrNode)) {\n\t\tproperties = { ...(widgetConstructorOrNode.properties as any), ...(properties as any) };\n\t\tchildren = children ? children : widgetConstructorOrNode.children;\n\t\twidgetConstructorOrNode = widgetConstructorOrNode.widgetConstructor;\n\t}\n\n\treturn {\n\t\tchildren: children || [],\n\t\twidgetConstructor: widgetConstructorOrNode,\n\t\tproperties,\n\t\ttype: WNODE\n\t};\n}\n\n/**\n * Wrapper function for calls to create VNodes.\n */\nexport function v(node: VNode, properties: VNodeProperties, children: undefined | DNode[]): VNode;\nexport function v(node: VNode, properties: VNodeProperties): VNode;\nexport function v(tag: string, children: undefined | DNode[]): VNode;\nexport function v<K extends keyof HTMLElementTagNameMap>(\n\ttag: K,\n\tproperties: DeferredVirtualProperties | VNodeProperties<HTMLElementTagNameMap[K]>,\n\tchildren?: DNode[]\n): VNode;\nexport function v(tag: string, properties: DeferredVirtualProperties | VNodeProperties, children?: DNode[]): VNode;\nexport function v(tag: string): VNode;\nexport function v(\n\ttag: string | VNode,\n\tpropertiesOrChildren: VNodeProperties | DeferredVirtualProperties | DNode[] = {},\n\tchildren: undefined | DNode[] = undefined\n): VNode {\n\tlet properties: VNodeProperties | DeferredVirtualProperties = propertiesOrChildren;\n\tlet deferredPropertiesCallback;\n\n\tif (typeof (tag as any).tag === 'function') {\n\t\treturn (tag as any).tag(properties, children);\n\t}\n\n\tif (Array.isArray(propertiesOrChildren)) {\n\t\tchildren = propertiesOrChildren;\n\t\tproperties = {};\n\t}\n\n\tif (typeof properties === 'function') {\n\t\tdeferredPropertiesCallback = properties;\n\t\tproperties = {};\n\t}\n\n\tif (isVNode(tag)) {\n\t\tlet { classes = [], styles = {}, ...newProperties } = properties;\n\t\tlet { classes: nodeClasses = [], styles: nodeStyles = {}, ...nodeProperties } = tag.properties;\n\t\tnodeClasses = Array.isArray(nodeClasses) ? nodeClasses : [nodeClasses];\n\t\tclasses = Array.isArray(classes) ? classes : [classes];\n\t\tstyles = { ...nodeStyles, ...styles };\n\t\tproperties = { ...nodeProperties, ...newProperties, classes: [...nodeClasses, ...classes], styles };\n\t\tchildren = children ? children : tag.children;\n\t\ttag = tag.tag;\n\t}\n\n\treturn {\n\t\ttag,\n\t\tdeferredPropertiesCallback,\n\t\tchildren,\n\t\tproperties,\n\t\ttype: VNODE\n\t};\n}\n\n/**\n * Create a VNode for an existing DOM Node.\n */\nexport function dom(\n\t{ node, attrs = {}, props = {}, on = {}, diffType = 'none', onAttach }: DomOptions,\n\tchildren?: DNode[]\n): DomVNode {\n\treturn {\n\t\ttag: isElementNode(node) ? node.tagName.toLowerCase() : '',\n\t\tproperties: props,\n\t\tattributes: attrs,\n\t\tevents: on,\n\t\tchildren,\n\t\ttype: DOMVNODE,\n\t\tdomNode: node,\n\t\ttext: isElementNode(node) ? undefined : node.data,\n\t\tdiffType,\n\t\tonAttach\n\t};\n}\n\nexport const REGISTRY_ITEM = '__registry_item';\n\nexport class FromRegistry<P> {\n\tstatic type = REGISTRY_ITEM;\n\t/* tslint:disable-next-line:variable-name */\n\t__properties__: P = {} as P;\n\tname: string | undefined;\n}\n\nexport function fromRegistry<P>(tag: string): Constructor<FromRegistry<P>> {\n\treturn class extends FromRegistry<P> {\n\t\tproperties: P = {} as P;\n\t\tstatic type = REGISTRY_ITEM;\n\t\tname = tag;\n\t};\n}\n\nexport function tsx(tag: any, properties = {}, ...children: any[]): DNode {\n\tchildren = flat(children, Infinity);\n\tproperties = properties === null ? {} : properties;\n\tif (typeof tag === 'string') {\n\t\treturn v(tag, properties, children);\n\t} else if (tag.type === 'registry' && (properties as any).__autoRegistryItem) {\n\t\tconst name = (properties as any).__autoRegistryItem;\n\t\tdelete (properties as any).__autoRegistryItem;\n\t\treturn w(name, properties, children);\n\t} else if (tag.type === REGISTRY_ITEM) {\n\t\tconst registryItem = new tag();\n\t\treturn w(registryItem.name, properties, children);\n\t} else {\n\t\treturn w(tag, properties, children);\n\t}\n}\n\nexport function propertiesDiff(current: any, next: any, invalidator: () => void, ignoreProperties: string[]) {\n\tconst propertyNames = [...Object.keys(current), ...Object.keys(next)];\n\tfor (let i = 0; i < propertyNames.length; i++) {\n\t\tif (ignoreProperties.indexOf(propertyNames[i]) > -1) {\n\t\t\tcontinue;\n\t\t}\n\t\tconst result = auto(current[propertyNames[i]], next[propertyNames[i]]);\n\t\tif (result.changed) {\n\t\t\tinvalidator();\n\t\t\tbreak;\n\t\t}\n\t\tignoreProperties.push(propertyNames[i]);\n\t}\n}\n\nfunction buildPreviousProperties(domNode: any, current: VNodeWrapper) {\n\tconst {\n\t\tnode: { diffType, properties, attributes }\n\t} = current;\n\tif (!diffType || diffType === 'vdom') {\n\t\treturn {\n\t\t\tproperties: current.deferredProperties\n\t\t\t\t? { ...current.deferredProperties, ...current.node.properties }\n\t\t\t\t: current.node.properties,\n\t\t\tattributes: current.node.attributes,\n\t\t\tevents: current.node.events\n\t\t};\n\t} else if (diffType === 'none') {\n\t\treturn {\n\t\t\tproperties: {},\n\t\t\tattributes: current.node.attributes ? {} : undefined,\n\t\t\tevents: current.node.events\n\t\t};\n\t}\n\tlet newProperties: any = {\n\t\tproperties: {}\n\t};\n\tif (attributes) {\n\t\tnewProperties.attributes = {};\n\t\tnewProperties.events = current.node.events;\n\t\tObject.keys(properties).forEach((propName) => {\n\t\t\tnewProperties.properties[propName] = domNode[propName];\n\t\t});\n\t\tObject.keys(attributes).forEach((attrName) => {\n\t\t\tnewProperties.attributes[attrName] = domNode.getAttribute(attrName);\n\t\t});\n\t\treturn newProperties;\n\t}\n\tnewProperties.properties = Object.keys(properties).reduce(\n\t\t(props, property) => {\n\t\t\tprops[property] = domNode.getAttribute(property) || domNode[property];\n\t\t\treturn props;\n\t\t},\n\t\t{} as any\n\t);\n\treturn newProperties;\n}\n\nfunction checkDistinguishable(wrappers: DNodeWrapper[], index: number, parentWNodeWrapper?: WNodeWrapper) {\n\tconst wrapperToCheck = wrappers[index];\n\tif (isVNodeWrapper(wrapperToCheck) && !wrapperToCheck.node.tag) {\n\t\treturn;\n\t}\n\tconst { key } = wrapperToCheck.node.properties;\n\tlet parentName = 'unknown';\n\tif (parentWNodeWrapper) {\n\t\tconst {\n\t\t\tnode: { widgetConstructor }\n\t\t} = parentWNodeWrapper;\n\t\tparentName = (widgetConstructor as any).name || 'unknown';\n\t}\n\n\tif (key === undefined || key === null) {\n\t\tfor (let i = 0; i < wrappers.length; i++) {\n\t\t\tif (i !== index) {\n\t\t\t\tconst wrapper = wrappers[i];\n\t\t\t\tif (same(wrapper, wrapperToCheck)) {\n\t\t\t\t\tlet nodeIdentifier: string;\n\t\t\t\t\tif (isWNodeWrapper(wrapper)) {\n\t\t\t\t\t\tnodeIdentifier = (wrapper.node.widgetConstructor as any).name || 'unknown';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnodeIdentifier = wrapper.node.tag;\n\t\t\t\t\t}\n\n\t\t\t\t\tconsole.warn(\n\t\t\t\t\t\t`A widget (${parentName}) has had a child added or removed, but they were not able to uniquely identified. It is recommended to provide a unique 'key' property when using the same widget or element (${nodeIdentifier}) multiple times as siblings`\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction same(dnode1: DNodeWrapper, dnode2: DNodeWrapper): boolean {\n\tif (isVNodeWrapper(dnode1) && isVNodeWrapper(dnode2)) {\n\t\tif (isDomVNode(dnode1.node) && isDomVNode(dnode2.node)) {\n\t\t\tif (dnode1.node.domNode !== dnode2.node.domNode) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\tif (dnode1.node.tag !== dnode2.node.tag) {\n\t\t\treturn false;\n\t\t}\n\t\tif (dnode1.node.properties.key !== dnode2.node.properties.key) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t} else if (isWNodeWrapper(dnode1) && isWNodeWrapper(dnode2)) {\n\t\tconst widgetConstructor1 = dnode1.registryItem || dnode1.node.widgetConstructor;\n\t\tconst widgetConstructor2 = dnode2.registryItem || dnode2.node.widgetConstructor;\n\t\tconst {\n\t\t\tnode: { properties: props1 }\n\t\t} = dnode1;\n\t\tconst {\n\t\t\tnode: { properties: props2 }\n\t\t} = dnode2;\n\t\tif (dnode1.instance === undefined && typeof widgetConstructor2 === 'string') {\n\t\t\treturn false;\n\t\t}\n\t\tif (widgetConstructor1 !== widgetConstructor2) {\n\t\t\treturn false;\n\t\t}\n\t\tif (props1.key !== props2.key) {\n\t\t\treturn false;\n\t\t}\n\t\tif (!((widgetConstructor1 as any).keys || []).every((key: string) => props1[key] === props2[key])) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\treturn false;\n}\n\nfunction findIndexOfChild(children: DNodeWrapper[], sameAs: DNodeWrapper, start: number) {\n\tfor (let i = start; i < children.length; i++) {\n\t\tif (same(children[i], sameAs)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\nfunction createClassPropValue(classes: SupportedClassName | SupportedClassName[] = []) {\n\tlet classNames = '';\n\tif (Array.isArray(classes)) {\n\t\tfor (let i = 0; i < classes.length; i++) {\n\t\t\tlet className = classes[i];\n\t\t\tif (className && className !== true) {\n\t\t\t\tclassNames = classNames ? `${classNames} ${className}` : className;\n\t\t\t}\n\t\t}\n\t\treturn classNames;\n\t}\n\tif (classes && classes !== true) {\n\t\tclassNames = classes;\n\t}\n\treturn classNames;\n}\n\nfunction updateAttribute(domNode: Element, attrName: string, attrValue: string | undefined, namespace?: string) {\n\tif (namespace === NAMESPACE_SVG && attrName === 'href' && attrValue) {\n\t\tdomNode.setAttributeNS(NAMESPACE_XLINK, attrName, attrValue);\n\t} else if ((attrName === 'role' && attrValue === '') || attrValue === undefined) {\n\t\tdomNode.removeAttribute(attrName);\n\t} else {\n\t\tdomNode.setAttribute(attrName, attrValue);\n\t}\n}\n\nfunction arrayFrom(arr: any) {\n\treturn Array.prototype.slice.call(arr);\n}\n\nfunction createFactory(callback: any, middlewares: any, key?: any): any {\n\tconst factory = (properties: any, children?: any) => {\n\t\tif (properties) {\n\t\t\tconst result = w(callback, properties, children);\n\t\t\tcallback.isWidget = true;\n\t\t\tcallback.middlewares = middlewares;\n\t\t\treturn result;\n\t\t}\n\t\treturn {\n\t\t\tmiddlewares,\n\t\t\tcallback\n\t\t};\n\t};\n\tconst keys = Object.keys(middlewares).reduce((keys: string[], middlewareName: any) => {\n\t\tconst middleware = middlewares[middlewareName];\n\t\tif (middleware.keys) {\n\t\t\tkeys = [...keys, ...middleware.keys];\n\t\t}\n\t\treturn keys;\n\t}, key ? [key] : []);\n\n\tcallback.keys = keys;\n\tfactory.keys = keys;\n\tfactory.isFactory = true;\n\treturn factory;\n}\n\ntype KeysMatching<T, V> = { [K in keyof T]: T[K] extends V ? K : never }[keyof T];\n\nexport function create<T extends MiddlewareMap, MiddlewareProps = ReturnType<T[keyof T]>['properties']>(\n\tmiddlewares: T = {} as T\n) {\n\tfunction properties<Props>() {\n\t\tfunction returns<ReturnValue>(\n\t\t\tcallback: Callback<WidgetProperties & Props & UnionToIntersection<MiddlewareProps>, DNode[], T, ReturnValue>\n\t\t): ReturnValue extends RenderResult\n\t\t\t? DefaultChildrenWNodeFactory<{\n\t\t\t\t\tproperties: Props & WidgetProperties & UnionToIntersection<MiddlewareProps>;\n\t\t\t\t\tchildren: DNode[];\n\t\t\t  }>\n\t\t\t: MiddlewareResultFactory<\n\t\t\t\t\tWidgetProperties & Props & UnionToIntersection<MiddlewareProps>,\n\t\t\t\t\tDNode[],\n\t\t\t\t\tT,\n\t\t\t\t\tReturnValue\n\t\t\t  > {\n\t\t\treturn createFactory(callback, middlewares);\n\t\t}\n\n\t\tfunction key(key: KeysMatching<Props, string | number>) {\n\t\t\tfunction returns<ReturnValue>(\n\t\t\t\tcallback: Callback<\n\t\t\t\t\tWidgetProperties & Props & UnionToIntersection<MiddlewareProps>,\n\t\t\t\t\tDNode[],\n\t\t\t\t\tT,\n\t\t\t\t\tReturnValue\n\t\t\t\t>\n\t\t\t): ReturnValue extends RenderResult\n\t\t\t\t? DefaultChildrenWNodeFactory<{\n\t\t\t\t\t\tproperties: Props & WidgetProperties & UnionToIntersection<MiddlewareProps>;\n\t\t\t\t\t\tchildren: DNode[];\n\t\t\t\t  }>\n\t\t\t\t: MiddlewareResultFactory<\n\t\t\t\t\t\tWidgetProperties & Props & UnionToIntersection<MiddlewareProps>,\n\t\t\t\t\t\tDNode[],\n\t\t\t\t\t\tT,\n\t\t\t\t\t\tReturnValue\n\t\t\t\t  > {\n\t\t\t\treturn createFactory(callback, middlewares, key);\n\t\t\t}\n\t\t\treturn returns;\n\t\t}\n\n\t\tfunction children<Children>() {\n\t\t\tfunction returns<ReturnValue>(\n\t\t\t\tcallback: Callback<\n\t\t\t\t\tWidgetProperties & Props & UnionToIntersection<MiddlewareProps>,\n\t\t\t\t\tChildren,\n\t\t\t\t\tT,\n\t\t\t\t\tReturnValue\n\t\t\t\t>\n\t\t\t): ReturnValue extends RenderResult\n\t\t\t\t? UnionToIntersection<Children> extends undefined\n\t\t\t\t\t? OptionalWNodeFactory<{\n\t\t\t\t\t\t\tproperties: Props & WidgetProperties & UnionToIntersection<MiddlewareProps>;\n\t\t\t\t\t\t\tchildren: NonNullable<Children>;\n\t\t\t\t\t  }>\n\t\t\t\t\t: WNodeFactory<{\n\t\t\t\t\t\t\tproperties: Props & WidgetProperties & UnionToIntersection<MiddlewareProps>;\n\t\t\t\t\t\t\tchildren: Children;\n\t\t\t\t\t  }>\n\t\t\t\t: MiddlewareResultFactory<\n\t\t\t\t\t\tWidgetProperties & Props & UnionToIntersection<MiddlewareProps>,\n\t\t\t\t\t\tChildren,\n\t\t\t\t\t\tT,\n\t\t\t\t\t\tReturnValue\n\t\t\t\t  > {\n\t\t\t\treturn createFactory(callback, middlewares);\n\t\t\t}\n\n\t\t\tfunction key(key: KeysMatching<Props, string | number>) {\n\t\t\t\tfunction returns<ReturnValue>(\n\t\t\t\t\tcallback: Callback<\n\t\t\t\t\t\tWidgetProperties & Props & UnionToIntersection<MiddlewareProps>,\n\t\t\t\t\t\tChildren,\n\t\t\t\t\t\tT,\n\t\t\t\t\t\tReturnValue\n\t\t\t\t\t>\n\t\t\t\t): ReturnValue extends RenderResult\n\t\t\t\t\t? UnionToIntersection<Children> extends undefined\n\t\t\t\t\t\t? OptionalWNodeFactory<{\n\t\t\t\t\t\t\t\tproperties: Props & WidgetProperties & UnionToIntersection<MiddlewareProps>;\n\t\t\t\t\t\t\t\tchildren: NonNullable<Children>;\n\t\t\t\t\t\t  }>\n\t\t\t\t\t\t: WNodeFactory<{\n\t\t\t\t\t\t\t\tproperties: Props & WidgetProperties & UnionToIntersection<MiddlewareProps>;\n\t\t\t\t\t\t\t\tchildren: Children;\n\t\t\t\t\t\t  }>\n\t\t\t\t\t: MiddlewareResultFactory<\n\t\t\t\t\t\t\tWidgetProperties & Props & UnionToIntersection<MiddlewareProps>,\n\t\t\t\t\t\t\tChildren,\n\t\t\t\t\t\t\tT,\n\t\t\t\t\t\t\tReturnValue\n\t\t\t\t\t  > {\n\t\t\t\t\treturn createFactory(callback, middlewares, key);\n\t\t\t\t}\n\t\t\t\treturn returns;\n\t\t\t}\n\t\t\treturns.key = key;\n\t\t\treturn returns;\n\t\t}\n\t\treturns.children = children;\n\t\treturns.key = key;\n\t\treturn returns;\n\t}\n\n\tfunction children<Children>() {\n\t\tfunction properties<Props>() {\n\t\t\tfunction returns<ReturnValue>(\n\t\t\t\tcallback: Callback<\n\t\t\t\t\tWidgetProperties & Props & UnionToIntersection<MiddlewareProps>,\n\t\t\t\t\tChildren,\n\t\t\t\t\tT,\n\t\t\t\t\tReturnValue\n\t\t\t\t>\n\t\t\t): ReturnValue extends RenderResult\n\t\t\t\t? UnionToIntersection<Children> extends undefined\n\t\t\t\t\t? OptionalWNodeFactory<{\n\t\t\t\t\t\t\tproperties: Props & WidgetProperties & UnionToIntersection<MiddlewareProps>;\n\t\t\t\t\t\t\tchildren: NonNullable<Children>;\n\t\t\t\t\t  }>\n\t\t\t\t\t: WNodeFactory<{\n\t\t\t\t\t\t\tproperties: Props & WidgetProperties & UnionToIntersection<MiddlewareProps>;\n\t\t\t\t\t\t\tchildren: Children;\n\t\t\t\t\t  }>\n\t\t\t\t: MiddlewareResultFactory<\n\t\t\t\t\t\tWidgetProperties & Props & UnionToIntersection<MiddlewareProps>,\n\t\t\t\t\t\tChildren,\n\t\t\t\t\t\tT,\n\t\t\t\t\t\tReturnValue\n\t\t\t\t  > {\n\t\t\t\treturn createFactory(callback, middlewares);\n\t\t\t}\n\t\t\tfunction key(key: KeysMatching<Props, string | number>) {\n\t\t\t\tfunction returns<ReturnValue>(\n\t\t\t\t\tcallback: Callback<\n\t\t\t\t\t\tWidgetProperties & Props & UnionToIntersection<MiddlewareProps>,\n\t\t\t\t\t\tChildren,\n\t\t\t\t\t\tT,\n\t\t\t\t\t\tReturnValue\n\t\t\t\t\t>\n\t\t\t\t): ReturnValue extends RenderResult\n\t\t\t\t\t? UnionToIntersection<Children> extends undefined\n\t\t\t\t\t\t? OptionalWNodeFactory<{\n\t\t\t\t\t\t\t\tproperties: Props & WidgetProperties & UnionToIntersection<MiddlewareProps>;\n\t\t\t\t\t\t\t\tchildren: NonNullable<Children>;\n\t\t\t\t\t\t  }>\n\t\t\t\t\t\t: WNodeFactory<{\n\t\t\t\t\t\t\t\tproperties: Props & WidgetProperties & UnionToIntersection<MiddlewareProps>;\n\t\t\t\t\t\t\t\tchildren: Children;\n\t\t\t\t\t\t  }>\n\t\t\t\t\t: MiddlewareResultFactory<\n\t\t\t\t\t\t\tWidgetProperties & Props & UnionToIntersection<MiddlewareProps>,\n\t\t\t\t\t\t\tChildren,\n\t\t\t\t\t\t\tT,\n\t\t\t\t\t\t\tReturnValue\n\t\t\t\t\t  > {\n\t\t\t\t\treturn createFactory(callback, middlewares, key);\n\t\t\t\t}\n\t\t\t\treturn returns;\n\t\t\t}\n\t\t\treturns.key = key;\n\t\t\treturn returns;\n\t\t}\n\n\t\tfunction returns<ReturnValue>(\n\t\t\tcallback: Callback<WidgetProperties & UnionToIntersection<MiddlewareProps>, Children, T, ReturnValue>\n\t\t): ReturnValue extends RenderResult\n\t\t\t? UnionToIntersection<Children> extends undefined\n\t\t\t\t? OptionalWNodeFactory<{\n\t\t\t\t\t\tproperties: WidgetProperties & UnionToIntersection<MiddlewareProps>;\n\t\t\t\t\t\tchildren: NonNullable<Children>;\n\t\t\t\t  }>\n\t\t\t\t: WNodeFactory<{\n\t\t\t\t\t\tproperties: WidgetProperties & UnionToIntersection<MiddlewareProps>;\n\t\t\t\t\t\tchildren: Children;\n\t\t\t\t  }>\n\t\t\t: MiddlewareResultFactory<\n\t\t\t\t\tWidgetProperties & UnionToIntersection<MiddlewareProps>,\n\t\t\t\t\tNonNullable<Children>,\n\t\t\t\t\tT,\n\t\t\t\t\tReturnValue\n\t\t\t  > {\n\t\t\treturn createFactory(callback, middlewares);\n\t\t}\n\t\treturns.properties = properties;\n\t\treturn returns;\n\t}\n\n\tfunction returns<ReturnValue>(\n\t\tcallback: Callback<WidgetProperties & UnionToIntersection<MiddlewareProps>, DNode[], T, ReturnValue>\n\t): ReturnValue extends RenderResult\n\t\t? DefaultChildrenWNodeFactory<{\n\t\t\t\tproperties: WidgetProperties & UnionToIntersection<MiddlewareProps>;\n\t\t\t\tchildren: DNode[];\n\t\t  }>\n\t\t: MiddlewareResultFactory<WidgetProperties & UnionToIntersection<MiddlewareProps>, DNode[], T, ReturnValue> {\n\t\treturn createFactory(callback, middlewares);\n\t}\n\treturns.children = children;\n\treturns.properties = properties;\n\treturn returns;\n}\n\nconst factory = create();\n\nfunction wrapNodes(renderer: () => RenderResult) {\n\tconst result = renderer();\n\tconst isWNodeWrapper = isWNode(result);\n\tconst callback = () => {\n\t\treturn result;\n\t};\n\tcallback.isWNodeWrapper = isWNodeWrapper;\n\treturn factory(callback);\n}\n\nexport const widgetInstanceMap = new WeakMap<WidgetBaseInterface, WidgetData>();\nconst widgetMetaMap = new Map<string, WidgetMeta>();\nconst requestedDomNodes = new Set();\nlet wrapperId = 0;\nlet metaId = 0;\n\nfunction addNodeToMap(id: string, key: string | number, node: HTMLElement) {\n\tconst widgetMeta = widgetMetaMap.get(id);\n\tif (widgetMeta) {\n\t\twidgetMeta.nodeMap = widgetMeta.nodeMap || new Map();\n\t\twidgetMeta.nodeMap.set(key, node);\n\t\tif (requestedDomNodes.has(`${id}-${key}`)) {\n\t\t\twidgetMeta.invalidator();\n\t\t\trequestedDomNodes.delete(`${id}-${key}`);\n\t\t}\n\t}\n}\n\nfunction destroyHandles(meta: WidgetMeta) {\n\tconst { destroyMap, middlewareIds } = meta;\n\tif (!destroyMap) {\n\t\treturn;\n\t}\n\tfor (let i = 0; i < middlewareIds.length; i++) {\n\t\tconst id = middlewareIds[i];\n\t\tconst destroy = destroyMap.get(id);\n\t\tdestroy && destroy();\n\t\tdestroyMap.delete(id);\n\t\tif (destroyMap.size === 0) {\n\t\t\tbreak;\n\t\t}\n\t}\n\tdestroyMap.clear();\n}\n\nfunction runDiffs(meta: WidgetMeta, current: any, next: any) {\n\tlet customProperties: any = {};\n\tmeta.customDiffMap = meta.customDiffMap || new Map();\n\tif (meta.customDiffMap.size) {\n\t\tmeta.customDiffMap.forEach((diffMap) => {\n\t\t\tdiffMap.forEach((diff, propertyName) => {\n\t\t\t\tconst result = diff({ ...current }, { ...next });\n\t\t\t\tif (result) {\n\t\t\t\t\tcustomProperties[propertyName] = result;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\treturn customProperties;\n}\n\nexport const invalidator = factory(({ id }) => {\n\tconst [widgetId] = id.split('-');\n\treturn () => {\n\t\tconst widgetMeta = widgetMetaMap.get(widgetId);\n\t\tif (widgetMeta) {\n\t\t\treturn widgetMeta.invalidator();\n\t\t}\n\t};\n});\n\nexport const node = factory(({ id }) => {\n\treturn {\n\t\tget(key: string | number): HTMLElement | null {\n\t\t\tconst [widgetId] = id.split('-');\n\t\t\tconst widgetMeta = widgetMetaMap.get(widgetId);\n\t\t\tif (widgetMeta) {\n\t\t\t\twidgetMeta.nodeMap = widgetMeta.nodeMap || new Map();\n\t\t\t\tconst mountNode = widgetMeta.mountNode;\n\t\t\t\tconst node = widgetMeta.nodeMap.get(key);\n\t\t\t\tif (\n\t\t\t\t\tnode &&\n\t\t\t\t\t(mountNode.contains(node) ||\n\t\t\t\t\t\t(global.document.body !== mountNode && global.document.body.contains(node)))\n\t\t\t\t) {\n\t\t\t\t\treturn node;\n\t\t\t\t}\n\t\t\t\trequestedDomNodes.add(`${widgetId}-${key}`);\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t};\n});\n\nexport const diffProperty = factory(({ id }) => {\n\tfunction callback<T extends (...args: any) => any, K extends keyof ReturnType<T>>(\n\t\tproperty: K,\n\t\tproperties: T,\n\t\tdiff: (current: ReturnType<T>, next: ReturnType<T>) => void | ReturnType<T>[K]\n\t): void;\n\tfunction callback(propertyName: string, diff: (current: any, next: any) => void): void;\n\tfunction callback(propertyName: string, propertiesOrDiff: any, diff?: any) {\n\t\tconst [widgetId] = id.split('-');\n\t\tconst widgetMeta = widgetMetaMap.get(widgetId);\n\t\tif (!diff) {\n\t\t\tdiff = propertiesOrDiff;\n\t\t}\n\t\tif (widgetMeta) {\n\t\t\twidgetMeta.customDiffMap = widgetMeta.customDiffMap || new Map();\n\t\t\twidgetMeta.customDiffProperties = widgetMeta.customDiffProperties || new Set();\n\t\t\tconst propertyDiffMap = widgetMeta.customDiffMap.get(id) || new Map();\n\t\t\tif (!propertyDiffMap.has(propertyName)) {\n\t\t\t\tconst result = diff({}, widgetMeta.originalProperties);\n\t\t\t\tif (result !== undefined) {\n\t\t\t\t\tif (has('dojo-debug')) {\n\t\t\t\t\t\tif (widgetMeta.propertiesCalled) {\n\t\t\t\t\t\t\tconsole.warn(\n\t\t\t\t\t\t\t\t`Calling \"propertyDiff\" middleware after accessing properties in \"${\n\t\t\t\t\t\t\t\t\twidgetMeta.widgetName\n\t\t\t\t\t\t\t\t}\", can result in referencing stale properties.`\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\twidgetMeta.properties = { ...widgetMeta.properties, [propertyName]: result };\n\t\t\t\t}\n\t\t\t\tpropertyDiffMap.set(propertyName, diff);\n\t\t\t\twidgetMeta.customDiffProperties.add(propertyName);\n\t\t\t}\n\t\t\twidgetMeta.customDiffMap.set(id, propertyDiffMap);\n\t\t}\n\t}\n\n\treturn callback;\n});\n\nexport const destroy = factory(({ id }) => {\n\treturn (destroyFunction: () => void): void => {\n\t\tconst [widgetId] = id.split('-');\n\t\tconst widgetMeta = widgetMetaMap.get(widgetId);\n\t\tif (widgetMeta) {\n\t\t\twidgetMeta.destroyMap = widgetMeta.destroyMap || new Map();\n\t\t\tif (!widgetMeta.destroyMap.has(id)) {\n\t\t\t\twidgetMeta.destroyMap.set(id, destroyFunction);\n\t\t\t}\n\t\t}\n\t};\n});\n\nexport const getRegistry = factory(({ id }) => {\n\tconst [widgetId] = id.split('-');\n\treturn (): RegistryHandler | null => {\n\t\tconst widgetMeta = widgetMetaMap.get(widgetId);\n\t\tif (widgetMeta) {\n\t\t\tif (!widgetMeta.registryHandler) {\n\t\t\t\twidgetMeta.registryHandler = new RegistryHandler();\n\t\t\t\twidgetMeta.registryHandler.base = widgetMeta.registry;\n\t\t\t\twidgetMeta.registryHandler.on('invalidate', widgetMeta.invalidator);\n\t\t\t}\n\t\t\twidgetMeta.registryHandler = widgetMeta.registryHandler || new RegistryHandler();\n\t\t\treturn widgetMeta.registryHandler;\n\t\t}\n\t\treturn null;\n\t};\n});\n\nexport const defer = factory(({ id }) => {\n\tconst [widgetId] = id.split('-');\n\tlet isDeferred = false;\n\treturn {\n\t\tpause() {\n\t\t\tconst widgetMeta = widgetMetaMap.get(widgetId);\n\t\t\tif (!isDeferred && widgetMeta) {\n\t\t\t\twidgetMeta.deferRefs = widgetMeta.deferRefs + 1;\n\t\t\t\tisDeferred = true;\n\t\t\t}\n\t\t},\n\t\tresume() {\n\t\t\tconst widgetMeta = widgetMetaMap.get(widgetId);\n\t\t\tif (isDeferred && widgetMeta) {\n\t\t\t\twidgetMeta.deferRefs = widgetMeta.deferRefs - 1;\n\t\t\t\tisDeferred = false;\n\t\t\t}\n\t\t}\n\t};\n});\n\nfunction wrapFunctionProperties(id: string, properties: any) {\n\tconst props: any = {};\n\tconst propertyNames = Object.keys(properties);\n\tfor (let i = 0; i < propertyNames.length; i++) {\n\t\tconst propertyName = propertyNames[i];\n\t\tif (typeof properties[propertyName] === 'function') {\n\t\t\tprops[propertyName] = function WrappedProperty(...args: any[]) {\n\t\t\t\tconst widgetMeta = widgetMetaMap.get(id);\n\t\t\t\tif (widgetMeta) {\n\t\t\t\t\treturn widgetMeta.originalProperties[propertyName](...args);\n\t\t\t\t}\n\t\t\t\treturn properties[propertyName](...args);\n\t\t\t};\n\t\t\tprops[propertyName].unwrap = () => {\n\t\t\t\tconst widgetMeta = widgetMetaMap.get(id);\n\t\t\t\tif (widgetMeta) {\n\t\t\t\t\treturn widgetMeta.originalProperties[propertyName];\n\t\t\t\t}\n\t\t\t\treturn properties[propertyName];\n\t\t\t};\n\t\t} else {\n\t\t\tprops[propertyName] = properties[propertyName];\n\t\t}\n\t}\n\treturn props;\n}\n\nexport function renderer(renderer: () => RenderResult): Renderer {\n\tlet _mountOptions: MountOptions & { domNode: HTMLElement } = {\n\t\tsync: false,\n\t\tmerge: true,\n\t\ttransition: undefined,\n\t\tdomNode: global.document.body,\n\t\tregistry: new Registry()\n\t};\n\tlet _invalidationQueue: InvalidationQueueItem[] = [];\n\tlet _processQueue: (ProcessItem | DetachApplication | AttachApplication)[] = [];\n\tlet _deferredProcessQueue: (ProcessItem | DetachApplication | AttachApplication)[] = [];\n\tlet _applicationQueue: ApplicationInstruction[] = [];\n\tlet _eventMap = new WeakMap<Function, EventListener>();\n\tlet _idToWrapperMap = new Map<string, DNodeWrapper>();\n\tlet _wrapperSiblingMap = new WeakMap<DNodeWrapper, DNodeWrapper>();\n\tlet _idToChildrenWrappers = new Map<string, DNodeWrapper[]>();\n\tlet _insertBeforeMap: undefined | WeakMap<DNodeWrapper, Node> = new WeakMap<DNodeWrapper, Node>();\n\tlet _nodeToWrapperMap = new WeakMap<VNode | WNode<any>, WNodeWrapper>();\n\tlet _renderScheduled: number | undefined;\n\tlet _deferredRenderCallbacks: Function[] = [];\n\tlet parentInvalidate: () => void;\n\tlet _allMergedNodes: Node[] = [];\n\tlet _appWrapperId: string | undefined;\n\tlet _deferredProcessIds = new Map<number, Function>();\n\n\tfunction nodeOperation(\n\t\tpropName: string,\n\t\tpropValue: (() => boolean) | boolean,\n\t\tpreviousValue: boolean,\n\t\tdomNode: HTMLElement & { [index: string]: any }\n\t): void {\n\t\tlet result = propValue && !previousValue;\n\t\tif (typeof propValue === 'function') {\n\t\t\tresult = propValue();\n\t\t}\n\t\tif (result === true) {\n\t\t\t_deferredRenderCallbacks.push(() => {\n\t\t\t\tdomNode[propName]();\n\t\t\t});\n\t\t}\n\t}\n\n\tfunction updateEvent(\n\t\tdomNode: Node,\n\t\teventName: string,\n\t\tcurrentValue: (event: Event) => void,\n\t\tpreviousValue?: Function\n\t) {\n\t\tif (previousValue) {\n\t\t\tconst previousEvent = _eventMap.get(previousValue);\n\t\t\tpreviousEvent && domNode.removeEventListener(eventName, previousEvent);\n\t\t}\n\n\t\tlet callback = currentValue;\n\n\t\tif (eventName === 'input') {\n\t\t\tcallback = function(this: any, evt: Event) {\n\t\t\t\tcurrentValue.call(this, evt);\n\t\t\t\t(evt.target as any)['oninput-value'] = (evt.target as HTMLInputElement).value;\n\t\t\t};\n\t\t}\n\n\t\tdomNode.addEventListener(eventName, callback);\n\t\t_eventMap.set(currentValue, callback);\n\t}\n\n\tfunction removeOrphanedEvents(\n\t\tdomNode: Element,\n\t\tpreviousProperties: VNodeProperties,\n\t\tproperties: VNodeProperties,\n\t\tonlyEvents: boolean = false\n\t) {\n\t\tObject.keys(previousProperties).forEach((propName) => {\n\t\t\tconst isEvent = propName.substr(0, 2) === 'on' || onlyEvents;\n\t\t\tconst eventName = onlyEvents ? propName : propName.substr(2);\n\t\t\tif (isEvent && !properties[propName]) {\n\t\t\t\tconst eventCallback = _eventMap.get(previousProperties[propName]);\n\t\t\t\tif (eventCallback) {\n\t\t\t\t\tdomNode.removeEventListener(eventName, eventCallback);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tfunction resolveRegistryItem(wrapper: WNodeWrapper, instance?: any, id?: string) {\n\t\tif (!isWidget(wrapper.node.widgetConstructor)) {\n\t\t\tconst owningNode = _nodeToWrapperMap.get(wrapper.node);\n\t\t\tif (owningNode) {\n\t\t\t\tif (owningNode.instance) {\n\t\t\t\t\tinstance = owningNode.instance;\n\t\t\t\t} else {\n\t\t\t\t\tid = owningNode.id;\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet registry: RegistryHandler | undefined;\n\t\t\tif (instance) {\n\t\t\t\tconst instanceData = widgetInstanceMap.get(instance);\n\t\t\t\tif (instanceData) {\n\t\t\t\t\tregistry = instanceData.registry;\n\t\t\t\t}\n\t\t\t} else if (id !== undefined) {\n\t\t\t\tconst widgetMeta = widgetMetaMap.get(id);\n\t\t\t\tif (widgetMeta) {\n\t\t\t\t\tif (!widgetMeta.registryHandler) {\n\t\t\t\t\t\twidgetMeta.registryHandler = new RegistryHandler();\n\t\t\t\t\t\twidgetMeta.registryHandler.base = widgetMeta.registry;\n\t\t\t\t\t\twidgetMeta.registryHandler.on('invalidate', widgetMeta.invalidator);\n\t\t\t\t\t}\n\t\t\t\t\tregistry = widgetMeta.registryHandler;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (registry) {\n\t\t\t\tlet registryLabel: symbol | string;\n\t\t\t\tif (isLazyDefine(wrapper.node.widgetConstructor)) {\n\t\t\t\t\tconst { label, registryItem } = wrapper.node.widgetConstructor;\n\t\t\t\t\tif (!registry.has(label)) {\n\t\t\t\t\t\tregistry.define(label, registryItem);\n\t\t\t\t\t}\n\t\t\t\t\tregistryLabel = label;\n\t\t\t\t} else {\n\t\t\t\t\tregistryLabel = wrapper.node.widgetConstructor as any;\n\t\t\t\t}\n\t\t\t\tlet item = registry.get(registryLabel) as any;\n\t\t\t\tif (isWNodeFactory(item)) {\n\t\t\t\t\tconst node = item(wrapper.node.properties, wrapper.node.children);\n\t\t\t\t\tif (isWidgetFunction(node.widgetConstructor)) {\n\t\t\t\t\t\twrapper.registryItem = node.widgetConstructor;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\twrapper.registryItem = item;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction mapNodeToInstance(nodes: DNode[], wrapper: WNodeWrapper) {\n\t\twhile (nodes.length) {\n\t\t\tlet node = nodes.pop();\n\t\t\tif (isWNode(node) || isVNode(node)) {\n\t\t\t\tif (!_nodeToWrapperMap.has(node)) {\n\t\t\t\t\t_nodeToWrapperMap.set(node, wrapper);\n\t\t\t\t\tif (node.children && node.children.length) {\n\t\t\t\t\t\tnodes = [...nodes, ...node.children];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction renderedToWrapper(\n\t\trendered: DNode[],\n\t\tparent: DNodeWrapper,\n\t\tcurrentParent: DNodeWrapper | null\n\t): DNodeWrapper[] {\n\t\tconst { requiresInsertBefore, hasPreviousSiblings, namespace, depth } = parent;\n\t\tconst wrappedRendered: DNodeWrapper[] = [];\n\t\tconst hasParentWNode = isWNodeWrapper(parent);\n\t\tconst hasVirtualParentNode = isVirtualWrapper(parent);\n\t\tconst currentParentChildren =\n\t\t\t(isVNodeWrapper(currentParent) && _idToChildrenWrappers.get(currentParent.id)) || [];\n\t\tconst hasCurrentParentChildren = currentParentChildren.length > 0;\n\t\tconst insertBefore =\n\t\t\t((requiresInsertBefore || hasPreviousSiblings !== false) && (hasParentWNode || hasVirtualParentNode)) ||\n\t\t\t(hasCurrentParentChildren && rendered.length > 1);\n\t\tlet previousItem: DNodeWrapper | undefined;\n\t\tif (isWNodeWrapper(parent) && rendered.length) {\n\t\t\tmapNodeToInstance([...rendered], parent);\n\t\t}\n\t\tfor (let i = 0; i < rendered.length; i++) {\n\t\t\tlet renderedItem = rendered[i];\n\t\t\tif (!renderedItem || renderedItem === true) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (typeof renderedItem === 'string') {\n\t\t\t\trenderedItem = toTextVNode(renderedItem);\n\t\t\t}\n\t\t\tconst owningNode = _nodeToWrapperMap.get(renderedItem);\n\t\t\tconst wrapper: DNodeWrapper = {\n\t\t\t\tnode: renderedItem,\n\t\t\t\tdepth: depth + 1,\n\t\t\t\torder: i,\n\t\t\t\tparentId: parent.id,\n\t\t\t\trequiresInsertBefore: insertBefore,\n\t\t\t\thasParentWNode,\n\t\t\t\tnamespace: namespace\n\t\t\t} as DNodeWrapper;\n\t\t\tif (isVNode(renderedItem)) {\n\t\t\t\tif (renderedItem.deferredPropertiesCallback) {\n\t\t\t\t\t(wrapper as VNodeWrapper).deferredProperties = renderedItem.deferredPropertiesCallback(false);\n\t\t\t\t}\n\t\t\t\tif (renderedItem.properties.exitAnimation) {\n\t\t\t\t\tparent.hasAnimations = true;\n\t\t\t\t\tlet nextParent = _idToWrapperMap.get(parent.parentId);\n\t\t\t\t\twhile (nextParent) {\n\t\t\t\t\t\tif (nextParent.hasAnimations) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tnextParent.hasAnimations = true;\n\t\t\t\t\t\tnextParent = _idToWrapperMap.get(nextParent.parentId);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (owningNode) {\n\t\t\t\twrapper.owningId = owningNode.id;\n\t\t\t}\n\t\t\tif (isWNode(renderedItem)) {\n\t\t\t\tresolveRegistryItem(wrapper as WNodeWrapper, (parent as any).instance, (parent as any).id);\n\t\t\t}\n\t\t\tif (previousItem) {\n\t\t\t\t_wrapperSiblingMap.set(previousItem, wrapper);\n\t\t\t}\n\t\t\twrappedRendered.push(wrapper);\n\t\t\tpreviousItem = wrapper;\n\t\t}\n\t\treturn wrappedRendered;\n\t}\n\n\tfunction findParentDomNode(currentNode: DNodeWrapper): Node | undefined {\n\t\tlet parentDomNode: Node | undefined;\n\t\tlet parentWrapper = _idToWrapperMap.get(currentNode.parentId);\n\n\t\twhile (!parentDomNode && parentWrapper) {\n\t\t\tif (\n\t\t\t\t!parentDomNode &&\n\t\t\t\tisVNodeWrapper(parentWrapper) &&\n\t\t\t\t!isVirtualWrapper(parentWrapper) &&\n\t\t\t\tparentWrapper.domNode\n\t\t\t) {\n\t\t\t\tparentDomNode = parentWrapper.domNode;\n\t\t\t}\n\t\t\tparentWrapper = _idToWrapperMap.get(parentWrapper.parentId);\n\t\t}\n\t\treturn parentDomNode;\n\t}\n\n\tfunction runDeferredProperties(next: VNodeWrapper) {\n\t\tconst { deferredPropertiesCallback } = next.node;\n\t\tif (deferredPropertiesCallback) {\n\t\t\tconst properties = next.node.properties;\n\t\t\t_deferredRenderCallbacks.push(() => {\n\t\t\t\tif (_idToWrapperMap.has(next.owningId)) {\n\t\t\t\t\tconst deferredProperties = next.deferredProperties;\n\t\t\t\t\tnext.deferredProperties = deferredPropertiesCallback(true);\n\t\t\t\t\tprocessProperties(next, {\n\t\t\t\t\t\tproperties: { ...deferredProperties, ...properties }\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tfunction findInsertBefore(next: DNodeWrapper) {\n\t\tlet insertBefore: Node | null = null;\n\t\tlet searchNode: DNodeWrapper | undefined = next;\n\t\twhile (!insertBefore) {\n\t\t\tconst nextSibling = _wrapperSiblingMap.get(searchNode);\n\t\t\tif (nextSibling) {\n\t\t\t\tlet domNode = nextSibling.domNode;\n\t\t\t\tif (isWNodeWrapper(nextSibling) || isVirtualWrapper(nextSibling)) {\n\t\t\t\t\tif (!nextSibling.childDomWrapperId) {\n\t\t\t\t\t\tnextSibling.childDomWrapperId = findDomNodeOnParentWrapper(nextSibling.id);\n\t\t\t\t\t}\n\t\t\t\t\tif (nextSibling.childDomWrapperId) {\n\t\t\t\t\t\tconst childWrapper = _idToWrapperMap.get(nextSibling.childDomWrapperId);\n\t\t\t\t\t\tif (childWrapper && !isBodyWrapper(childWrapper) && !isHeadWrapper(childWrapper)) {\n\t\t\t\t\t\t\tdomNode = childWrapper.domNode;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (domNode && domNode.parentNode) {\n\t\t\t\t\tinsertBefore = domNode;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tsearchNode = nextSibling;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tsearchNode = searchNode && _idToWrapperMap.get(searchNode.parentId);\n\t\t\tif (!searchNode || (isVNodeWrapper(searchNode) && !isVirtualWrapper(searchNode))) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn insertBefore;\n\t}\n\n\tfunction setValue(domNode: any, propValue?: any, previousValue?: any) {\n\t\tconst domValue = domNode.value;\n\t\tconst onInputValue = domNode['oninput-value'];\n\t\tconst onSelectValue = domNode['select-value'];\n\n\t\tif (onSelectValue && domValue !== onSelectValue) {\n\t\t\tdomNode.value = onSelectValue;\n\t\t\tif (domNode.value === onSelectValue) {\n\t\t\t\tdomNode['select-value'] = undefined;\n\t\t\t}\n\t\t} else if ((onInputValue && domValue === onInputValue) || propValue !== previousValue) {\n\t\t\tdomNode.value = propValue;\n\t\t\tdomNode['oninput-value'] = undefined;\n\t\t}\n\t}\n\n\tfunction setProperties(\n\t\tdomNode: HTMLElement,\n\t\tcurrentProperties: VNodeProperties = {},\n\t\tnextWrapper: VNodeWrapper,\n\t\tincludesEventsAndAttributes = true\n\t): void {\n\t\tconst properties = nextWrapper.deferredProperties\n\t\t\t? { ...nextWrapper.deferredProperties, ...nextWrapper.node.properties }\n\t\t\t: nextWrapper.node.properties;\n\t\tconst propNames = Object.keys(properties);\n\t\tconst propCount = propNames.length;\n\t\tif (propNames.indexOf('classes') === -1 && currentProperties.classes) {\n\t\t\tdomNode.removeAttribute('class');\n\t\t}\n\n\t\tincludesEventsAndAttributes && removeOrphanedEvents(domNode, currentProperties, properties);\n\n\t\tfor (let i = 0; i < propCount; i++) {\n\t\t\tconst propName = propNames[i];\n\t\t\tlet propValue = properties[propName];\n\t\t\tconst previousValue = currentProperties[propName];\n\t\t\tif (propName === 'classes') {\n\t\t\t\tconst previousClassString = createClassPropValue(previousValue);\n\t\t\t\tlet currentClassString = createClassPropValue(propValue);\n\t\t\t\tif (previousClassString !== currentClassString) {\n\t\t\t\t\tif (currentClassString) {\n\t\t\t\t\t\tif (nextWrapper.merged) {\n\t\t\t\t\t\t\tconst domClasses = (domNode.getAttribute('class') || '').split(' ');\n\t\t\t\t\t\t\tfor (let i = 0; i < domClasses.length; i++) {\n\t\t\t\t\t\t\t\tif (currentClassString.indexOf(domClasses[i]) === -1) {\n\t\t\t\t\t\t\t\t\tcurrentClassString = `${domClasses[i]} ${currentClassString}`;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdomNode.setAttribute('class', currentClassString);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdomNode.removeAttribute('class');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (nodeOperations.indexOf(propName) !== -1) {\n\t\t\t\tnodeOperation(propName, propValue, previousValue, domNode);\n\t\t\t} else if (propName === 'styles') {\n\t\t\t\tconst styleNames = Object.keys(propValue);\n\t\t\t\tconst styleCount = styleNames.length;\n\t\t\t\tfor (let j = 0; j < styleCount; j++) {\n\t\t\t\t\tconst styleName = styleNames[j];\n\t\t\t\t\tconst newStyleValue = propValue[styleName];\n\t\t\t\t\tconst oldStyleValue = previousValue && previousValue[styleName];\n\t\t\t\t\tif (newStyleValue === oldStyleValue) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\t(domNode.style as any)[styleName] = newStyleValue || '';\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (!propValue && typeof previousValue === 'string') {\n\t\t\t\t\tpropValue = '';\n\t\t\t\t}\n\t\t\t\tif (propName === 'value') {\n\t\t\t\t\tif ((domNode as HTMLElement).tagName === 'SELECT') {\n\t\t\t\t\t\t(domNode as any)['select-value'] = propValue;\n\t\t\t\t\t}\n\t\t\t\t\tsetValue(domNode, propValue, previousValue);\n\t\t\t\t} else if (propName !== 'key' && propValue !== previousValue) {\n\t\t\t\t\tconst type = typeof propValue;\n\t\t\t\t\tif (type === 'function' && propName.lastIndexOf('on', 0) === 0 && includesEventsAndAttributes) {\n\t\t\t\t\t\tupdateEvent(domNode, propName.substr(2), propValue, previousValue);\n\t\t\t\t\t} else if (type === 'string' && propName !== 'innerHTML' && includesEventsAndAttributes) {\n\t\t\t\t\t\tupdateAttribute(domNode, propName, propValue, nextWrapper.namespace);\n\t\t\t\t\t} else if (propName === 'scrollLeft' || propName === 'scrollTop') {\n\t\t\t\t\t\tif ((domNode as any)[propName] !== propValue) {\n\t\t\t\t\t\t\t(domNode as any)[propName] = propValue;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t(domNode as any)[propName] = propValue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction _createDeferredRenderCallback(): (() => void) | undefined {\n\t\tconst callbacks = _deferredRenderCallbacks;\n\t\t_deferredRenderCallbacks = [];\n\t\tif (callbacks.length) {\n\t\t\treturn () => {\n\t\t\t\tlet callback: Function | undefined;\n\t\t\t\twhile ((callback = callbacks.shift())) {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t}\n\n\tfunction _scheduleDeferredRenderCallbacks() {\n\t\tconst { sync } = _mountOptions;\n\t\tconst run = _createDeferredRenderCallback();\n\t\tif (run) {\n\t\t\tif (sync) {\n\t\t\t\trun();\n\t\t\t} else {\n\t\t\t\tlet id: number;\n\t\t\t\tid = global.requestAnimationFrame(() => {\n\t\t\t\t\t_deferredProcessIds.delete(id);\n\t\t\t\t\trun();\n\t\t\t\t});\n\t\t\t\t_deferredProcessIds.set(id, run);\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction processProperties(next: VNodeWrapper, previousProperties: PreviousProperties) {\n\t\tif (next.node.attributes && next.node.events) {\n\t\t\tupdateAttributes(\n\t\t\t\tnext.domNode as HTMLElement,\n\t\t\t\tpreviousProperties.attributes || {},\n\t\t\t\tnext.node.attributes,\n\t\t\t\tnext.namespace\n\t\t\t);\n\t\t\tsetProperties(next.domNode as HTMLElement, previousProperties.properties, next, false);\n\t\t\tconst events = next.node.events || {};\n\t\t\tif (previousProperties.events) {\n\t\t\t\tremoveOrphanedEvents(\n\t\t\t\t\tnext.domNode as HTMLElement,\n\t\t\t\t\tpreviousProperties.events || {},\n\t\t\t\t\tnext.node.events,\n\t\t\t\t\ttrue\n\t\t\t\t);\n\t\t\t}\n\t\t\tpreviousProperties.events = previousProperties.events || {};\n\t\t\tObject.keys(events).forEach((event) => {\n\t\t\t\tupdateEvent(next.domNode as HTMLElement, event, events[event], previousProperties.events[event]);\n\t\t\t});\n\t\t} else {\n\t\t\tsetProperties(next.domNode as HTMLElement, previousProperties.properties, next);\n\t\t}\n\t}\n\n\tfunction unmount() {\n\t\t_processQueue.push({\n\t\t\tcurrent: [_idToWrapperMap.get(_appWrapperId!)!],\n\t\t\tnext: [],\n\t\t\tmeta: {}\n\t\t});\n\t\tif (_renderScheduled) {\n\t\t\tglobal.cancelAnimationFrame(_renderScheduled);\n\t\t}\n\t\t_runProcessQueue();\n\t\t_runDomInstructionQueue();\n\t\t_deferredProcessIds.forEach((callback, id) => {\n\t\t\tglobal.cancelAnimationFrame(id);\n\t\t\tcallback();\n\t\t});\n\t\tconst run = _createDeferredRenderCallback();\n\t\trun && run();\n\t\t_invalidationQueue = [];\n\t\t_processQueue = [];\n\t\t_deferredProcessQueue = [];\n\t\t_applicationQueue = [];\n\t\t_deferredRenderCallbacks = [];\n\t\t_allMergedNodes = [];\n\t\t_eventMap = new WeakMap();\n\t\t_idToWrapperMap.clear();\n\t\t_idToChildrenWrappers.clear();\n\t\t_wrapperSiblingMap = new WeakMap();\n\t\t_nodeToWrapperMap = new WeakMap();\n\t\t_insertBeforeMap = undefined;\n\t}\n\n\tfunction mount(mountOptions: Partial<MountOptions> = {}) {\n\t\tlet domNode = mountOptions.domNode;\n\t\tif (!domNode) {\n\t\t\tif (has('dojo-debug') && domNode === null) {\n\t\t\t\tconsole.warn('Unable to find node to mount the application, defaulting to the document body.');\n\t\t\t}\n\t\t\tdomNode = global.document.body as HTMLElement;\n\t\t}\n\t\t_mountOptions = { ..._mountOptions, ...mountOptions, domNode };\n\t\tconst renderResult = wrapNodes(renderer)({}, []);\n\t\t_appWrapperId = `${wrapperId++}`;\n\t\tconst nextWrapper = {\n\t\t\tid: _appWrapperId,\n\t\t\tnode: renderResult,\n\t\t\torder: 0,\n\t\t\tdepth: 1,\n\t\t\towningId: '-1',\n\t\t\tparentId: '-1',\n\t\t\tsiblingId: '-1',\n\t\t\tproperties: {}\n\t\t};\n\t\t_idToWrapperMap.set('-1', {\n\t\t\tid: `-1`,\n\t\t\tdepth: 0,\n\t\t\torder: 0,\n\t\t\towningId: '',\n\t\t\tdomNode,\n\t\t\tnode: v('fake'),\n\t\t\tparentId: '-1'\n\t\t});\n\t\t_processQueue.push({\n\t\t\tcurrent: [],\n\t\t\tnext: [nextWrapper],\n\t\t\tmeta: { mergeNodes: arrayFrom(domNode.childNodes) }\n\t\t});\n\t\t_runProcessQueue();\n\t\t_runDomInstructionQueue();\n\t\t_cleanUpMergedNodes();\n\t\t_insertBeforeMap = undefined;\n\t\t_scheduleDeferredRenderCallbacks();\n\t\tif (!_renderScheduled) {\n\t\t\tsetRendering(false);\n\t\t}\n\t}\n\n\tfunction invalidate() {\n\t\tparentInvalidate && parentInvalidate();\n\t}\n\n\tfunction _schedule(): void {\n\t\tconst { sync } = _mountOptions;\n\t\tif (sync) {\n\t\t\t_runInvalidationQueue();\n\t\t} else if (!_renderScheduled) {\n\t\t\tsetRendering(true);\n\t\t\t_renderScheduled = global.requestAnimationFrame(() => {\n\t\t\t\t_runInvalidationQueue();\n\t\t\t});\n\t\t}\n\t}\n\n\tfunction getWNodeWrapper(id: string) {\n\t\tconst wrapper = _idToWrapperMap.get(id);\n\t\tif (wrapper && isWNodeWrapper(wrapper)) {\n\t\t\treturn wrapper;\n\t\t}\n\t}\n\n\tfunction _runInvalidationQueue() {\n\t\t_renderScheduled = undefined;\n\t\tlet invalidationQueue = [..._invalidationQueue];\n\t\tconst previouslyRendered = [];\n\t\t_invalidationQueue = [];\n\t\tinvalidationQueue.sort((a, b) => {\n\t\t\tlet result = b.depth - a.depth;\n\t\t\tif (result === 0) {\n\t\t\t\tresult = b.order - a.order;\n\t\t\t}\n\t\t\treturn result;\n\t\t});\n\t\tif (_deferredProcessQueue.length) {\n\t\t\t_processQueue = [..._deferredProcessQueue];\n\t\t\t_deferredProcessQueue = [];\n\t\t\t_runProcessQueue();\n\t\t\tif (_deferredProcessQueue.length) {\n\t\t\t\t_invalidationQueue = [...invalidationQueue];\n\t\t\t\tinvalidationQueue = [];\n\t\t\t}\n\t\t}\n\t\tlet item: InvalidationQueueItem | undefined;\n\t\twhile ((item = invalidationQueue.pop())) {\n\t\t\tlet { id } = item;\n\t\t\tconst current = getWNodeWrapper(id);\n\t\t\tif (!current || previouslyRendered.indexOf(id) !== -1 || !_idToWrapperMap.has(current.parentId)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tpreviouslyRendered.push(id);\n\t\t\tconst sibling = _wrapperSiblingMap.get(current);\n\t\t\tconst next = {\n\t\t\t\tnode: {\n\t\t\t\t\ttype: WNODE,\n\t\t\t\t\twidgetConstructor: current.node.widgetConstructor,\n\t\t\t\t\tproperties: current.properties || {},\n\t\t\t\t\tchildren: current.node.children || []\n\t\t\t\t},\n\t\t\t\tinstance: current.instance,\n\t\t\t\tid: current.id,\n\t\t\t\tproperties: current.properties,\n\t\t\t\tdepth: current.depth,\n\t\t\t\torder: current.order,\n\t\t\t\towningId: current.owningId,\n\t\t\t\tparentId: current.parentId,\n\t\t\t\tregistryItem: current.registryItem\n\t\t\t};\n\n\t\t\tsibling && _wrapperSiblingMap.set(next, sibling);\n\t\t\tconst result = _updateWidget({ current, next });\n\t\t\tif (result && result.item) {\n\t\t\t\t_processQueue.push(result.item);\n\t\t\t\t_idToWrapperMap.set(id, next);\n\t\t\t\t_runProcessQueue();\n\t\t\t}\n\t\t}\n\t\t_runDomInstructionQueue();\n\t\t_cleanUpMergedNodes();\n\t\t_scheduleDeferredRenderCallbacks();\n\t\tif (!_renderScheduled) {\n\t\t\tsetRendering(false);\n\t\t}\n\t}\n\n\tfunction _cleanUpMergedNodes() {\n\t\tif (_deferredProcessQueue.length === 0) {\n\t\t\tlet mergedNode: Node | undefined;\n\t\t\twhile ((mergedNode = _allMergedNodes.pop())) {\n\t\t\t\tmergedNode.parentNode && mergedNode.parentNode.removeChild(mergedNode);\n\t\t\t}\n\t\t\t_mountOptions.merge = false;\n\t\t}\n\t}\n\n\tfunction _runProcessQueue() {\n\t\tlet item: DetachApplication | AttachApplication | ProcessItem | undefined;\n\t\twhile ((item = _processQueue.pop())) {\n\t\t\tif (isAttachApplication(item)) {\n\t\t\t\titem.instance && _applicationQueue.push(item as any);\n\t\t\t} else {\n\t\t\t\tconst { current, next, meta } = item;\n\t\t\t\t_process(current || EMPTY_ARRAY, next || EMPTY_ARRAY, meta);\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction _runDomInstructionQueue(): void {\n\t\t_applicationQueue.reverse();\n\t\tlet item: ApplicationInstruction | undefined;\n\t\twhile ((item = _applicationQueue.pop())) {\n\t\t\tif (item.type === 'create') {\n\t\t\t\tconst {\n\t\t\t\t\tparentDomNode,\n\t\t\t\t\tnext,\n\t\t\t\t\tnext: { domNode, merged, requiresInsertBefore, node }\n\t\t\t\t} = item;\n\n\t\t\t\tprocessProperties(next, { properties: {} });\n\t\t\t\trunDeferredProperties(next);\n\t\t\t\tif (!merged) {\n\t\t\t\t\tlet insertBefore: any;\n\t\t\t\t\tif (requiresInsertBefore) {\n\t\t\t\t\t\tinsertBefore = findInsertBefore(next);\n\t\t\t\t\t} else if (_insertBeforeMap) {\n\t\t\t\t\t\tinsertBefore = _insertBeforeMap.get(next);\n\t\t\t\t\t}\n\t\t\t\t\tparentDomNode.insertBefore(domNode!, insertBefore);\n\t\t\t\t\tif (isDomVNode(next.node) && next.node.onAttach) {\n\t\t\t\t\t\tnext.node.onAttach();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif ((domNode as HTMLElement).tagName === 'OPTION' && domNode!.parentElement) {\n\t\t\t\t\tsetValue(domNode!.parentElement);\n\t\t\t\t}\n\t\t\t\tconst { enterAnimation, enterAnimationActive } = node.properties;\n\t\t\t\tif (_mountOptions.transition && enterAnimation && enterAnimation !== true) {\n\t\t\t\t\t_mountOptions.transition.enter(domNode as HTMLElement, enterAnimation, enterAnimationActive);\n\t\t\t\t}\n\t\t\t\tconst owningWrapper = _nodeToWrapperMap.get(next.node);\n\t\t\t\tif (owningWrapper && node.properties.key != null) {\n\t\t\t\t\tif (owningWrapper.instance) {\n\t\t\t\t\t\tconst instanceData = widgetInstanceMap.get(owningWrapper.instance);\n\t\t\t\t\t\tinstanceData && instanceData.nodeHandler.add(domNode as HTMLElement, `${node.properties.key}`);\n\t\t\t\t\t} else {\n\t\t\t\t\t\taddNodeToMap(owningWrapper.id, node.properties.key, domNode as HTMLElement);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\titem.next.inserted = true;\n\t\t\t} else if (item.type === 'update') {\n\t\t\t\tconst {\n\t\t\t\t\tnext,\n\t\t\t\t\tnext: { domNode },\n\t\t\t\t\tcurrent,\n\t\t\t\t\tcurrent: { domNode: currentDomNode }\n\t\t\t\t} = item;\n\t\t\t\tif (isTextNode(domNode) && isTextNode(currentDomNode) && domNode !== currentDomNode) {\n\t\t\t\t\tcurrentDomNode.parentNode && currentDomNode.parentNode.replaceChild(domNode, currentDomNode);\n\t\t\t\t} else {\n\t\t\t\t\tconst previousProperties = buildPreviousProperties(domNode, current);\n\t\t\t\t\tprocessProperties(next, previousProperties);\n\t\t\t\t\trunDeferredProperties(next);\n\t\t\t\t}\n\t\t\t} else if (item.type === 'delete') {\n\t\t\t\tconst { current } = item;\n\t\t\t\tconst { exitAnimation, exitAnimationActive } = current.node.properties;\n\t\t\t\tif (_mountOptions.transition && exitAnimation && exitAnimation !== true) {\n\t\t\t\t\t_mountOptions.transition.exit(current.domNode as HTMLElement, exitAnimation, exitAnimationActive);\n\t\t\t\t} else {\n\t\t\t\t\tcurrent.domNode!.parentNode!.removeChild(current.domNode!);\n\t\t\t\t}\n\t\t\t} else if (item.type === 'attach') {\n\t\t\t\tconst { instance, attached } = item;\n\t\t\t\tconst instanceData = widgetInstanceMap.get(instance);\n\t\t\t\tif (instanceData) {\n\t\t\t\t\tinstanceData.nodeHandler.addRoot();\n\t\t\t\t\tattached && instanceData.onAttach();\n\t\t\t\t}\n\t\t\t} else if (item.type === 'detach') {\n\t\t\t\tif (item.current.instance) {\n\t\t\t\t\tconst instanceData = widgetInstanceMap.get(item.current.instance);\n\t\t\t\t\tinstanceData && instanceData.onDetach();\n\t\t\t\t}\n\t\t\t\titem.current.instance = undefined;\n\t\t\t}\n\t\t}\n\t\tif (_deferredProcessQueue.length === 0) {\n\t\t\t_nodeToWrapperMap = new WeakMap();\n\t\t}\n\t}\n\n\tfunction _processMergeNodes(next: DNodeWrapper, mergeNodes: Node[]) {\n\t\tconst { merge } = _mountOptions;\n\t\tif (merge && mergeNodes.length) {\n\t\t\tif (isVNodeWrapper(next)) {\n\t\t\t\tlet {\n\t\t\t\t\tnode: { tag }\n\t\t\t\t} = next;\n\t\t\t\tfor (let i = 0; i < mergeNodes.length; i++) {\n\t\t\t\t\tconst domElement = mergeNodes[i] as Element;\n\t\t\t\t\tconst tagName = domElement.tagName || '';\n\t\t\t\t\tif (tag.toUpperCase() === tagName.toUpperCase()) {\n\t\t\t\t\t\tconst mergeNodeIndex = _allMergedNodes.indexOf(domElement);\n\t\t\t\t\t\tif (mergeNodeIndex !== -1) {\n\t\t\t\t\t\t\t_allMergedNodes.splice(mergeNodeIndex, 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmergeNodes.splice(i, 1);\n\t\t\t\t\t\tnext.domNode = domElement;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tnext.mergeNodes = mergeNodes;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction distinguishableCheck(childNodes: DNodeWrapper[], index: number) {\n\t\tconst parentWNodeWrapper = getWNodeWrapper(childNodes[index].owningId);\n\t\tcheckDistinguishable(childNodes, index, parentWNodeWrapper);\n\t}\n\n\tfunction createKeyMap(wrappers: DNodeWrapper[]): (string | number)[] | false {\n\t\tconst keys: (string | number)[] = [];\n\t\tfor (let i = 0; i < wrappers.length; i++) {\n\t\t\tconst wrapper = wrappers[i];\n\t\t\tif (wrapper.node.properties.key != null) {\n\t\t\t\tkeys.push(wrapper.node.properties.key);\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn keys;\n\t}\n\n\tfunction _process(current: DNodeWrapper[], next: DNodeWrapper[], meta: ProcessMeta = {}): void {\n\t\tlet { mergeNodes = [], oldIndex = 0, newIndex = 0 } = meta;\n\t\tconst currentLength = current.length;\n\t\tconst nextLength = next.length;\n\t\tconst hasPreviousSiblings = currentLength > 1 || (currentLength > 0 && currentLength < nextLength);\n\t\tlet instructions: Instruction[] = [];\n\t\tlet replace = false;\n\t\tif (oldIndex === 0 && newIndex === 0 && currentLength) {\n\t\t\tconst currentKeys = createKeyMap(current);\n\t\t\tif (currentKeys) {\n\t\t\t\tconst nextKeys = createKeyMap(next);\n\t\t\t\tif (nextKeys) {\n\t\t\t\t\tfor (let i = 0; i < currentKeys.length; i++) {\n\t\t\t\t\t\tif (nextKeys.indexOf(currentKeys[i]) !== -1) {\n\t\t\t\t\t\t\tinstructions = [];\n\t\t\t\t\t\t\treplace = false;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treplace = true;\n\t\t\t\t\t\tinstructions.push({ current: current[i], next: undefined });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (replace || (currentLength === 0 && !_mountOptions.merge)) {\n\t\t\tfor (let i = 0; i < next.length; i++) {\n\t\t\t\tinstructions.push({ current: undefined, next: next[i] });\n\t\t\t}\n\t\t} else {\n\t\t\tif (newIndex < nextLength) {\n\t\t\t\tlet currentWrapper = oldIndex < currentLength ? current[oldIndex] : undefined;\n\t\t\t\tconst nextWrapper = next[newIndex];\n\t\t\t\tnextWrapper.hasPreviousSiblings = hasPreviousSiblings;\n\n\t\t\t\t_processMergeNodes(nextWrapper, mergeNodes);\n\n\t\t\t\tif (currentWrapper && same(currentWrapper, nextWrapper)) {\n\t\t\t\t\toldIndex++;\n\t\t\t\t\tnewIndex++;\n\t\t\t\t\tif (isVNodeWrapper(currentWrapper) && isVNodeWrapper(nextWrapper)) {\n\t\t\t\t\t\tnextWrapper.inserted = currentWrapper.inserted;\n\t\t\t\t\t}\n\t\t\t\t\tinstructions.push({ current: currentWrapper, next: nextWrapper });\n\t\t\t\t} else if (!currentWrapper || findIndexOfChild(current, nextWrapper, oldIndex + 1) === -1) {\n\t\t\t\t\thas('dojo-debug') && current.length && distinguishableCheck(next, newIndex);\n\t\t\t\t\tinstructions.push({ current: undefined, next: nextWrapper });\n\t\t\t\t\tnewIndex++;\n\t\t\t\t} else if (findIndexOfChild(next, currentWrapper, newIndex + 1) === -1) {\n\t\t\t\t\thas('dojo-debug') && distinguishableCheck(current, oldIndex);\n\t\t\t\t\tinstructions.push({ current: currentWrapper, next: undefined });\n\t\t\t\t\toldIndex++;\n\t\t\t\t} else {\n\t\t\t\t\thas('dojo-debug') && distinguishableCheck(next, newIndex);\n\t\t\t\t\thas('dojo-debug') && distinguishableCheck(current, oldIndex);\n\t\t\t\t\tinstructions.push({ current: currentWrapper, next: undefined });\n\t\t\t\t\tinstructions.push({ current: undefined, next: nextWrapper });\n\t\t\t\t\toldIndex++;\n\t\t\t\t\tnewIndex++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (newIndex < nextLength) {\n\t\t\t\t_processQueue.push({ current, next, meta: { mergeNodes, oldIndex, newIndex } });\n\t\t\t}\n\t\t\tif (currentLength > oldIndex && newIndex >= nextLength) {\n\t\t\t\tfor (let i = oldIndex; i < currentLength; i++) {\n\t\t\t\t\thas('dojo-debug') && distinguishableCheck(current, i);\n\t\t\t\t\tinstructions.push({ current: current[i], next: undefined });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (let i = 0; i < instructions.length; i++) {\n\t\t\tconst result = _processOne(instructions[i]);\n\t\t\tif (result === false) {\n\t\t\t\tif (_mountOptions.merge && mergeNodes.length) {\n\t\t\t\t\tif (newIndex < nextLength) {\n\t\t\t\t\t\t_processQueue.pop();\n\t\t\t\t\t}\n\t\t\t\t\t_processQueue.push({ next, current, meta });\n\t\t\t\t\t_deferredProcessQueue = _processQueue;\n\t\t\t\t\t_processQueue = [];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst { widget, item, dom } = result;\n\t\t\twidget && _processQueue.push(widget);\n\t\t\titem && _processQueue.push(item);\n\t\t\tdom && _applicationQueue.push(dom);\n\t\t}\n\t}\n\n\tfunction _processOne({ current, next }: Instruction): ProcessResult | false {\n\t\tif (current !== next) {\n\t\t\tif (!current && next) {\n\t\t\t\tif (isVNodeWrapper(next)) {\n\t\t\t\t\treturn _createDom({ next });\n\t\t\t\t} else {\n\t\t\t\t\treturn _createWidget({ next });\n\t\t\t\t}\n\t\t\t} else if (current && next) {\n\t\t\t\tif (isVNodeWrapper(current) && isVNodeWrapper(next)) {\n\t\t\t\t\treturn _updateDom({ current, next });\n\t\t\t\t} else if (isWNodeWrapper(current) && isWNodeWrapper(next)) {\n\t\t\t\t\treturn _updateWidget({ current, next });\n\t\t\t\t}\n\t\t\t} else if (current && !next) {\n\t\t\t\tif (isVNodeWrapper(current)) {\n\t\t\t\t\treturn _removeDom({ current });\n\t\t\t\t} else if (isWNodeWrapper(current)) {\n\t\t\t\t\treturn _removeWidget({ current });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn {};\n\t}\n\n\tfunction createWidgetOptions(id: string, widgetId: string, middleware?: any) {\n\t\treturn {\n\t\t\tid,\n\t\t\tproperties: () => {\n\t\t\t\tconst widgetMeta = widgetMetaMap.get(widgetId);\n\t\t\t\tif (widgetMeta) {\n\t\t\t\t\twidgetMeta.propertiesCalled = true;\n\t\t\t\t\treturn { ...widgetMeta.properties };\n\t\t\t\t}\n\t\t\t\treturn {};\n\t\t\t},\n\t\t\tchildren: () => {\n\t\t\t\tconst widgetMeta = widgetMetaMap.get(widgetId);\n\t\t\t\tif (widgetMeta) {\n\t\t\t\t\treturn widgetMeta.children;\n\t\t\t\t}\n\t\t\t\treturn [];\n\t\t\t},\n\t\t\tmiddleware\n\t\t};\n\t}\n\n\tfunction resolveMiddleware(\n\t\tmiddlewares: any,\n\t\tid: string,\n\t\tmiddlewareIds: string[] = []\n\t): { middlewares: any; ids: string[] } {\n\t\tconst keys = Object.keys(middlewares);\n\t\tconst results: any = {};\n\t\tconst uniqueId = `${id}-${metaId++}`;\n\t\tfor (let i = 0; i < keys.length; i++) {\n\t\t\tconst middleware = middlewares[keys[i]]();\n\t\t\tconst payload = createWidgetOptions(uniqueId, id);\n\t\t\tif (middleware.middlewares) {\n\t\t\t\tconst { middlewares: resolvedMiddleware } = resolveMiddleware(\n\t\t\t\t\tmiddleware.middlewares,\n\t\t\t\t\tid,\n\t\t\t\t\tmiddlewareIds\n\t\t\t\t);\n\t\t\t\tpayload.middleware = resolvedMiddleware;\n\t\t\t\tresults[keys[i]] = middleware.callback(payload);\n\t\t\t} else {\n\t\t\t\tresults[keys[i]] = middleware.callback(payload);\n\t\t\t}\n\t\t}\n\t\tmiddlewareIds.push(uniqueId);\n\t\treturn { middlewares: results, ids: middlewareIds };\n\t}\n\n\tfunction _createWidget({ next }: CreateWidgetInstruction): ProcessResult | false {\n\t\tlet {\n\t\t\tnode: { widgetConstructor }\n\t\t} = next;\n\t\tlet { registry } = _mountOptions;\n\t\tlet Constructor = next.registryItem || widgetConstructor;\n\t\tif (!isWidget(Constructor)) {\n\t\t\tresolveRegistryItem(next);\n\t\t\tif (!next.registryItem) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tConstructor = next.registryItem;\n\t\t}\n\n\t\tlet rendered: RenderResult;\n\t\tlet invalidate: () => void;\n\t\tnext.properties = { ...next.node.properties };\n\t\tnext.id = next.id || `${wrapperId++}`;\n\t\t_idToWrapperMap.set(next.id, next);\n\t\tconst { id, depth, order } = next;\n\t\tif (!isWidgetBaseConstructor(Constructor)) {\n\t\t\tlet widgetMeta = widgetMetaMap.get(id);\n\t\t\tif (!widgetMeta) {\n\t\t\t\tinvalidate = () => {\n\t\t\t\t\tconst widgetMeta = widgetMetaMap.get(id);\n\t\t\t\t\tif (widgetMeta) {\n\t\t\t\t\t\twidgetMeta.dirty = true;\n\t\t\t\t\t\tif (!widgetMeta.rendering && _idToWrapperMap.has(id)) {\n\t\t\t\t\t\t\t_invalidationQueue.push({ id, depth, order });\n\t\t\t\t\t\t\t_schedule();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\twidgetMeta = {\n\t\t\t\t\twidgetName: Constructor.name || 'unknown',\n\t\t\t\t\tmountNode: _mountOptions.domNode,\n\t\t\t\t\tdirty: false,\n\t\t\t\t\tinvalidator: invalidate,\n\t\t\t\t\tproperties: wrapFunctionProperties(id, next.node.properties),\n\t\t\t\t\toriginalProperties: { ...next.node.properties },\n\t\t\t\t\tchildren: next.node.children,\n\t\t\t\t\tdeferRefs: 0,\n\t\t\t\t\trendering: true,\n\t\t\t\t\tmiddleware: {},\n\t\t\t\t\tmiddlewareIds: [],\n\t\t\t\t\tregistry: _mountOptions.registry,\n\t\t\t\t\tpropertiesCalled: false\n\t\t\t\t};\n\n\t\t\t\twidgetMetaMap.set(next.id, widgetMeta);\n\t\t\t\tif ((Constructor as any).middlewares && Object.keys((Constructor as any).middlewares).length) {\n\t\t\t\t\tconst { middlewares, ids } = resolveMiddleware((Constructor as any).middlewares, id);\n\t\t\t\t\twidgetMeta.middleware = middlewares;\n\t\t\t\t\twidgetMeta.middlewareIds = ids;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tinvalidate = widgetMeta.invalidator;\n\t\t\t}\n\n\t\t\trendered = Constructor(createWidgetOptions(id, id, widgetMeta.middleware));\n\t\t\twidgetMeta.rendering = false;\n\t\t\twidgetMeta.propertiesCalled = false;\n\t\t\tif (widgetMeta.deferRefs > 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} else {\n\t\t\tlet instance = new Constructor() as WidgetBaseInterface & {\n\t\t\t\tinvalidate: any;\n\t\t\t\tregistry: any;\n\t\t\t};\n\t\t\tinstance.registry.base = registry;\n\t\t\tconst instanceData = widgetInstanceMap.get(instance)!;\n\t\t\tinvalidate = () => {\n\t\t\t\tinstanceData.dirty = true;\n\t\t\t\tif (!instanceData.rendering && _idToWrapperMap.has(id)) {\n\t\t\t\t\t_invalidationQueue.push({ id, depth, order });\n\t\t\t\t\t_schedule();\n\t\t\t\t}\n\t\t\t};\n\t\t\tinstanceData.invalidate = invalidate;\n\t\t\tinstanceData.rendering = true;\n\t\t\tinstance.__setProperties__(next.node.properties);\n\t\t\tinstance.__setChildren__(next.node.children);\n\t\t\tnext.instance = instance;\n\t\t\trendered = instance.__render__();\n\t\t\tinstanceData.rendering = false;\n\t\t}\n\n\t\tlet children: DNodeWrapper[] | undefined;\n\t\tif (rendered) {\n\t\t\trendered = Array.isArray(rendered) ? rendered : [rendered];\n\t\t\tchildren = renderedToWrapper(rendered, next, null);\n\t\t\t_idToChildrenWrappers.set(id, children);\n\t\t}\n\n\t\tif (!parentInvalidate && !(Constructor as any).isWNodeWrapper) {\n\t\t\tparentInvalidate = invalidate;\n\t\t}\n\n\t\treturn {\n\t\t\titem: {\n\t\t\t\tnext: children,\n\t\t\t\tmeta: { mergeNodes: next.mergeNodes }\n\t\t\t},\n\t\t\twidget: { type: 'attach', instance: next.instance, id, attached: true }\n\t\t};\n\t}\n\n\tfunction _updateWidget({ current, next }: UpdateWidgetInstruction): ProcessResult {\n\t\tcurrent = getWNodeWrapper(current.id) || current;\n\t\tconst { instance, domNode, hasAnimations, id } = current;\n\t\tlet {\n\t\t\tnode: { widgetConstructor }\n\t\t} = next;\n\t\tconst Constructor = next.registryItem || widgetConstructor;\n\n\t\tif (!isWidget(Constructor)) {\n\t\t\treturn {};\n\t\t}\n\t\tlet rendered: RenderResult;\n\t\tlet processResult: ProcessResult = {};\n\t\tlet didRender = false;\n\t\tlet currentChildren = _idToChildrenWrappers.get(current.id);\n\t\tnext.hasAnimations = hasAnimations;\n\t\tnext.id = id;\n\t\tnext.properties = { ...next.node.properties };\n\t\t_wrapperSiblingMap.delete(current);\n\t\tif (domNode && domNode.parentNode) {\n\t\t\tnext.domNode = domNode;\n\t\t}\n\n\t\tif (!isWidgetBaseConstructor(Constructor)) {\n\t\t\tconst widgetMeta = widgetMetaMap.get(id);\n\t\t\tif (widgetMeta) {\n\t\t\t\twidgetMeta.originalProperties = { ...next.properties };\n\t\t\t\twidgetMeta.properties = wrapFunctionProperties(id, widgetMeta.originalProperties);\n\t\t\t\twidgetMeta.children = next.node.children;\n\t\t\t\twidgetMeta.rendering = true;\n\t\t\t\tconst customProperties = runDiffs(widgetMeta, current.properties, widgetMeta.originalProperties);\n\t\t\t\twidgetMeta.properties = { ...widgetMeta.properties, ...customProperties };\n\t\t\t\tif (current.node.children.length > 0 || next.node.children.length > 0) {\n\t\t\t\t\twidgetMeta.dirty = true;\n\t\t\t\t}\n\t\t\t\tif (!widgetMeta.dirty) {\n\t\t\t\t\tpropertiesDiff(\n\t\t\t\t\t\tcurrent.properties,\n\t\t\t\t\t\tnext.properties,\n\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\twidgetMeta.dirty = true;\n\t\t\t\t\t\t},\n\t\t\t\t\t\twidgetMeta.customDiffProperties ? [...widgetMeta.customDiffProperties.values()] : []\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tif (widgetMeta.dirty) {\n\t\t\t\t\t_idToChildrenWrappers.delete(id);\n\t\t\t\t\tdidRender = true;\n\t\t\t\t\trendered = Constructor(createWidgetOptions(id, id, widgetMeta.middleware));\n\t\t\t\t\twidgetMeta.dirty = false;\n\t\t\t\t\tif (widgetMeta.deferRefs > 0) {\n\t\t\t\t\t\trendered = null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\twidgetMeta.rendering = false;\n\t\t\t\twidgetMeta.propertiesCalled = false;\n\t\t\t}\n\t\t} else {\n\t\t\tconst instanceData = widgetInstanceMap.get(instance!)!;\n\t\t\tnext.instance = instance;\n\t\t\tinstanceData.rendering = true;\n\t\t\tinstance!.__setProperties__(next.node.properties);\n\t\t\tinstance!.__setChildren__(next.node.children);\n\t\t\tif (instanceData.dirty) {\n\t\t\t\tdidRender = true;\n\t\t\t\t_idToChildrenWrappers.delete(id);\n\t\t\t\trendered = instance!.__render__();\n\t\t\t}\n\t\t\tinstanceData.rendering = false;\n\t\t}\n\t\t_idToWrapperMap.set(next.id, next);\n\t\tprocessResult.widget = { type: 'attach', instance, id, attached: false };\n\n\t\tlet children: DNodeWrapper[] | undefined;\n\t\tif (rendered) {\n\t\t\trendered = Array.isArray(rendered) ? rendered : [rendered];\n\t\t\tchildren = renderedToWrapper(rendered, next, current);\n\t\t\t_idToChildrenWrappers.set(id, children);\n\t\t}\n\n\t\tif (didRender) {\n\t\t\tprocessResult.item = {\n\t\t\t\tcurrent: currentChildren,\n\t\t\t\tnext: children,\n\t\t\t\tmeta: {}\n\t\t\t};\n\t\t}\n\t\treturn processResult;\n\t}\n\n\tfunction _removeWidget({ current }: RemoveWidgetInstruction): ProcessResult {\n\t\tcurrent = getWNodeWrapper(current.id) || current;\n\t\t_idToWrapperMap.delete(current.id);\n\t\tconst meta = widgetMetaMap.get(current.id);\n\t\tlet currentChildren = _idToChildrenWrappers.get(current.id);\n\t\t_idToChildrenWrappers.delete(current.id);\n\t\t_wrapperSiblingMap.delete(current);\n\t\tlet processResult: ProcessResult = {\n\t\t\titem: {\n\t\t\t\tcurrent: currentChildren,\n\t\t\t\tmeta: {}\n\t\t\t}\n\t\t};\n\t\tif (meta) {\n\t\t\tmeta.registryHandler && meta.registryHandler.destroy();\n\t\t\tdestroyHandles(meta);\n\t\t\twidgetMetaMap.delete(current.id);\n\t\t} else {\n\t\t\tprocessResult.widget = { type: 'detach', current, instance: current.instance };\n\t\t}\n\n\t\treturn processResult;\n\t}\n\n\tfunction findDomNodeOnParentWrapper(id: string): string | undefined {\n\t\tconst children = _idToChildrenWrappers.get(id) || [];\n\t\tfor (let i = 0; i < children.length; i++) {\n\t\t\tconst child = children[i];\n\t\t\tif (child.domNode) {\n\t\t\t\treturn child.id;\n\t\t\t}\n\t\t\tconst childId = findDomNodeOnParentWrapper(child.id);\n\t\t\tif (childId) {\n\t\t\t\treturn childId;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction _createDom({ next }: CreateDomInstruction): ProcessResult {\n\t\tconst parentDomNode = findParentDomNode(next)!;\n\t\tconst isVirtual = isVirtualWrapper(next);\n\t\tconst isBody = isBodyWrapper(next);\n\t\tconst isHead = isHeadWrapper(next);\n\t\tlet mergeNodes: Node[] = [];\n\t\tnext.id = `${wrapperId++}`;\n\t\t_idToWrapperMap.set(next.id, next);\n\t\tif (!next.domNode) {\n\t\t\tif ((next.node as any).domNode) {\n\t\t\t\tnext.domNode = (next.node as any).domNode;\n\t\t\t} else {\n\t\t\t\tif (next.node.tag === 'svg') {\n\t\t\t\t\tnext.namespace = NAMESPACE_SVG;\n\t\t\t\t}\n\t\t\t\tif (isBody) {\n\t\t\t\t\tnext.domNode = global.document.body;\n\t\t\t\t} else if (isHead) {\n\t\t\t\t\tnext.domNode = global.document.head;\n\t\t\t\t} else if (next.node.tag && !isVirtual) {\n\t\t\t\t\tif (next.namespace) {\n\t\t\t\t\t\tnext.domNode = global.document.createElementNS(next.namespace, next.node.tag);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnext.domNode = global.document.createElement(next.node.tag);\n\t\t\t\t\t}\n\t\t\t\t} else if (next.node.text != null) {\n\t\t\t\t\tnext.domNode = global.document.createTextNode(next.node.text);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (_insertBeforeMap && _allMergedNodes.length) {\n\t\t\t\tif (parentDomNode === _allMergedNodes[0].parentNode) {\n\t\t\t\t\t_insertBeforeMap.set(next, _allMergedNodes[0]);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (_mountOptions.merge) {\n\t\t\tnext.merged = true;\n\t\t\tif (isTextNode(next.domNode)) {\n\t\t\t\tif (next.domNode.data !== next.node.text) {\n\t\t\t\t\t_allMergedNodes = [next.domNode, ..._allMergedNodes];\n\t\t\t\t\tnext.domNode = global.document.createTextNode(next.node.text);\n\t\t\t\t\tnext.merged = false;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tmergeNodes = arrayFrom(next.domNode.childNodes);\n\t\t\t\t_allMergedNodes = [..._allMergedNodes, ...mergeNodes];\n\t\t\t}\n\t\t}\n\t\tlet children: DNodeWrapper[] | undefined;\n\t\tif (next.domNode || isVirtual) {\n\t\t\tif (next.node.children && next.node.children.length) {\n\t\t\t\tchildren = renderedToWrapper(next.node.children, next, null);\n\t\t\t\t_idToChildrenWrappers.set(next.id, children);\n\t\t\t}\n\t\t}\n\t\tconst dom: ApplicationInstruction | undefined = isSpecialWrapper(next)\n\t\t\t? undefined\n\t\t\t: {\n\t\t\t\t\tnext: next!,\n\t\t\t\t\tparentDomNode: parentDomNode,\n\t\t\t\t\ttype: 'create'\n\t\t\t  };\n\t\tif (children) {\n\t\t\treturn {\n\t\t\t\titem: {\n\t\t\t\t\tcurrent: [],\n\t\t\t\t\tnext: children,\n\t\t\t\t\tmeta: { mergeNodes }\n\t\t\t\t},\n\t\t\t\tdom,\n\t\t\t\twidget: isVirtual ? { type: 'attach', id: (next as any).id, attached: false } : undefined\n\t\t\t};\n\t\t}\n\t\treturn { dom };\n\t}\n\n\tfunction _updateDom({ current, next }: UpdateDomInstruction): ProcessResult {\n\t\tnext.domNode = current.domNode;\n\t\tnext.namespace = current.namespace;\n\t\tnext.id = current.id;\n\t\tnext.childDomWrapperId = current.childDomWrapperId;\n\t\tlet children: DNodeWrapper[] | undefined;\n\t\tlet currentChildren = _idToChildrenWrappers.get(next.id);\n\t\tif (next.node.text != null && next.node.text !== current.node.text) {\n\t\t\tnext.domNode = global.document.createTextNode(next.node.text);\n\t\t} else if (next.node.children) {\n\t\t\tchildren = renderedToWrapper(next.node.children, next, current);\n\t\t\t_idToChildrenWrappers.set(next.id, children);\n\t\t}\n\t\t_wrapperSiblingMap.delete(current);\n\t\t_idToWrapperMap.set(next.id, next);\n\t\treturn {\n\t\t\titem: {\n\t\t\t\tcurrent: currentChildren,\n\t\t\t\tnext: children,\n\t\t\t\tmeta: {}\n\t\t\t},\n\t\t\tdom: { type: 'update', next, current }\n\t\t};\n\t}\n\n\tfunction _removeDom({ current }: RemoveDomInstruction): ProcessResult {\n\t\tconst isSpecial = isSpecialWrapper(current);\n\t\tconst children = _idToChildrenWrappers.get(current.id);\n\t\t_idToChildrenWrappers.delete(current.id);\n\t\t_idToWrapperMap.delete(current.id);\n\t\t_wrapperSiblingMap.delete(current);\n\t\tif (current.node.properties.key) {\n\t\t\tconst widgetMeta = widgetMetaMap.get(current.owningId);\n\t\t\tconst parentWrapper = getWNodeWrapper(current.owningId);\n\t\t\tif (widgetMeta) {\n\t\t\t\twidgetMeta.nodeMap && widgetMeta.nodeMap.delete(current.node.properties.key);\n\t\t\t} else if (parentWrapper && parentWrapper.instance) {\n\t\t\t\tconst instanceData = widgetInstanceMap.get(parentWrapper.instance);\n\t\t\t\tinstanceData && instanceData.nodeHandler.remove(current.node.properties.key);\n\t\t\t}\n\t\t}\n\t\tif (current.hasAnimations || isSpecial) {\n\t\t\treturn {\n\t\t\t\titem: { current: children, meta: {} },\n\t\t\t\tdom: isSpecial ? undefined : { type: 'delete', current }\n\t\t\t};\n\t\t}\n\n\t\tif (children) {\n\t\t\t_deferredRenderCallbacks.push(() => {\n\t\t\t\tlet wrappers = children || [];\n\t\t\t\tlet wrapper: DNodeWrapper | undefined;\n\t\t\t\tlet specialIds = [];\n\t\t\t\twhile ((wrapper = wrappers.pop())) {\n\t\t\t\t\tif (isWNodeWrapper(wrapper)) {\n\t\t\t\t\t\twrapper = getWNodeWrapper(wrapper.id) || wrapper;\n\t\t\t\t\t\tif (wrapper.instance) {\n\t\t\t\t\t\t\tconst instanceData = widgetInstanceMap.get(wrapper.instance);\n\t\t\t\t\t\t\tinstanceData && instanceData.onDetach();\n\t\t\t\t\t\t\twrapper.instance = undefined;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst meta = widgetMetaMap.get(wrapper.id);\n\t\t\t\t\t\t\tif (meta) {\n\t\t\t\t\t\t\t\tmeta.registryHandler && meta.registryHandler.destroy();\n\t\t\t\t\t\t\t\tdestroyHandles(meta);\n\t\t\t\t\t\t\t\twidgetMetaMap.delete(wrapper.id);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tlet wrapperChildren = _idToChildrenWrappers.get(wrapper.id);\n\t\t\t\t\tif (wrapperChildren) {\n\t\t\t\t\t\twrappers.push(...wrapperChildren);\n\t\t\t\t\t}\n\t\t\t\t\tif (isBodyWrapper(wrapper) || isHeadWrapper(wrapper)) {\n\t\t\t\t\t\tspecialIds.push(wrapper.id);\n\t\t\t\t\t} else if (specialIds.indexOf(wrapper.parentId) !== -1) {\n\t\t\t\t\t\tif (isWNodeWrapper(wrapper) || isVirtualWrapper(wrapper)) {\n\t\t\t\t\t\t\tspecialIds.push(wrapper.id);\n\t\t\t\t\t\t} else if (wrapper.domNode && wrapper.domNode.parentNode) {\n\t\t\t\t\t\t\twrapper.domNode.parentNode.removeChild(wrapper.domNode);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t_idToChildrenWrappers.delete(wrapper.id);\n\t\t\t\t\t_idToWrapperMap.delete(wrapper.id);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\treturn {\n\t\t\tdom: { type: 'delete', current }\n\t\t};\n\t}\n\n\treturn {\n\t\tmount,\n\t\tunmount,\n\t\tinvalidate\n\t};\n}\n\nexport default renderer;\n","import has from '../core/has';\n\nexport interface ObjectAssign {\n\t/**\n\t * Copy the values of all of the enumerable own properties from one or more source objects to a\n\t * target object. Returns the target object.\n\t * @param target The target object to copy to.\n\t * @param source The source object from which to copy properties.\n\t */\n\t<T, U>(target: T, source: U): T & U;\n\n\t/**\n\t * Copy the values of all of the enumerable own properties from one or more source objects to a\n\t * target object. Returns the target object.\n\t * @param target The target object to copy to.\n\t * @param source1 The first source object from which to copy properties.\n\t * @param source2 The second source object from which to copy properties.\n\t */\n\t<T, U, V>(target: T, source1: U, source2: V): T & U & V;\n\n\t/**\n\t * Copy the values of all of the enumerable own properties from one or more source objects to a\n\t * target object. Returns the target object.\n\t * @param target The target object to copy to.\n\t * @param source1 The first source object from which to copy properties.\n\t * @param source2 The second source object from which to copy properties.\n\t * @param source3 The third source object from which to copy properties.\n\t */\n\t<T, U, V, W>(target: T, source1: U, source2: V, source3: W): T & U & V & W;\n\n\t/**\n\t * Copy the values of all of the enumerable own properties from one or more source objects to a\n\t * target object. Returns the target object.\n\t * @param target The target object to copy to.\n\t * @param sources One or more source objects from which to copy properties\n\t */\n\t(target: object, ...sources: any[]): any;\n}\n\nexport interface ObjectEnteries {\n\t/**\n\t * Returns an array of key/values of the enumerable properties of an object\n\t * @param o Object that contains the properties and methods. This can be an object that you created or an existing Document Object Model (DOM) object.\n\t */\n\t<T extends { [key: string]: any }, K extends keyof T>(o: T): [keyof T, T[K]][];\n\n\t/**\n\t * Returns an array of key/values of the enumerable properties of an object\n\t * @param o Object that contains the properties and methods. This can be an object that you created or an existing Document Object Model (DOM) object.\n\t */\n\t(o: object): [string, any][];\n}\n\nexport interface ObjectGetOwnPropertyDescriptors {\n\t<T>(o: T): { [K in keyof T]: PropertyDescriptor };\n\t(o: any): { [key: string]: PropertyDescriptor };\n}\n\nexport interface ObjectValues {\n\t/**\n\t * Returns an array of values of the enumerable properties of an object\n\t * @param o Object that contains the properties and methods. This can be an object that you created or an existing Document Object Model (DOM) object.\n\t */\n\t<T>(o: { [s: string]: T }): T[];\n\n\t/**\n\t * Returns an array of values of the enumerable properties of an object\n\t * @param o Object that contains the properties and methods. This can be an object that you created or an existing Document Object Model (DOM) object.\n\t */\n\t(o: object): any[];\n}\n\nexport let assign: ObjectAssign;\n\n/**\n * Gets the own property descriptor of the specified object.\n * An own property descriptor is one that is defined directly on the object and is not\n * inherited from the object's prototype.\n * @param o Object that contains the property.\n * @param p Name of the property.\n */\nexport let getOwnPropertyDescriptor: <T, K extends keyof T>(o: T, propertyKey: K) => PropertyDescriptor | undefined;\n\n/**\n * Returns the names of the own properties of an object. The own properties of an object are those that are defined directly\n * on that object, and are not inherited from the object's prototype. The properties of an object include both fields (objects) and functions.\n * @param o Object that contains the own properties.\n */\nexport let getOwnPropertyNames: (o: any) => string[];\n\n/**\n * Returns an array of all symbol properties found directly on object o.\n * @param o Object to retrieve the symbols from.\n */\nexport let getOwnPropertySymbols: (o: any) => symbol[];\n\n/**\n * Returns true if the values are the same value, false otherwise.\n * @param value1 The first value.\n * @param value2 The second value.\n */\nexport let is: (value1: any, value2: any) => boolean;\n\n/**\n * Returns the names of the enumerable properties and methods of an object.\n * @param o Object that contains the properties and methods. This can be an object that you created or an existing Document Object Model (DOM) object.\n */\nexport let keys: (o: object) => string[];\n\n/* ES7 Object static methods */\n\nexport let getOwnPropertyDescriptors: ObjectGetOwnPropertyDescriptors;\n\nexport let entries: ObjectEnteries;\n\nexport let values: ObjectValues;\n\nif (!has('es6-object')) {\n\tconst keys = Object.keys.bind(Object);\n\tObject.keys = function symbolAwareKeys(o: object): string[] {\n\t\treturn keys(o).filter((key) => !Boolean(key.match(/^@@.+/)));\n\t};\n\n\tObject.assign = function assign(target: any, ...sources: any[]) {\n\t\tif (target == null) {\n\t\t\t// TypeError if undefined or null\n\t\t\tthrow new TypeError('Cannot convert undefined or null to object');\n\t\t}\n\n\t\tconst to = Object(target);\n\t\tsources.forEach((nextSource) => {\n\t\t\tif (nextSource) {\n\t\t\t\t// Skip over if undefined or null\n\t\t\t\tkeys(nextSource).forEach((nextKey) => {\n\t\t\t\t\tto[nextKey] = nextSource[nextKey];\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\treturn to;\n\t};\n\n\tconst getOwnPropertyNames = Object.getOwnPropertyNames.bind(Object);\n\tObject.getOwnPropertyNames = function symbolAwareGetOwnPropertyNames(o: any): string[] {\n\t\treturn getOwnPropertyNames(o).filter((key) => !Boolean(key.match(/^@@.+/)));\n\t};\n\n\tObject.getOwnPropertySymbols = function getOwnPropertySymbols(o: any): symbol[] {\n\t\treturn getOwnPropertyNames(o)\n\t\t\t.filter((key) => Boolean(key.match(/^@@.+/)))\n\t\t\t.map((key) => Symbol.for(key.substring(2)));\n\t};\n\n\tObject.is = function is(value1: any, value2: any): boolean {\n\t\tif (value1 === value2) {\n\t\t\treturn value1 !== 0 || 1 / value1 === 1 / value2; // -0\n\t\t}\n\t\treturn value1 !== value1 && value2 !== value2; // NaN\n\t};\n}\n\nif (!has('es2017-object')) {\n\tObject.getOwnPropertyDescriptors = function getOwnPropertyDescriptors<T>(\n\t\to: T\n\t): { [P in keyof T]: TypedPropertyDescriptor<T[P]> } & { [x: string]: PropertyDescriptor } {\n\t\treturn Object.getOwnPropertyNames(o).reduce(\n\t\t\t(previous, key) => {\n\t\t\t\tprevious[key] = Object.getOwnPropertyDescriptor(o, key)!;\n\t\t\t\treturn previous;\n\t\t\t},\n\t\t\t{} as { [x: string]: PropertyDescriptor }\n\t\t) as { [P in keyof T]: TypedPropertyDescriptor<T[P]> } & { [x: string]: PropertyDescriptor };\n\t};\n\n\tObject.entries = function entries(o: any): [string, any][] {\n\t\treturn keys(o).map((key) => [key, o[key]] as [string, any]);\n\t};\n\n\tObject.values = function values(o: any): any[] {\n\t\treturn keys(o).map((key) => o[key]);\n\t};\n}\n\nassign = Object.assign;\ngetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\ngetOwnPropertyNames = Object.getOwnPropertyNames;\ngetOwnPropertySymbols = Object.getOwnPropertySymbols;\nis = Object.is;\nkeys = Object.keys;\ngetOwnPropertyDescriptors = Object.getOwnPropertyDescriptors;\nentries = Object.entries;\nvalues = Object.values;\n\nexport default Object;\n","`!has('es6-iterator')`;\nimport { isArrayLike, Iterable, IterableIterator, ShimIterator } from './iterator';\nimport global from './global';\nimport { is as objectIs } from './object';\nimport has from '../core/has';\n`!has('es6-symbol')`;\nimport './Symbol';\n\nexport interface Map<K, V> {\n\t/**\n\t * Deletes all keys and their associated values.\n\t */\n\tclear(): void;\n\n\t/**\n\t * Deletes a given key and its associated value.\n\t *\n\t * @param key The key to delete\n\t * @return true if the key exists, false if it does not\n\t */\n\tdelete(key: K): boolean;\n\n\t/**\n\t * Returns an iterator that yields each key/value pair as an array.\n\t *\n\t * @return An iterator for each key/value pair in the instance.\n\t */\n\tentries(): IterableIterator<[K, V]>;\n\n\t/**\n\t * Executes a given function for each map entry. The function\n\t * is invoked with three arguments: the element value, the\n\t * element key, and the associated Map instance.\n\t *\n\t * @param callbackfn The function to execute for each map entry,\n\t * @param thisArg The value to use for `this` for each execution of the calback\n\t */\n\tforEach(callbackfn: (value: V, key: K, map: Map<K, V>) => void, thisArg?: any): void;\n\n\t/**\n\t * Returns the value associated with a given key.\n\t *\n\t * @param key The key to look up\n\t * @return The value if one exists or undefined\n\t */\n\tget(key: K): V | undefined;\n\n\t/**\n\t * Returns an iterator that yields each key in the map.\n\t *\n\t * @return An iterator containing the instance's keys.\n\t */\n\tkeys(): IterableIterator<K>;\n\n\t/**\n\t * Checks for the presence of a given key.\n\t *\n\t * @param key The key to check for\n\t * @return true if the key exists, false if it does not\n\t */\n\thas(key: K): boolean;\n\n\t/**\n\t * Sets the value associated with a given key.\n\t *\n\t * @param key The key to define a value to\n\t * @param value The value to assign\n\t * @return The Map instance\n\t */\n\tset(key: K, value: V): this;\n\n\t/**\n\t * Returns the number of key / value pairs in the Map.\n\t */\n\treadonly size: number;\n\n\t/**\n\t * Returns an iterator that yields each value in the map.\n\t *\n\t * @return An iterator containing the instance's values.\n\t */\n\tvalues(): IterableIterator<V>;\n\n\t/** Returns an iterable of entries in the map. */\n\t[Symbol.iterator](): IterableIterator<[K, V]>;\n\n\treadonly [Symbol.toStringTag]: string;\n}\n\nexport interface MapConstructor {\n\t/**\n\t * Creates a new Map\n\t *\n\t * @constructor\n\t */\n\tnew (): Map<any, any>;\n\n\t/**\n\t * Creates a new Map\n\t *\n\t * @constructor\n\t *\n\t * @param iterator\n\t * Array or iterator containing two-item tuples used to initially populate the map.\n\t * The first item in each tuple corresponds to the key of the map entry.\n\t * The second item corresponds to the value of the map entry.\n\t */\n\tnew <K, V>(iterator?: [K, V][]): Map<K, V>;\n\n\t/**\n\t * Creates a new Map\n\t *\n\t * @constructor\n\t *\n\t * @param iterator\n\t * Array or iterator containing two-item tuples used to initially populate the map.\n\t * The first item in each tuple corresponds to the key of the map entry.\n\t * The second item corresponds to the value of the map entry.\n\t */\n\tnew <K, V>(iterator: Iterable<[K, V]>): Map<K, V>;\n\n\treadonly prototype: Map<any, any>;\n\n\treadonly [Symbol.species]: MapConstructor;\n}\n\nexport let Map: MapConstructor = global.Map;\n\nif (!has('es6-map')) {\n\tMap = global.Map = class Map<K, V> {\n\t\tprotected readonly _keys: K[] = [];\n\t\tprotected readonly _values: V[] = [];\n\n\t\t/**\n\t\t * An alternative to Array.prototype.indexOf using Object.is\n\t\t * to check for equality. See http://mzl.la/1zuKO2V\n\t\t */\n\t\tprotected _indexOfKey(keys: K[], key: K): number {\n\t\t\tfor (let i = 0, length = keys.length; i < length; i++) {\n\t\t\t\tif (objectIs(keys[i], key)) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn -1;\n\t\t}\n\n\t\tstatic [Symbol.species] = Map;\n\n\t\tconstructor(iterable?: ArrayLike<[K, V]> | Iterable<[K, V]>) {\n\t\t\tif (iterable) {\n\t\t\t\tif (isArrayLike(iterable)) {\n\t\t\t\t\tfor (let i = 0; i < iterable.length; i++) {\n\t\t\t\t\t\tconst value = iterable[i];\n\t\t\t\t\t\tthis.set(value[0], value[1]);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tfor (const value of iterable) {\n\t\t\t\t\t\tthis.set(value[0], value[1]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tget size(): number {\n\t\t\treturn this._keys.length;\n\t\t}\n\n\t\tclear(): void {\n\t\t\tthis._keys.length = this._values.length = 0;\n\t\t}\n\n\t\tdelete(key: K): boolean {\n\t\t\tconst index = this._indexOfKey(this._keys, key);\n\t\t\tif (index < 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tthis._keys.splice(index, 1);\n\t\t\tthis._values.splice(index, 1);\n\t\t\treturn true;\n\t\t}\n\n\t\tentries(): IterableIterator<[K, V]> {\n\t\t\tconst values = this._keys.map(\n\t\t\t\t(key: K, i: number): [K, V] => {\n\t\t\t\t\treturn [key, this._values[i]];\n\t\t\t\t}\n\t\t\t);\n\n\t\t\treturn new ShimIterator(values);\n\t\t}\n\n\t\tforEach(callback: (value: V, key: K, mapInstance: Map<K, V>) => any, context?: {}) {\n\t\t\tconst keys = this._keys;\n\t\t\tconst values = this._values;\n\t\t\tfor (let i = 0, length = keys.length; i < length; i++) {\n\t\t\t\tcallback.call(context, values[i], keys[i], this);\n\t\t\t}\n\t\t}\n\n\t\tget(key: K): V | undefined {\n\t\t\tconst index = this._indexOfKey(this._keys, key);\n\t\t\treturn index < 0 ? undefined : this._values[index];\n\t\t}\n\n\t\thas(key: K): boolean {\n\t\t\treturn this._indexOfKey(this._keys, key) > -1;\n\t\t}\n\n\t\tkeys(): IterableIterator<K> {\n\t\t\treturn new ShimIterator(this._keys);\n\t\t}\n\n\t\tset(key: K, value: V): Map<K, V> {\n\t\t\tlet index = this._indexOfKey(this._keys, key);\n\t\t\tindex = index < 0 ? this._keys.length : index;\n\t\t\tthis._keys[index] = key;\n\t\t\tthis._values[index] = value;\n\t\t\treturn this;\n\t\t}\n\n\t\tvalues(): IterableIterator<V> {\n\t\t\treturn new ShimIterator(this._values);\n\t\t}\n\n\t\t[Symbol.iterator](): IterableIterator<[K, V]> {\n\t\t\treturn this.entries();\n\t\t}\n\n\t\t[Symbol.toStringTag]: 'Map' = 'Map';\n\t};\n}\n\nexport default Map;\n","import Promise from '../shim/Promise';\nimport Map from '../shim/Map';\nimport { Evented, EventObject } from '../core/Evented';\nimport {\n\tConstructor,\n\tInjectorFactory,\n\tInjectorItem,\n\tRegistryLabel,\n\tWidgetBaseConstructor,\n\tWidgetBaseInterface,\n\tESMDefaultWidgetBase,\n\tWidgetBaseConstructorFunction,\n\tESMDefaultWidgetBaseFunction,\n\tCallback,\n\tWNodeFactory,\n\tRenderResult,\n\tWidgetBaseTypes,\n\tDefaultChildrenWNodeFactory,\n\tOptionalWNodeFactory\n} from './interfaces';\n\nexport type RegistryItem =\n\t| WidgetBaseConstructor\n\t| WNodeFactory<any>\n\t| DefaultChildrenWNodeFactory<any>\n\t| OptionalWNodeFactory<any>\n\t| Promise<WidgetBaseConstructor | WNodeFactory<any>>\n\t| WidgetBaseConstructorFunction\n\t| ESMDefaultWidgetBaseFunction;\n\n/**\n * Widget base type\n */\nexport const WIDGET_BASE_TYPE = '__widget_base_type';\n\nexport interface RegistryEventObject extends EventObject<RegistryLabel> {\n\taction: string;\n\titem:\n\t\t| WNodeFactory<any>\n\t\t| DefaultChildrenWNodeFactory<any>\n\t\t| OptionalWNodeFactory<any>\n\t\t| WidgetBaseConstructor\n\t\t| InjectorItem;\n}\n/**\n * Widget Registry Interface\n */\nexport interface RegistryInterface {\n\t/**\n\t * Define a WidgetRegistryItem against a label\n\t *\n\t * @param label The label of the widget to register\n\t * @param registryItem The registry item to define\n\t */\n\tdefine(label: RegistryLabel, registryItem: RegistryItem): void;\n\n\t/**\n\t * Return a RegistryItem for the given label, null if an entry doesn't exist\n\t *\n\t * @param widgetLabel The label of the widget to return\n\t * @returns The RegistryItem for the widgetLabel, `null` if no entry exists\n\t */\n\tget(label: RegistryLabel): WNodeFactory<any> | Callback<any, any, any, RenderResult> | Constructor<any> | null;\n\tget<T extends WNodeFactory<any>>(label: RegistryLabel): T | null;\n\tget<T extends Callback<any, any, any, RenderResult>>(label: RegistryLabel): T | null;\n\tget<T extends WidgetBaseInterface = WidgetBaseInterface>(label: RegistryLabel): Constructor<T> | null;\n\n\t/**\n\t * Returns a boolean if an entry for the label exists\n\t *\n\t * @param widgetLabel The label to search for\n\t * @returns boolean indicating if a widget registry item exists\n\t */\n\thas(label: RegistryLabel): boolean;\n\n\t/**\n\t * Define an Injector against a label\n\t *\n\t * @param label The label of the injector to register\n\t * @param registryItem The injector factory\n\t */\n\tdefineInjector(label: RegistryLabel, injectorFactory: InjectorFactory): void;\n\n\t/**\n\t * Return an Injector registry item for the given label, null if an entry doesn't exist\n\t *\n\t * @param label The label of the injector to return\n\t * @returns The RegistryItem for the widgetLabel, `null` if no entry exists\n\t */\n\tgetInjector<T>(label: RegistryLabel): InjectorItem<T> | null;\n\n\t/**\n\t * Returns a boolean if an injector for the label exists\n\t *\n\t * @param widgetLabel The label to search for\n\t * @returns boolean indicating if a injector registry item exists\n\t */\n\thasInjector(label: RegistryLabel): boolean;\n}\n\n/**\n * Checks is the item is a subclass of WidgetBase (or a WidgetBase)\n *\n * @param item the item to check\n * @returns true/false indicating if the item is a WidgetBaseConstructor\n */\nexport function isWidgetBaseConstructor<T extends WidgetBaseInterface = any>(item: any): item is Constructor<T> {\n\treturn Boolean(item && item._type === WIDGET_BASE_TYPE);\n}\n\nexport function isWidgetFunction(item: any): item is Callback<any, any, any, RenderResult> {\n\treturn Boolean(item && item.isWidget);\n}\n\nexport function isWNodeFactory<W extends WidgetBaseTypes>(node: any): node is WNodeFactory<W> {\n\tif (typeof node === 'function' && node.isFactory) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\nexport function isWidget<T extends WidgetBaseInterface = any>(\n\titem: any\n): item is Constructor<T> | Callback<any, any, any, RenderResult> {\n\treturn isWidgetBaseConstructor(item) || isWidgetFunction(item);\n}\n\nexport function isWidgetConstructorDefaultExport<T extends WidgetBaseTypes>(\n\titem: any\n): item is ESMDefaultWidgetBase<T> {\n\treturn Boolean(\n\t\titem &&\n\t\t\titem.hasOwnProperty('__esModule') &&\n\t\t\titem.hasOwnProperty('default') &&\n\t\t\t(isWidget(item.default) || isWNodeFactory(item.default))\n\t);\n}\n\n/**\n * The Registry implementation\n */\nexport class Registry extends Evented<{}, RegistryLabel, RegistryEventObject> implements RegistryInterface {\n\t/**\n\t * internal map of labels and RegistryItem\n\t */\n\tprivate _widgetRegistry: Map<RegistryLabel, RegistryItem> | undefined;\n\n\tprivate _injectorRegistry: Map<RegistryLabel, InjectorItem> | undefined;\n\n\t/**\n\t * Emit loaded event for registry label\n\t */\n\tprivate emitLoadedEvent(\n\t\twidgetLabel: RegistryLabel,\n\t\titem:\n\t\t\t| DefaultChildrenWNodeFactory<any>\n\t\t\t| OptionalWNodeFactory<any>\n\t\t\t| WNodeFactory<any>\n\t\t\t| WidgetBaseConstructor\n\t\t\t| InjectorItem\n\t): void {\n\t\tthis.emit({\n\t\t\ttype: widgetLabel,\n\t\t\taction: 'loaded',\n\t\t\titem\n\t\t});\n\t}\n\n\tpublic define(label: RegistryLabel, item: RegistryItem): void {\n\t\tif (this._widgetRegistry === undefined) {\n\t\t\tthis._widgetRegistry = new Map();\n\t\t}\n\n\t\tif (this._widgetRegistry.has(label)) {\n\t\t\tthrow new Error(`widget has already been registered for '${label.toString()}'`);\n\t\t}\n\n\t\tthis._widgetRegistry.set(label, item);\n\n\t\tif (item instanceof Promise) {\n\t\t\titem.then(\n\t\t\t\t(widgetCtor) => {\n\t\t\t\t\tthis._widgetRegistry!.set(label, widgetCtor);\n\t\t\t\t\tthis.emitLoadedEvent(label, widgetCtor);\n\t\t\t\t\treturn widgetCtor;\n\t\t\t\t},\n\t\t\t\t(error) => {\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t);\n\t\t} else if (isWidgetBaseConstructor(item)) {\n\t\t\tthis.emitLoadedEvent(label, item);\n\t\t}\n\t}\n\n\tpublic defineInjector(label: RegistryLabel, injectorFactory: InjectorFactory): void {\n\t\tif (this._injectorRegistry === undefined) {\n\t\t\tthis._injectorRegistry = new Map();\n\t\t}\n\n\t\tif (this._injectorRegistry.has(label)) {\n\t\t\tthrow new Error(`injector has already been registered for '${label.toString()}'`);\n\t\t}\n\n\t\tconst invalidator = new Evented();\n\n\t\tconst injectorItem: InjectorItem = {\n\t\t\tinjector: injectorFactory(() => invalidator.emit({ type: 'invalidate' })),\n\t\t\tinvalidator\n\t\t};\n\n\t\tthis._injectorRegistry.set(label, injectorItem);\n\t\tthis.emitLoadedEvent(label, injectorItem);\n\t}\n\n\tpublic get(\n\t\tlabel: RegistryLabel\n\t): WNodeFactory<any> | Callback<any, any, any, RenderResult> | Constructor<any> | null;\n\tpublic get<T extends WNodeFactory<any>>(label: RegistryLabel): T | null;\n\tpublic get<T extends Callback<any, any, any, RenderResult>>(label: RegistryLabel): T | null;\n\tpublic get<T extends WidgetBaseInterface = WidgetBaseInterface>(label: RegistryLabel): Constructor<T> | null;\n\tpublic get<T extends WidgetBaseInterface = WidgetBaseInterface>(\n\t\tlabel: RegistryLabel\n\t): WNodeFactory<T> | Callback<any, any, any, RenderResult> | Constructor<T> | null {\n\t\tif (!this._widgetRegistry || !this.has(label)) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst item = this._widgetRegistry.get(label);\n\n\t\tif (isWidget<T>(item) || isWNodeFactory(item)) {\n\t\t\treturn item as any;\n\t\t}\n\n\t\tif (item instanceof Promise) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst promise = (<WidgetBaseConstructorFunction>item)();\n\t\tthis._widgetRegistry.set(label, promise);\n\n\t\tpromise.then(\n\t\t\t(widgetCtor: any) => {\n\t\t\t\tif (isWidgetConstructorDefaultExport<T>(widgetCtor)) {\n\t\t\t\t\twidgetCtor = widgetCtor.default;\n\t\t\t\t}\n\n\t\t\t\tthis._widgetRegistry!.set(label, widgetCtor);\n\t\t\t\tthis.emitLoadedEvent(label, widgetCtor);\n\t\t\t\treturn widgetCtor;\n\t\t\t},\n\t\t\t(error) => {\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t);\n\n\t\treturn null;\n\t}\n\n\tpublic getInjector<T>(label: RegistryLabel): InjectorItem<T> | null {\n\t\tif (!this._injectorRegistry || !this.hasInjector(label)) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this._injectorRegistry.get(label)!;\n\t}\n\n\tpublic has(label: RegistryLabel): boolean {\n\t\treturn Boolean(this._widgetRegistry && this._widgetRegistry.has(label));\n\t}\n\n\tpublic hasInjector(label: RegistryLabel): boolean {\n\t\treturn Boolean(this._injectorRegistry && this._injectorRegistry.has(label));\n\t}\n}\n\nexport default Registry;\n","import { create, v } from '../core/vdom';\nimport has from '../core/has';\nimport injector from '../core/middleware/injector';\nimport { VNodeProperties } from '../core/interfaces';\nimport { Params } from './interfaces';\nimport Router from './Router';\n\nexport interface LinkProperties extends VNodeProperties {\n\tkey?: string;\n\trouterKey?: string;\n\tisOutlet?: boolean;\n\tparams?: Params;\n\tonClick?: (event: MouseEvent) => void;\n\tto: string;\n}\n\nconst factory = create({ injector }).properties<LinkProperties>();\n\nexport const Link = factory(function Link({ middleware: { injector }, properties, children }) {\n\tlet { routerKey = 'router', to, isOutlet = true, target, params = {}, onClick, ...props } = properties();\n\tconst router = injector.get<Router>(routerKey);\n\tlet href: string | undefined = to;\n\n\tlet linkProps: VNodeProperties;\n\tif (router) {\n\t\tif (isOutlet) {\n\t\t\thref = router.link(href, params);\n\t\t}\n\t\tconst onclick = (event: MouseEvent) => {\n\t\t\tonClick && onClick(event);\n\n\t\t\tif (!event.defaultPrevented && event.button === 0 && !event.metaKey && !event.ctrlKey && !target) {\n\t\t\t\tif (!has('build-serve') || !has('build-time-rendered')) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\thref !== undefined && router.setPath(href);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\tlinkProps = { ...props, onclick, href };\n\t} else {\n\t\tlinkProps = { ...props, href };\n\t}\n\treturn v('a', linkProps, children());\n});\n\nexport default Link;\n","import Promise from '../shim/Promise';\n\n/**\n * Used through the toolkit as a consistent API to manage how callers can \"cleanup\"\n * when doing a function.\n */\nexport interface Handle {\n\t/**\n\t * Perform the destruction/cleanup logic associated with this Handle\n\t */\n\tdestroy(): void;\n}\n\n/**\n * No op function used to replace a Destroyable instance's `destroy` method, once the instance has been destroyed\n */\nfunction noop(): Promise<boolean> {\n\treturn Promise.resolve(false);\n}\n\n/**\n * No op function used to replace a Destroyable instance's `own` method, once the instance has been destroyed\n */\nfunction destroyed(): never {\n\tthrow new Error('Call made to destroyed method');\n}\n\nexport class Destroyable {\n\t/**\n\t * The instance's handles\n\t */\n\tprivate handles: Handle[];\n\n\t/**\n\t * @constructor\n\t */\n\tconstructor() {\n\t\tthis.handles = [];\n\t}\n\n\t/**\n\t * Register handles for the instance that will be destroyed when `this.destroy` is called\n\t *\n\t * @param {Handle} handle The handle to add for the instance\n\t * @returns {Handle} A wrapper Handle. When the wrapper Handle's `destroy` method is invoked, the original handle is\n\t *                   removed from the instance, and its `destroy` method is invoked.\n\t */\n\town(handle: Handle): Handle {\n\t\tconst { handles: _handles } = this;\n\t\t_handles.push(handle);\n\t\treturn {\n\t\t\tdestroy() {\n\t\t\t\t_handles.splice(_handles.indexOf(handle));\n\t\t\t\thandle.destroy();\n\t\t\t}\n\t\t};\n\t}\n\n\t/**\n\t * Destroys all handlers registered for the instance\n\t *\n\t * @returns {Promise<any} A Promise that resolves once all handles have been destroyed\n\t */\n\tdestroy(): Promise<any> {\n\t\treturn new Promise((resolve) => {\n\t\t\tthis.handles.forEach((handle) => {\n\t\t\t\thandle && handle.destroy && handle.destroy();\n\t\t\t});\n\t\t\tthis.destroy = noop;\n\t\t\tthis.own = destroyed;\n\t\t\tresolve(true);\n\t\t});\n\t}\n}\n\nexport default Destroyable;\n","import Map from '../shim/Map';\nimport { Destroyable, Handle } from './Destroyable';\n\n/**\n * Map of computed regular expressions, keyed by string\n */\nconst regexMap = new Map<string, RegExp>();\n\nexport type EventType = string | symbol;\n\n/**\n * The base event object, which provides a `type` property\n */\nexport interface EventObject<T = EventType> {\n\t/**\n\t * The type of the event\n\t */\n\treadonly type: T;\n}\n\n/**\n * Determines if the event type glob has been matched\n *\n * @returns boolean that indicates if the glob is matched\n */\nexport function isGlobMatch(globString: string | symbol, targetString: string | symbol): boolean {\n\tif (typeof targetString === 'string' && typeof globString === 'string' && globString.indexOf('*') !== -1) {\n\t\tlet regex: RegExp;\n\t\tif (regexMap.has(globString)) {\n\t\t\tregex = regexMap.get(globString)!;\n\t\t} else {\n\t\t\tregex = new RegExp(`^${globString.replace(/\\*/g, '.*')}$`);\n\t\t\tregexMap.set(globString, regex);\n\t\t}\n\t\treturn regex.test(targetString);\n\t} else {\n\t\treturn globString === targetString;\n\t}\n}\n\nexport type EventedCallback<T = EventType, E extends EventObject<T> = EventObject<T>> = {\n\t/**\n\t * A callback that takes an `event` argument\n\t *\n\t * @param event The event object\n\t */\n\n\t(event: E): boolean | void;\n};\n\nexport interface CustomEventTypes<T extends EventObject<any> = EventObject<any>> {\n\t[index: string]: T;\n}\n\n/**\n * A type which is either a targeted event listener or an array of listeners\n * @template T The type of target for the events\n * @template E The event type for the events\n */\nexport type EventedCallbackOrArray<T = EventType, E extends EventObject<T> = EventObject<T>> =\n\t| EventedCallback<T, E>\n\t| EventedCallback<T, E>[];\n\n/**\n * Event Class\n */\nexport class Evented<\n\tM extends CustomEventTypes = {},\n\tT = EventType,\n\tO extends EventObject<T> = EventObject<T>\n> extends Destroyable {\n\t// The following member is purely so TypeScript remembers the type of `M` when extending so\n\t// that the utilities in `on.ts` will work https://github.com/Microsoft/TypeScript/issues/20348\n\t// tslint:disable-next-line\n\tprotected __typeMap__?: M;\n\t/**\n\t * map of listeners keyed by event type\n\t */\n\tprotected listenersMap: Map<T | keyof M, EventedCallback<T, O>[]> = new Map();\n\n\t/**\n\t * Emits the event object for the specified type\n\t *\n\t * @param event the event to emit\n\t */\n\temit<K extends keyof M>(event: M[K]): void;\n\temit(event: O): void;\n\temit(event: any): void {\n\t\tthis.listenersMap.forEach((methods, type) => {\n\t\t\tif (isGlobMatch(type as any, event.type)) {\n\t\t\t\t[...methods].forEach((method) => {\n\t\t\t\t\tmethod.call(this, event);\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Catch all handler for various call signatures. The signatures are defined in\n\t * `BaseEventedEvents`.  You can add your own event type -> handler types by extending\n\t * `BaseEventedEvents`.  See example for details.\n\t *\n\t * @param args\n\t *\n\t * @example\n\t *\n\t * interface WidgetBaseEvents extends BaseEventedEvents {\n\t *     (type: 'properties:changed', handler: PropertiesChangedHandler): Handle;\n\t * }\n\t * class WidgetBase extends Evented {\n\t *    on: WidgetBaseEvents;\n\t * }\n\t *\n\t * @return {any}\n\t */\n\ton<K extends keyof M>(type: K, listener: EventedCallbackOrArray<K, M[K]>): Handle;\n\ton(type: T, listener: EventedCallbackOrArray<T, O>): Handle;\n\ton(type: any, listener: EventedCallbackOrArray<any, any>): Handle {\n\t\tif (Array.isArray(listener)) {\n\t\t\tconst handles = listener.map((listener) => this._addListener(type, listener));\n\t\t\treturn {\n\t\t\t\tdestroy() {\n\t\t\t\t\thandles.forEach((handle) => handle.destroy());\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\treturn this._addListener(type, listener);\n\t}\n\n\tprivate _addListener(type: T | keyof M, listener: EventedCallback<T, O>) {\n\t\tconst listeners = this.listenersMap.get(type) || [];\n\t\tlisteners.push(listener);\n\t\tthis.listenersMap.set(type, listeners);\n\t\treturn {\n\t\t\tdestroy: () => {\n\t\t\t\tconst listeners = this.listenersMap.get(type) || [];\n\t\t\t\tlisteners.splice(listeners.indexOf(listener), 1);\n\t\t\t}\n\t\t};\n\t}\n}\n\nexport default Evented;\n","import { create, getRegistry, invalidator, destroy } from '../vdom';\nimport { RegistryLabel } from '../interfaces';\nimport { Handle } from '../Destroyable';\n\nconst injectorFactory = create({ getRegistry, invalidator, destroy });\n\nexport const injector = injectorFactory(({ middleware: { getRegistry, invalidator, destroy } }) => {\n\tconst handles: Handle[] = [];\n\tdestroy(() => {\n\t\tlet handle: Handle | undefined;\n\t\twhile ((handle = handles.pop())) {\n\t\t\thandle.destroy();\n\t\t}\n\t});\n\tconst registry = getRegistry();\n\treturn {\n\t\tsubscribe(label: RegistryLabel, callback: Function = invalidator) {\n\t\t\tif (registry) {\n\t\t\t\tconst item = registry.getInjector(label);\n\t\t\t\tif (item) {\n\t\t\t\t\tconst handle = item.invalidator.on('invalidate', () => {\n\t\t\t\t\t\tcallback();\n\t\t\t\t\t});\n\t\t\t\t\thandles.push(handle);\n\t\t\t\t\treturn () => {\n\t\t\t\t\t\tconst index = handles.indexOf(handle);\n\t\t\t\t\t\tif (index !== -1) {\n\t\t\t\t\t\t\thandles.splice(index, 1);\n\t\t\t\t\t\t\thandle.destroy();\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tget<T>(label: RegistryLabel): T | null {\n\t\t\tif (registry) {\n\t\t\t\tconst item = registry.getInjector<T>(label);\n\t\t\t\tif (item) {\n\t\t\t\t\treturn item.injector();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t};\n});\n\nexport default injector;\n","/* tslint:disable:interface-name */\nimport Map from '../../shim/Map';\nimport { create, invalidator, destroy } from '../vdom';\n\nconst factory = create({ invalidator, destroy });\n\ninterface CacheWrapper {\n\tstatus: 'pending' | 'resolved';\n\tvalue: any;\n}\n\nexport interface ICacheResult<S = void> {\n\tgetOrSet: {\n\t\t<T extends void extends S ? any : keyof S>(\n\t\t\tkey: void extends S ? any : T,\n\t\t\tvalue: void extends S ? () => Promise<T> : () => Promise<S[T]>,\n\t\t\tinvalidate?: boolean\n\t\t): void extends S ? undefined | T : undefined | S[T];\n\t\t<T extends void extends S ? any : keyof S>(\n\t\t\tkey: void extends S ? any : T,\n\t\t\tvalue: void extends S ? () => T : () => S[T],\n\t\t\tinvalidate?: boolean\n\t\t): void extends S ? T : S[T];\n\t\t<T extends void extends S ? any : keyof S>(\n\t\t\tkey: void extends S ? any : T,\n\t\t\tvalue: void extends S ? T : S[T],\n\t\t\tinvalidate?: boolean\n\t\t): void extends S ? T : S[T];\n\t};\n\tget<T extends void extends S ? any : keyof S>(\n\t\tkey: void extends S ? any : T\n\t): void extends S ? T | undefined : S[T] | undefined;\n\tset: {\n\t\t<T extends void extends S ? any : keyof S>(\n\t\t\tkey: void extends S ? any : T,\n\t\t\tvalue: void extends S ? (value: T | undefined) => Promise<T> : (value: S[T] | undefined) => Promise<S[T]>,\n\t\t\tinvalidate?: boolean\n\t\t): void extends S ? T | undefined : S[T] | undefined;\n\t\t<T extends void extends S ? any : keyof S>(\n\t\t\tkey: void extends S ? any : T,\n\t\t\tvalue: void extends S ? (value: T | undefined) => T : (value: S[T] | undefined) => S[T],\n\t\t\tinvalidate?: boolean\n\t\t): void extends S ? T : S[T];\n\t\t<T extends void extends S ? any : keyof S>(\n\t\t\tkey: void extends S ? any : T,\n\t\t\tvalue: void extends S ? T : S[T],\n\t\t\tinvalidate?: boolean\n\t\t): void extends S ? T : S[T];\n\t};\n\thas<T extends void extends S ? any : keyof S>(key: void extends S ? any : T): boolean;\n\tdelete<T extends void extends S ? any : keyof S>(key: void extends S ? any : T, invalidate?: boolean): void;\n\tclear(invalidate?: boolean): void;\n}\n\nexport function createICacheMiddleware<S = void>() {\n\tconst icache = factory(\n\t\t({ middleware: { invalidator, destroy } }): ICacheResult<S> => {\n\t\t\tconst cacheMap = new Map<string, CacheWrapper>();\n\t\t\tdestroy(() => {\n\t\t\t\tcacheMap.clear();\n\t\t\t});\n\n\t\t\tconst api: any = {\n\t\t\t\tget: (key: any): any => {\n\t\t\t\t\tconst cachedValue = cacheMap.get(key);\n\t\t\t\t\tif (!cachedValue || cachedValue.status === 'pending') {\n\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t}\n\t\t\t\t\treturn cachedValue.value;\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tapi.set = (key: any, value: any, invalidate: boolean = true): any => {\n\t\t\t\tconst current = api.get(key);\n\t\t\t\tif (typeof value === 'function') {\n\t\t\t\t\tvalue = value(current);\n\t\t\t\t\tif (value && typeof value.then === 'function') {\n\t\t\t\t\t\tcacheMap.set(key, {\n\t\t\t\t\t\t\tstatus: 'pending',\n\t\t\t\t\t\t\tvalue\n\t\t\t\t\t\t});\n\t\t\t\t\t\tvalue.then((result: any) => {\n\t\t\t\t\t\t\tconst cachedValue = cacheMap.get(key);\n\t\t\t\t\t\t\tif (cachedValue && cachedValue.value === value) {\n\t\t\t\t\t\t\t\tcacheMap.set(key, {\n\t\t\t\t\t\t\t\t\tstatus: 'resolved',\n\t\t\t\t\t\t\t\t\tvalue: result\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tinvalidate && invalidator();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcacheMap.set(key, {\n\t\t\t\t\tstatus: 'resolved',\n\t\t\t\t\tvalue\n\t\t\t\t});\n\t\t\t\tinvalidate && invalidator();\n\t\t\t\treturn value;\n\t\t\t};\n\t\t\tapi.has = (key: any) => {\n\t\t\t\treturn cacheMap.has(key);\n\t\t\t};\n\t\t\tapi.delete = (key: any, invalidate: boolean = true) => {\n\t\t\t\tcacheMap.delete(key);\n\t\t\t\tinvalidate && invalidator();\n\t\t\t};\n\t\t\tapi.clear = (invalidate: boolean = true): void => {\n\t\t\t\tcacheMap.clear();\n\t\t\t\tinvalidate && invalidator();\n\t\t\t};\n\t\t\tapi.getOrSet = (key: any, value: any, invalidate: boolean = true): any | undefined => {\n\t\t\t\tlet cachedValue = cacheMap.get(key);\n\t\t\t\tif (!cachedValue) {\n\t\t\t\t\tapi.set(key, value, invalidate);\n\t\t\t\t}\n\t\t\t\tcachedValue = cacheMap.get(key);\n\t\t\t\tif (!cachedValue || cachedValue.status === 'pending') {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t\treturn cachedValue.value;\n\t\t\t};\n\t\t\treturn api;\n\t\t}\n\t);\n\treturn icache;\n}\n\nexport const icache = createICacheMiddleware();\n\nexport default icache;\n","import { create, defer, decrementBlockCount, incrementBlockCount } from '../vdom';\nimport icache from './icache';\n\nconst blockFactory = create({ defer, icache });\n\nexport const block = blockFactory(({ middleware: { icache, defer } }) => {\n\tlet id = 1;\n\treturn <T extends (...args: any[]) => any>(module: T) => {\n\t\treturn (...args: Parameters<T>): (ReturnType<T> extends Promise<infer U> ? U : ReturnType<T>) | null => {\n\t\t\tconst argsString = JSON.stringify(args);\n\t\t\tconst moduleId = icache.get(module) || id++;\n\t\t\ticache.set(module, moduleId, false);\n\t\t\tconst cachedValue = icache.getOrSet(`${moduleId}-${argsString}`, async () => {\n\t\t\t\tincrementBlockCount();\n\t\t\t\tconst run = module(...args);\n\t\t\t\tdefer.pause();\n\t\t\t\tconst result = await run;\n\t\t\t\tdecrementBlockCount();\n\t\t\t\tdefer.resume();\n\t\t\t\treturn result;\n\t\t\t});\n\t\t\treturn cachedValue || null;\n\t\t};\n\t};\n});\n\nexport default block;\n","const options = { year: 'numeric', month: 'long', day: 'numeric' };\nconst formatter = new Intl.DateTimeFormat('en-US', options);\n\nexport function dateFormatter(date: Date) {\n\treturn formatter.format(date);\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\" _key\":\"learn-dojo/Footer\",\"root\":\"Footer-m__root__5737d01zPMX\",\"details\":\"Footer-m__details__5737d02pZwP\",\"logo\":\"Footer-m__logo__5737d02kD38\",\"link\":\"Footer-m__link__5737d03-JoA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\" _key\":\"learn-dojo/Header\",\"root\":\"Header-m__root__5737d015XcQ\",\"title\":\"Header-m__title__5737d03OSiY\",\"link\":\"Header-m__link__5737d02GEKH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\" _key\":\"learn-dojo/Hero\",\"root\":\"Hero-m__root__5737d012HF4\",\"image\":\"Hero-m__image__5737d02nrHx\",\"description\":\"Hero-m__description__5737d03I4v5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\" _key\":\"learn-dojo/SignUp\",\"root\":\"SignUp-m__root__5737d01pvR6\",\"title\":\"SignUp-m__title__5737d02WSYN\",\"email\":\"SignUp-m__email__5737d020Zk1\",\"form\":\"SignUp-m__form__5737d01C66N\",\"gridcontainer\":\"SignUp-m__gridcontainer__5737d01Rne0\",\"column\":\"SignUp-m__column__5737d01NIGa\",\"gdpr\":\"SignUp-m__gdpr__5737d01Y92a\",\"gdprcheck\":\"SignUp-m__gdprcheck__5737d02qi1q\",\"checkbox\":\"SignUp-m__checkbox__5737d01sBso\",\"info\":\"SignUp-m__info__5737d03AU2H\",\"input\":\"SignUp-m__input__5737d02oS1c\",\"fieldset\":\"SignUp-m__fieldset__5737d02wCAE\",\"link\":\"SignUp-m__link__5737d03d58p\",\"submit\":\"SignUp-m__submit__5737d02mNG6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\" _key\":\"learn-dojo/Layout\",\"root\":\"Layout-m__root__5737d03l2TO\",\"section\":\"Layout-m__section__5737d01sUgf\"};"],"sourceRoot":""}